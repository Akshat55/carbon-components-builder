{"version":3,"sources":["assets/component-icons/button.svg","assets/component-icons/checkbox.svg","assets/component-icons/grid.svg","assets/component-icons/text-area.svg","assets/component-icons/text-input.svg","assets/component-icons/text.svg","assets/dashboard-empty-state.svg","assets/chart-404.svg","components/header.tsx","components/header-menu-item-link.tsx","context/fragments-context.tsx","styles.ts","components/link-button.tsx","components/main.tsx","routes/edit/tools.ts","context/notification-context.tsx","context/modal-context.tsx","fragment-components/a-component.tsx","components/css-class-selector.tsx","fragment-components/a-button.tsx","fragment-components/a-checkbox.tsx","fragment-components/a-column.tsx","fragment-components/a-grid.tsx","fragment-components/a-row.tsx","fragment-components/a-text.tsx","fragment-components/a-textarea.tsx","fragment-components/a-textinput.tsx","utils/fragment-tools.ts","components/fragment.tsx","components/grid.tsx","components/notification.tsx","components/left-pane.tsx","routes/edit/share-options/share-options-modal.tsx","routes/edit/share-options/exports/create-fragment-sandbox.ts","routes/edit/share-options/exports/frameworks/react-fragment.ts","routes/edit/share-options/exports/frameworks/angular-fragment.ts","routes/edit/share-options/exports/frameworks/vanilla-fragment.ts","routes/edit/share-options/exports/frameworks/vue-fragment.ts","utils/file-tools.ts","routes/edit/share-options/exports/export-code-modal.tsx","components/selection-tile.tsx","routes/edit/share-options/exports/export-image-modal.tsx","context/local-fragments-context.tsx","routes/edit/index.tsx","routes/edit/duplicate-fragment-modal.tsx","routes/edit/delete-fragment-modal.tsx","routes/edit/settings-fragment-modal.tsx","routes/edit/fragment-modal.tsx","routes/edit/edit-header.tsx","components/element-tile.tsx","routes/edit/elements-pane.tsx","routes/edit/style-pane.tsx","routes/edit/code-pane.tsx","routes/edit/export-pane.tsx","routes/edit/selected-component-breadcrumbs.tsx","routes/edit/style-context-pane.tsx","routes/edit/code-context-pane.tsx","routes/dashboard/dashboard-search.tsx","routes/dashboard/dashboard-header.tsx","routes/dashboard/fragment-wizard/create-fragment-modal.tsx","routes/dashboard/fragment-tile.tsx","routes/dashboard/fragment-tile-list.tsx","routes/dashboard/fragment-wizard/generate-new-fragment.ts","routes/dashboard/fragment-wizard/fragment-wizard.tsx","routes/dashboard/fragment-wizard/choose-fragment-modal.tsx","routes/dashboard/fragment-wizard/import-json-modal.tsx","routes/dashboard/index.tsx","routes/not-found.tsx","routes/error-boundary.tsx","components/ui-shell.tsx","app.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","isSideNavExpanded","setIsSideNavExpanded","history","useHistory","headerName","css","aria-label","role","tabIndex","isActive","onClick","prefix","title","className","push","onKeyDown","event","key","HeaderMenuItemLinkBase","this","props","to","rest","staticContext","Component","HeaderMenuItemLinkRouter","withRouter","HeaderMenuItemLink","forwardRef","ref","displayName","FragmentActionType","main","Button","cx","Main","drag","dragObj","stopPropagation","dataTransfer","setData","JSON","stringify","FragmentsContext","createContext","NotificationActionType","useFetchOne","id","dispatch","useEffect","type","FETCH_ONE","data","useFragment","context","useContext","console","info","_","state","pathSegments","location","pathname","split","currentId","length","fragments","find","fragment","UPDATE_ONE","loaded","fragmentsReducer","action","UPDATE_ALL","updatedFragments","filter","some","actionFragment","map","updatedFragment","assign","concat","every","updatedFragmentState","updateOne","REMOVE_FRAGMENT","TOGGLE_VISIBILITY","hidden","REMOVE_FRAGMENTS","remainingFragments","ids","ADD_ONE","duplicate","expandedFragments","FragmentsContextProvider","localFragments","children","initialState","parse","localStorage","getItem","Array","isArray","store","useReducer","filteredFragments","setItem","Provider","value","NotificationContext","ModalActionType","ModalType","notifications","notificationCounter","NotificationReducer","REMOVE_NOTIFICATION","notification","ADD_NOTIFICATION","NotificationContextProvider","headerStyle","iconStyle","AComponentCodeUI","selectedComponent","setComponent","dropStyle","dropStyleBefore","dropStyleAfter","AComponent","componentObj","select","selected","remove","headingCss","setFragment","useState","showDragOverIndicator","setShowDragOverIndicator","dragOverPosition","setDragOverPosition","holderRef","useRef","isDragOverBefore","current","offsetWidth","offsetHeight","draggable","onDragStart","component","onDragEnter","onDragLeave","onDragOver","rect","currentTarget","getBoundingClientRect","pageX","left","pageY","top","onDrop","preventDefault","getData","updatedState","getParentComponent","items","indexOf","compareClasses","sc1","sc2","name","CssClassSelector","styleClasses","selectedClasses","setSelectedClasses","_getAvailableClasses","sc","ssc","sort","availableClasses","setAvailableClasses","style","marginTop","FormLabel","styleClass","Tag","onClose","c","deselectStyleClass","selectStyleClass","AButtonStyleUI","kindItems","text","TextInput","labelText","onChange","Dropdown","label","titleText","initialSelectedItem","item","kind","itemToString","selectedItem","cssClasses","AButton","disabled","cc","join","ACheckboxStyleUI","ACheckboxCodeUI","codeContext","ACheckbox","Checkbox","helpIconStyle","AColumnStyleUI","onNumInputchange","imaginaryTarget","Number","isAccordionOpen","setIsAccordionOpen","small","smallSpan","smallOffset","medium","mediumSpan","mediumOffset","large","largeSpan","largeOffset","xLarge","xLargeSpan","xLargeOffset","max","maxSpan","maxOffset","href","target","rel","Accordion","align","AccordionItem","open","NumberInput","min","addStyle","addStyleLeft","addStyleRight","AColumn","parentComponent","addCell","offset","Column","sm","span","undefined","md","lg","xlg","AGridStyleUI","checked","showOutline","condensed","fullWidth","narrow","showOutlineStyle","AGrid","Grid","ARowStyleUI","addStyleTop","addStyleBottom","ARow","addRow","ATextStyleUI","AText","ATextAreaStyleUI","helperText","placeholder","ATextAreaCodeUI","ATextArea","TextArea","ATextInputStyleUI","typeItems","inputType","defaultValue","ATextInputCodeUI","log","ATextInput","sleep","ms","Promise","resolve","setTimeout","getFragmentPreview","a","element","document","createElement","position","zIndex","width","height","minHeight","ReactDOM","render","React","Fragment","body","appendChild","domtoimage","toBlob","imageBlob","getAllFragmentStyleClasses","Object","values","getAllComponentStyleClasses","forEach","cssClass","co","coClasses","hasFragmentStyleClasses","hasComponentStyleClasses","canvas","allowDrop","componentCounter","getSelectedComponent","getComponentById","i","selectedComponentId","stateWithoutComponent","componentId","componentIndex","findIndex","slice","componentsThatNeedNames","updatedList","list","dropInIndex","dropInId","initializeIds","includes","child","parent","SkeletonPlaceholder","getHighestId","Math","drop","content","renderComponents","row","column","Row","styles","Col","cols","notificationStyle","minWidth","notificationAreaStyle","Notification","index","lowContrast","aria-live","subtitle","message","caption","onCloseButtonClick","onNotificationClose","actions","actionFunction","actionText","ModalContext","ShareOptionsModals","Exports","ShowModal","FragmentID","modalReducer","setDuplicationModal","DUPLICATION","setDeletionModal","DELETION","setShareModal","SHARING","setSettingsModal","SETTINGS","setExportModal","EXPORT","closeModal","ModalContextProvider","modal","createFragmentSandbox","fragmentTemplate","files","keys","filePath","LZString","compressToBase64","replace","format","source","options","formatPrettier","addIfNotExist","arr","getCellAttributeString","cell","sizeShort","sizeLong","spanString","offsetString","spanAndOffset","jsonToTemplate","json","classNames","j","getCellParamsString","generateTemplate","carbonImportsString","jsonToImports","imports","reduce","string","curr","template","jsonToAngularImports","nameStringToVariableString","camelCase","createAngularApp","formatOptionsTypescript","plugins","parserBabel","trailingComma","useTabs","parser","formatOptionsHtml","parserHtml","formatOptionsCss","parserCss","fragmentModuleTs","fragmentComponentTs","getAngularInputsFromJson","getOne","getAngularOutputsFromJson","fragmentComponentHtml","fragmentComponentScss","dependencies","fragmentTagMap","dataAndOptions","saveBlob","blob","fileName","url","URL","createObjectURL","anchor","download","click","saveFile","revokeObjectURL","warningNotificationProps","notificationType","exportCodeModalStyle","codeSnippetWrapper","titleWrapper","codeSnippet","ExportCode","displayedModal","setDisplayedModal","modalState","dispatchModal","jsonCode","vanillaCode","fragmentData","fragmentType","d3","createVanillaApp","reactCode","formatOptions","componentJs","componentScss","react","emotion","createReactApp","angularCode","vueCode","vue","createVueApp","generateSandboxUrl","parameters","Modal","hasForm","CODE_EXPORTS","onRequestClose","primaryButtonText","secondaryButtonText","onRequestSubmit","onSecondarySubmit","SHARE_OPTIONS","modalHeading","Tabs","Tab","Blob","CodeSnippet","light","copyButtonDescription","tileFooter","SelectionTile","icon","tag","exportSettingForm","exportSettingFormGroup","previewContainer","selectInputWH","selectInput","fragmentImage","updatePreviewUrl","handleResize","doInputChange","debounce","doUpdatePreviewSize","ExportImageModal","fragmentState","exportSettings","unit","ratioLock","fragmentName","curRatio","inputs","setInputs","preview","previewUrl","setPreviewUrl","isPerformingAction","setIsPerformingAction","previewContainerRef","imageContainerSize","setImageContainerSize","window","addEventListener","removeEventListener","getPreviewSize","fitRatio","previewSize","renderProps","reader","FileReader","readAsDataURL","onloadend","imageUrl","result","toString","onSubmit","mimeType","extension","then","IMAGE_EXPORTS","display","handleChange","src","alt","Loading","active","ExportModalSettings","onDimensionChange","isNaN","toFixed","numInputOnchange","parseFloat","numInputOnClick","inputChange","Form","defaultChecked","Select","SelectItem","exportOptionTileWrapper","exportOptionsWrapper","LocalFragmentActionType","ShareOptionsModal","selectedExportOption","shareOptionsState","setShareOptionsState","handleExportSelection","CODE","IMAGE","primaryButtonDisabled","shareModalSwitcher","LocalFragmentsContext","SelectedLeftPane","REMOVE","ci","ADD","LocalFragmentsContextProvider","lc","DuplicateFragmentModal","dispatchNotification","updateLocalFragments","fragmentsState","useLocation","duplicateFragment","currentlyProcessing","fragmentCopy","nameRegEx","RegExp","String","raw","nameMatch","match","count","nameBase","parseInt","names","highestNumber","n","b","shift","getUniqueName","random","size","DeleteFragmentModal","undoHideFragment","doDeleteFragment","danger","SettingsFragmentModal","setTitle","labels","isTemplate","setIsTemplate","updateFragmentSettings","TooltipDefinition","tooltipText","direction","FragmentModal","editHeader","toolBarAction","fragmentEditToolBar","EditHeader","lastModified","fill","elementTileStyle","ElementTile","searchStyle","elementTileListStyle","ElementsPane","filterString","setFilterString","shouldShow","matches","leftPane","Search","placeHolderText","buttonImg","checkboxImg","textImg","textAreaImg","textInputImg","gridImg","StylePane","setStyleClasses","selectedStyleClassId","setSelectedStyleClassId","getSelectedClass","getSelectedClassIndex","updateSelectedClass","newClass","selectedClassIndex","classSelectorComboRef","createRef","currentValue","textInput","trim","newItem","toLowerCase","ComboBox","CodePane","ExportPane","SelectedComponentBreadcrumbs","Breadcrumb","noTrailingSlash","ancestors","unshift","getAncestors","BreadcrumbItem","isCurrentPage","nativeEvent","selectComponent","StyleContextPane","showComponentStyleOptions","CodeContextPane","showComponentCodeOptions","editPageContent","sideRail","rightPanel","actionsStyle","SortDirection","Edit","_setStyleClasses","params","NONE","selectedLeftPane","setSelectedLeftPane","onRailClick","clickedLeftPane","ELEMENTS","STYLE","SideNav","isRail","SideNavItems","SideNavLink","renderIcon","Development16","ColorPalette16","Code16","Export16","Copy32","TrashCan32","dashboardSearchWrapper","searchInput","sortButton","sortOverflowItem","FragmentGroupDisplayed","DashboardSearch","onSearchHandler","onSortHandler","displayWizard","setDisplayWizard","sortDirection","OverflowMenu","ariaLabel","OverflowMenuItem","itemText","Ascending","Descending","CreateOptions","dashboardHeaderWrapper","fragmentTitle","contentSwitcher","DashboardHeader","onDisplayedSwitchHandler","fragmentGroupDisplayed","ContentSwitcher","selectedIndex","Switch","AllFragments","Templates","tileWrapper","tileStyle","tileInnerWrapperBase","tileInnerWrapper","fragmentOverflow","fragmentInfo","spinner","imagePlaceholderStyle","FragmentTile","setModalFragment","handleModalState","modalAction","resetPreview","Tile","loading","withOverlay","iconDescription","isDelete","svgStyle","placeholderContainer","fragmentRowWrapper","FragmentTileList","v","textAlign","generateNewFragment","Date","toISOString","createFragmentTiles","createFragmentTile","FragmentWizardModals","CreateFragmentModal","selectedCreateOption","setSelectedCreateOption","shouldDisplay","shouldSubmitOnEnter","selectorPrimaryFocus","setShouldDisplay","setLastVisitedModal","CREATE_FRAGMENT_MODAL","IMPORT_JSON","IMPORT_JSON_MODAL","FROM_SCRATCH","CHOOSE_FRAGMENT_MODAL","generatedFragment","generateFragment","CHOOSE_TEMPLATE","fragmentOptions","ChooseFragmentModal","uploadedData","lastVisitedModal","wasDataModified","setUploadedData","originalData","lastId","uid","ImportJsonModal","setFiles","jsonString","_setJsonString","fragmentJson","setFragmentJson","jsonParseError","setJsonParseError","setJsonString","js","e","handleDrop","handleDragover","uploadFile","fileToUpload","filesize","updatedFile","status","invalid","errorSubject","errorBody","file","uuid","invalidFileType","readAsText","onload","onerror","evt","onAddFiles","useCallback","addedFiles","newFiles","multiple","handleFileUploaderItemClick","clickedUuid","FormItem","FileUploaderDropContainer","accept","FileUploaderItem","onDelete","color","marginBottom","FragmentWizard","modalSwitcher","headerRowSyles","searchRowStyles","Dashboard","LocalOnly","setFragmentGroupDisplayed","fragmentTitleFilter","setFragmentTitleFilter","setSortDirection","displayedFragments","filterFragments","fragmentSort","modalFragment","marginLeft","NotFound","goBack","errorHandler","ErrorBoundary","error","UIShell","HeaderContainer","app","Boolean","hostname","basename","path","exact","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9e1e4752.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/button.f75955a0.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkbox.d3c186e8.svg\";","module.exports = __webpack_public_path__ + \"static/media/grid.d052e9f8.svg\";","module.exports = __webpack_public_path__ + \"static/media/text-area.947a0503.svg\";","module.exports = __webpack_public_path__ + \"static/media/text-input.e389934c.svg\";","module.exports = __webpack_public_path__ + \"static/media/text.e9252250.svg\";","module.exports = __webpack_public_path__ + \"static/media/dashboard-empty-state.5e050054.svg\";","module.exports = __webpack_public_path__ + \"static/media/chart-404.9bc8debd.svg\";","import React from 'react';\nimport {\n\tHeaderMenuButton,\n\tHeaderName,\n\tHeader as ShellHeader\n} from 'carbon-components-react/lib/components/UIShell';\nimport { css } from 'emotion';\nimport { useHistory } from 'react-router-dom';\n\nexport const Header = ({ isSideNavExpanded, setIsSideNavExpanded }: any) => {\n\tconst history = useHistory();\n\n\tconst headerName = css`\n\t\t&:hover {\n\t\t\tcursor: pointer;\n\t\t}\n\t`;\n\n\treturn (\n\t\t<ShellHeader aria-label=\"IBM Carbon Components Builder\" role='banner' tabIndex={0}>\n\t\t\t<HeaderMenuButton\n\t\t\t\taria-label={`${isSideNavExpanded ? 'Close menu' : 'Open menu'}`}\n\t\t\t\tisActive={isSideNavExpanded}\n\t\t\t\tonClick={() => setIsSideNavExpanded(!isSideNavExpanded)} />\n\t\t\t<HeaderName\n\t\t\t\tprefix=\"IBM\"\n\t\t\t\ttabIndex={0}\n\t\t\t\ttitle='Carbon Components Builder home'\n\t\t\t\tclassName={headerName}\n\t\t\t\tonClick={() => history.push('/')}\n\t\t\t\tonKeyDown={(event: any) => event.key === 'Enter' && history.push('/')}>\n\t\t\t\tCarbon Components Builder {process.env.NODE_ENV === 'development' ? 'Dev' : ''}\n\t\t\t</HeaderName>\n\t\t</ShellHeader>\n\t);\n};\n","import React, {\n\tComponent,\n\tComponentPropsWithRef,\n\tforwardRef\n} from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { HeaderMenuItem } from 'carbon-components-react/lib/components/UIShell';\n\ninterface HeaderMenuItemLinkInterface extends RouteComponentProps, ComponentPropsWithRef<any> { }\n\nclass HeaderMenuItemLinkBase extends Component<HeaderMenuItemLinkInterface> {\n\trender() {\n\t\tconst {\n\t\t\thistory,\n\t\t\tto,\n\t\t\tstaticContext,\n\t\t\t...rest\n\t\t} = this.props as any;\n\t\treturn (\n\t\t\t<HeaderMenuItem\n\t\t\t\tonClick={() => history.push(to)}\n\t\t\t\tonKeyDown={(event: any) => {if (event.key === 'Enter') history.push(to);}}\n\t\t\t\t{...rest} />\n\t\t);\n\t}\n}\n\nexport const HeaderMenuItemLinkRouter = withRouter(HeaderMenuItemLinkBase);\n\nexport const HeaderMenuItemLink = forwardRef<HTMLElement, HeaderMenuItemLinkInterface>(\n\t(props, ref) => <HeaderMenuItemLinkRouter {...props} />\n);\n\n// explicitly set display name\nHeaderMenuItemLink.displayName = 'HeaderMenuItemLink';\n","import React, {\n\tcreateContext,\n\tuseReducer,\n\tuseEffect,\n\tuseContext\n} from 'react';\nimport { useHistory } from 'react-router';\nimport assign from 'lodash/assign';\n\nconst FragmentsContext: React.Context<any> = createContext(null);\nFragmentsContext.displayName = 'FragmentsContext';\n\nexport enum FragmentActionType {\n\tADD_ONE,\n\tFETCH_ONE,\n\tTOGGLE_VISIBILITY,\n\tREMOVE_FRAGMENT,\n\tREMOVE_FRAGMENTS,\n\tUPDATE_ALL,\n\tUPDATE_ONE\n}\n\nexport type FragmentAction =\n\tFragmentActionAddOne |\n\tFragmentActionFetchOne |\n\tFragmentActionRemoveFragment |\n\tFragmentActionToggleVisibility |\n\tFragmentActionRemoveFragments |\n\tFragmentActionUpdateAll |\n\tFragmentActionUpdateOne;\n\nexport interface BaseFragmentAction {\n\ttype: FragmentActionType\n\tloaded: boolean;\n}\n\nexport interface FragmentActionAddOne extends BaseFragmentAction {\n\ttype: FragmentActionType.ADD_ONE;\n\tdata: any;\n}\n\nexport interface FragmentActionFetchOne extends BaseFragmentAction {\n\ttype: FragmentActionType.FETCH_ONE;\n\tdata: any;\n}\n\nexport interface FragmentActionRemoveFragment extends BaseFragmentAction {\n\ttype: FragmentActionType.REMOVE_FRAGMENT;\n\tid: string;\n\tshouldRemove: boolean;\n}\n\nexport interface FragmentActionToggleVisibility extends BaseFragmentAction {\n\ttype: FragmentActionType.TOGGLE_VISIBILITY;\n\tid: string;\n\thidden: boolean;\n}\n\nexport interface FragmentActionRemoveFragments extends BaseFragmentAction {\n\ttype: FragmentActionType.REMOVE_FRAGMENTS;\n\tids: string[];\n}\n\nexport interface FragmentActionUpdateAll extends BaseFragmentAction {\n\ttype: FragmentActionType.UPDATE_ALL;\n\tdata: any;\n}\n\nexport interface FragmentActionUpdateOne extends BaseFragmentAction {\n\ttype: FragmentActionType.UPDATE_ONE;\n\tdata: any;\n}\n\nexport interface FragmentState {\n\tcurrentId: string | null,\n\tfragments: any[],\n\tloaded: boolean\n}\n\nexport const useFetchOne = (id: number, dispatch: any) => {\n\tuseEffect(() => {\n\t\tdispatch({\n\t\t\ttype: FragmentActionType.FETCH_ONE,\n\t\t\tdata: id\n\t\t});\n\t}, [dispatch, id]);\n};\n\nexport const useFragment = (id?: string) => {\n\tconst context = useContext(FragmentsContext);\n\tconst history = useHistory();\n\n\tif (!context) {\n\t\t// this happens when rendering, which is fine because it's used\n\t\t// in AComponent to update the state of the whole fragment due to\n\t\t// user interaction - functionality not needed for render only\n\t\tconsole.info(\"Rendering only, won't be able to update context\");\n\t\treturn [{}, (_: any) => {}];\n\t}\n\n\tconst [state, dispatch] = context;\n\n\tif (!id) {\n\t\tconst location = history.location.pathname;\n\t\tconst pathSegments = location.split('/');\n\t\tid = `${state.currentId || pathSegments[pathSegments.length - 1]}`\n\t}\n\n\tconst fragment = state.fragments.find((fragment: any) => fragment.id === id);\n\tconst setFragment = (fragment: any) => {\n\t\tdispatch({\n\t\t\ttype: FragmentActionType.UPDATE_ONE,\n\t\t\tdata: fragment,\n\t\t\tloaded: true\n\t\t});\n\t};\n\treturn [fragment, setFragment];\n};\n\n\nconst updateOne = (\n\tstate: FragmentState,\n\taction: FragmentActionUpdateOne\n) => {\n\tif (!state.fragments.length) {\n\t\treturn {\n\t\t\tfragments: [action.data],\n\t\t\tloaded: action.loaded,\n\t\t\tcurrentId: action.data.id\n\t\t};\n\t}\n\tconst updatedFragmentState = state.fragments.map((fragment: any) => {\n\t\tif (fragment.id === action.data.id) {\n\t\t\t// Cannot use merge because removing datasets or labels will not\n\t\t\t// work since it keeps the values, while assign overwrites past values.\n\t\t\treturn assign({}, fragment, action.data);\n\t\t}\n\t\treturn fragment;\n\t});\n\n\treturn {\n\t\t...state,\n\t\tfragments: updatedFragmentState,\n\t\tloaded: action.loaded,\n\t\tcurrentId: action.data.id\n\t};\n};\n\nconst fragmentsReducer = (state: FragmentState, action: FragmentAction) => {\n\tswitch (action.type) {\n\t\tcase FragmentActionType.FETCH_ONE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentId: action.data,\n\t\t\t\tloaded: true\n\t\t\t};\n\t\tcase FragmentActionType.UPDATE_ALL: {\n\t\t\tif (!state.fragments || !state.fragments.length) {\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tfragments: action.data,\n\t\t\t\t\tloaded: action.loaded,\n\t\t\t\t\tcurrentId: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Remove fragments which are in the original state but not in the payload.\n\t\t\tconst filteredFragments = state.fragments\n\t\t\t\t.filter((fragment: any) => action.data.some((actionFragment: any) => actionFragment.id === fragment.id));\n\t\t\t// If fragments already exist in the state, we need to merge any changes to the fragments with\n\t\t\t// the current matching fragments and add any new fragments (if any) to the state.\n\t\t\tconst mergedFragments = filteredFragments.map((fragment: any) => {\n\t\t\t// Find the fragment in the payload containing the same id as the current state's fragments\n\t\t\t// to merge updated changes with.\n\t\t\t\tconst updatedFragment = action.data.find((actionFragment: any) => fragment.id === actionFragment.id);\n\t\t\t\t// Can not use merge because removing datasets or labels will not\n\t\t\t\t// work since it keeps the values, while assign overwrites past values.\n\t\t\t\treturn assign({}, fragment, updatedFragment);\n\t\t\t});\n\t\t\t// Adds any fragments in the payload which do not match any id in the current state's fragments.\n\t\t\tconst updatedFragments = mergedFragments\n\t\t\t\t.concat(action.data.filter((actionFragment: any) => (\n\t\t\t\t\tstate.fragments.every((fragment: any) => fragment.id !== actionFragment.id)\n\t\t\t\t)));\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfragments: updatedFragments,\n\t\t\t\tloaded: action.loaded,\n\t\t\t\tcurrentId: null\n\t\t\t};\n\t\t}\n\t\tcase FragmentActionType.UPDATE_ONE:\n\t\t\treturn updateOne(state, action);\n\t\tcase FragmentActionType.REMOVE_FRAGMENT: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfragments: state.fragments.filter((fragment: any) => fragment.id !== action.id),\n\t\t\t\tloaded: action.loaded,\n\t\t\t\tcurrentId: action.id\n\t\t\t};\n\t\t}\n\t\tcase FragmentActionType.TOGGLE_VISIBILITY: {\n\t\t\tconst fragmentToHide = state.fragments.find((fragment: any) => fragment.id === action.id);\n\t\t\tfragmentToHide.hidden = action.hidden;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloaded: action.loaded,\n\t\t\t\tcurrentId: action.id\n\t\t\t};\n\t\t}\n\t\tcase FragmentActionType.REMOVE_FRAGMENTS: {\n\t\t\tconst remainingFragments = state.fragments.filter((fragment: any) => (\n\t\t\t\t!action.ids.some((actionFragment: any) => actionFragment.id === fragment.id)\n\t\t\t));\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfragments: remainingFragments,\n\t\t\t\tloaded: action.loaded,\n\t\t\t\tcurrentId: null\n\t\t\t};\n\t\t}\n\t\tcase FragmentActionType.ADD_ONE: {\n\t\t\tconst duplicate = assign({}, action.data);\n\t\t\tconst expandedFragments = state.fragments.concat(duplicate);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfragments: expandedFragments,\n\t\t\t\tloaded: action.loaded,\n\t\t\t\tcurrentId: action.data.id\n\t\t\t};\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nconst validInitialFragments = (localFragments: any[] | undefined) => {\n\tif (!localFragments || !Array.isArray(localFragments)) {\n\t\treturn [];\n\t}\n\n\treturn localFragments.filter((fragment: any) => !!fragment.id && typeof fragment.id === 'string');\n};\n\nconst FragmentsContextProvider = ({ children }: any) => {\n\tconst initialState: any = {\n\t\tfragments: validInitialFragments(JSON.parse(localStorage.getItem('localFragments') as string)),\n\t\tloaded: false,\n\t\tcurrentId: null\n\t};\n\tconst store = useReducer(fragmentsReducer, initialState);\n\tconst [state, dispatch] = store;\n\n\tuseEffect(() => {\n\t\tconst localFragments = JSON.parse(localStorage.getItem('localFragments') as string || '[]');\n\t\t// clean up the hidden fragments (those marked for deletion but failed to be deleted)\n\t\tconst filteredFragments = localFragments.filter((fragment: any) => !fragment.hidden);\n\t\tdispatch({\n\t\t\ttype: FragmentActionType.UPDATE_ALL,\n\t\t\tdata: filteredFragments,\n\t\t\tloaded: true\n\t\t});\n\t\tlocalStorage.setItem('localFragments', JSON.stringify(filteredFragments));\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tuseEffect(() => {\n\t\t// store only ids to local storage so we don't get into temptation of using other\n\t\t// props that should really be coming from db\n\t\tlocalStorage.setItem('localFragments', JSON.stringify(state.fragments));\n\t}, [state.fragments]);\n\n\treturn (\n\t\t<FragmentsContext.Provider value={store}>\n\t\t\t{children}\n\t\t</FragmentsContext.Provider>\n\t);\n};\n\nexport {\n\tFragmentsContext,\n\tFragmentsContextProvider\n};\n","import { css, cx } from 'emotion';\n\nexport const main = cx(\n\t'bx--content',\n\t'bx--grid',\n\tcss`\n\t\tpadding-top: 0;\n\t\tbackground: #f4f4f4;\n\t\tmin-height: 100vh;\n\t\tmax-width: unset;\n`);\n\nexport const marginTop = (margin = '1rem') => css`margin-top: ${margin};`;\n","import React from 'react';\nimport { Button } from 'carbon-components-react';\nimport { withRouter } from 'react-router-dom';\n\nexport const LinkButton = withRouter((props: any) => {\n\tconst {\n\t\thistory,\n\t\tto,\n\t\tstaticContext,\n\t\t...rest\n\t} = props;\n\treturn <Button onClick={() => history.push(to)} {...rest} />;\n});\n","import React from 'react';\nimport { main } from '../styles';\n\nexport const Main = ({ ...props }) => (\n\t<main className={main} {...props}/>\n);\n","export const drag = (event: any, dragObj: any) => {\n\tevent.stopPropagation();\n    event.dataTransfer.setData(\"drag-object\", JSON.stringify(dragObj));\n}\n","import React, { createContext, useReducer } from 'react';\n\nconst NotificationContext: React.Context<any> = createContext({});\n\nNotificationContext.displayName = 'NotificationContext';\n\nexport type NotificationData = {\n\tkind: string;\n\ttitle: string;\n\tmessage: string;\n\tid: number,\n\taction?: any;\n}\nexport interface BaseNotificationAction {\n\ttype: NotificationActionType,\n\tdata: NotificationData;\n\taction?: Action\n}\n\nexport type NotificationAction =\n\tNotificationActionAdd |\n\tNotificationActionRemove;\n\n\nexport enum NotificationActionType {\n\tADD_NOTIFICATION,\n\tREMOVE_NOTIFICATION\n}\n\nexport interface NotificationActionAdd extends BaseNotificationAction {\n\ttype: NotificationActionType.ADD_NOTIFICATION;\n}\n\nexport interface NotificationActionRemove extends BaseNotificationAction {\n\ttype: NotificationActionType.REMOVE_NOTIFICATION;\n}\n\ninterface Action {\n\tactionText: string,\n\tactionFunction: any,\n\tonNotificationClose: any\n}\n\n\nexport interface NotificationState {\n\tnotifications: NotificationData[]\n}\n\nconst initialState = { notifications: [] };\nlet notificationCounter = 0;\n\nconst NotificationReducer = (state: NotificationState, action: NotificationAction) => {\n\tswitch (action.type) {\n\t\tcase NotificationActionType.REMOVE_NOTIFICATION:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnotifications: state.notifications.filter(\n\t\t\t\t\t(notification: NotificationData) => notification.id !== action.data.id\n\t\t\t\t)\n\t\t\t};\n\t\tcase NotificationActionType.ADD_NOTIFICATION:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnotifications: [\n\t\t\t\t\t...state.notifications,\n\t\t\t\t\t{\n\t\t\t\t\t\t...action.data,\n\t\t\t\t\t\tid: notificationCounter++\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\t\tdefault: return state;\n\t}\n};\n\nconst NotificationContextProvider = ({ children }: any) => {\n\tconst notification = useReducer(NotificationReducer, initialState);\n\treturn (\n\t\t<NotificationContext.Provider value={notification}>\n\t\t\t{children}\n\t\t</NotificationContext.Provider>\n\t);\n};\n\nexport {\n\tNotificationContext,\n\tNotificationContextProvider\n};\n","import React, { createContext, useReducer } from 'react';\n\nconst ModalContext: React.Context<any> = createContext({});\n\nModalContext.displayName = 'ModalContext';\n\nexport enum ModalActionType {\n\tsetDuplicationModal,\n\tsetDeletionModal,\n\tsetShareModal,\n\tsetSettingsModal,\n\tsetExportModal,\n\tcloseModal\n}\n\nexport enum ModalType {\n\tDUPLICATION,\n\tDELETION,\n\tSHARING,\n\tSETTINGS,\n\tEXPORT\n}\n\nexport type ModalAction = BaseModalAction\n\nexport interface BaseModalAction {\n\ttype: ModalActionType,\n\tid: string\n}\n\nexport interface ModalState {\n\tShowModal: boolean,\n\tModalType: any,\n\tFragmentID: string\n}\n\nconst initialState = {\n\tShowModal: false,\n\tModalType: null,\n\tFragmentID: ''\n};\n\nconst modalReducer = (state: ModalState, action: BaseModalAction) => {\n\tswitch(action.type) {\n\t\tcase ModalActionType.setDuplicationModal:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tShowModal: true,\n\t\t\t\tModalType: ModalType.DUPLICATION,\n\t\t\t\tFragmentID: action.id\n\t\t\t};\n\t\tcase ModalActionType.setDeletionModal:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tShowModal: true,\n\t\t\t\tModalType: ModalType.DELETION,\n\t\t\t\tFragmentID: action.id\n\t\t\t};\n\t\tcase ModalActionType.setShareModal:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tShowModal: true,\n\t\t\t\tModalType: ModalType.SHARING,\n\t\t\t\tFragmentID: action.id\n\t\t\t};\n\t\tcase ModalActionType.setSettingsModal:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tShowModal: true,\n\t\t\t\tModalType: ModalType.SETTINGS,\n\t\t\t\tFragmentID: action.id\n\t\t\t};\n\t\tcase ModalActionType.setExportModal:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tShowModal: true,\n\t\t\t\tModalType: ModalType.EXPORT,\n\t\t\t\tFragmentID: action.id\n\t\t\t};\n\t\tcase ModalActionType.closeModal:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tShowModal: false\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nconst ModalContextProvider = ({ children }: any) => {\n\tconst modal = useReducer(modalReducer, initialState);\n\n\treturn (\n\t\t<ModalContext.Provider value={modal}>\n\t\t\t{children}\n\t\t</ModalContext.Provider>\n\t);\n};\n\nexport {\n\tModalContext,\n\tModalContextProvider\n};\n","import { css, cx } from 'emotion';\nimport React, { useRef, useState } from 'react';\n\nimport { Draggable32, TrashCan32 } from '@carbon/icons-react';\nimport { drag } from '../routes/edit/tools';\nimport { useFragment } from '../context';\nimport { getParentComponent, updatedState } from '../components';\n\nconst headerStyle = css`\n\tposition: absolute;\n\tmargin-top: -26px;\n\tpadding-left: 6px;\n\tbackground: white;\n\tborder: 2px solid #d8d8d8;\n\tline-height: 21px;\n`;\n\nconst iconStyle = css`height: 1rem; width: 1rem; float: right`;\n\nexport const AComponentCodeUI = ({selectedComponent, setComponent}: any) => {\n\treturn <span className={css`overflow-wrap: anywhere`}>\n\t\t{JSON.stringify(selectedComponent)}\n\t</span>\n};\n\nconst dropBorderStyle = '2px solid #0f62fe';\n\nconst dropStyle = css`\n\tposition: absolute;\n\twidth: 15px;\n\theight: 15px;\n\tline-height: 21px;\n\tz-index: 2;\n`;\n\nconst dropStyleBefore = cx(dropStyle, css`\n\tmargin-left: -4px;\n\tmargin-top: -4px;\n\tborder-left: ${dropBorderStyle};\n\tborder-top: ${dropBorderStyle};\n`);\n\nconst dropStyleAfter = cx(dropStyle, css`\n\tmargin-left: calc(100% - 11px);\n\tborder-right: ${dropBorderStyle};\n\tborder-bottom: ${dropBorderStyle};\n\tbottom: -4px;\n`);\n\nexport const AComponent = ({\n\tchildren,\n\tcomponentObj,\n\tselect,\n\tselected,\n\tremove,\n\theadingCss,\n\tclassName\n}: any) => {\n\t// TODO use fragments context instead of passing in `remove`?\n\tconst [fragment, setFragment] = useFragment();\n\tconst [showDragOverIndicator, setShowDragOverIndicator] = useState(false);\n\tconst [dragOverPosition, setDragOverPosition] = useState([] as any[]);\n\tconst holderRef = useRef(null as any);\n\n\tconst isDragOverLeft = () => dragOverPosition[0] < holderRef.current.offsetWidth  / 2;\n\t// const isDragOverRight = () => !isDragOverLeft();\n\tconst isDragOverTop = () => dragOverPosition[1] < holderRef.current.offsetHeight  / 2;\n\t// const isDragOverBottom = () => !isDragOverTop();\n\tconst isDragOverBefore = () => isDragOverLeft() || isDragOverTop();\n\tconst isDragOverAfter = () => !isDragOverBefore();\n\n\tconst onDrop = (event: any) => {\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t\tsetShowDragOverIndicator(false)\n\n\t\tconst dragObj = JSON.parse(event.dataTransfer.getData(\"drag-object\"));\n\n\t\tsetFragment({\n\t\t\t...fragment,\n\t\t\tdata: updatedState(\n\t\t\t\tfragment.data,\n\t\t\t\tdragObj,\n\t\t\t\tcomponentObj.id,\n\t\t\t\tgetParentComponent(fragment.data, componentObj).items.indexOf(componentObj) + (isDragOverBefore() ? 0 : 1)\n\t\t\t)\n\t\t});\n\t};\n\n\treturn (\n\t\t<span\n\t\tclassName={className}\n\t\tref={holderRef}\n\t\tonClick={(event) => {\n\t\t\tevent.stopPropagation();\n\t\t\tselect();\n\t\t}}\n\t\tdraggable='true' // TODO make Draggable32 the drag handle and this element as preview\n\t\tonDragStart={(event: any) => drag(event, {\n\t\t\tcomponent: componentObj,\n\t\t\ttype: 'move'\n\t\t})}\n\t\tonDragEnter={(event: any) => {\n\t\t\tevent.stopPropagation();\n\t\t\tsetShowDragOverIndicator(true);\n\t\t}}\n\t\tonDragLeave={(event: any) => {\n\t\t\tevent.stopPropagation();\n\t\t\tsetShowDragOverIndicator(false);\n\t\t}}\n\t\tonDragOver={(event) => {\n\t\t\tconst rect = event.currentTarget.getBoundingClientRect();\n\t\t\tsetDragOverPosition([event.pageX - rect.left, event.pageY - rect.top]);\n\t\t}}\n\t\tonDrop={onDrop}>\n\t\t\t<span className={cx(\n\t\t\t\tdropStyleBefore,\n\t\t\t\tshowDragOverIndicator && isDragOverBefore() ? css`` : css`display: none`\n\t\t\t)} />\n\t\t\t<span className={cx(\n\t\t\t\tdropStyleAfter,\n\t\t\t\tshowDragOverIndicator && isDragOverAfter() ? css`` : css`display: none`\n\t\t\t)} />\n\t\t\t<span className={cx(headerStyle, headingCss, selected ? css`` : css`display: none`)}>\n\t\t\t\t<span className={css`margin-right: 1rem`}>\n\t\t\t\t\t{componentObj && componentObj.type ? componentObj.type : 'Header'}\n\t\t\t\t</span>\n\t\t\t\t<Draggable32 className={iconStyle}/>\n\t\t\t\t<TrashCan32 onClick={(event: any) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tif (remove) {\n\t\t\t\t\t\tremove();\n\t\t\t\t\t}\n\t\t\t\t}} className={iconStyle}/>\n\t\t\t</span>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n\tFormLabel,\n\tTag\n} from 'carbon-components-react';\n\nconst compareClasses = (sc1: any, sc2: any) => sc1.name < sc2.name ? -1 : 1;\n\nexport const CssClassSelector = ({ styleClasses, selectedClasses, setSelectedClasses }: any) => {\n\tconst _getAvailableClasses = () => {\n\t\t// available is anything in styleClasses, not yet in selecteClasses, sorted\n\t\treturn styleClasses\n\t\t\t.filter((sc: any) => !selectedClasses?.find((ssc: any) => ssc.id === sc.id))\n\t\t\t.sort(compareClasses);\n\t};\n\n\tconst [availableClasses, setAvailableClasses] = useState(_getAvailableClasses());\n\n\tuseEffect(() => {\n\t\tif (!selectedClasses) {\n\t\t\tsetSelectedClasses([]);\n\t\t}\n\t}, [selectedClasses, setSelectedClasses]);\n\n\tuseEffect(() => {\n\t\t// update available classes based on styleClasses and selectedClasses\n\t\tsetAvailableClasses(_getAvailableClasses());\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [styleClasses, selectedClasses]);\n\n\tuseEffect(() => {\n\t\t// update the contents of selected classes when needed\n\t\tsetSelectedClasses(styleClasses.filter((sc: any) => !!selectedClasses?.find((ssc: any) => ssc.id === sc.id)));\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [styleClasses]);\n\n\tconst selectStyleClass = (styleClass: any) => {\n\t\tsetSelectedClasses([...selectedClasses, styleClass]);\n\t\tsetAvailableClasses(availableClasses.filter((c: any) => c.id !== styleClass.id))\n\t};\n\n\tconst deselectStyleClass = (styleClass: any) => {\n\t\tsetSelectedClasses(selectedClasses.filter((c: any) => c.id !== styleClass.id));\n\t\tsetAvailableClasses([...availableClasses, styleClass].sort(compareClasses));\n\t};\n\n\treturn (\n\t\t<div style={{marginTop: '1rem'}}>\n\t\t\t<p>Custom CSS classes</p>\n\t\t\t<FormLabel>Selected classes</FormLabel>\n\t\t\t<br />\n\t\t\t{\n\t\t\t\tselectedClasses?.map((styleClass: any) => (\n\t\t\t\t\t<Tag\n\t\t\t\t\tfilter\n\t\t\t\t\tonClose={() => deselectStyleClass(styleClass)}>\n\t\t\t\t\t\t{styleClass.name}\n\t\t\t\t\t</Tag>\n\t\t\t\t))\n\t\t\t}\n\t\t\t<br />\n\t\t\t<FormLabel>Available classes</FormLabel>\n\t\t\t<br />\n\t\t\t{\n\t\t\t\tavailableClasses.map((styleClass: any) => (\n\t\t\t\t\t<Tag\n\t\t\t\t\tonClick={() => selectStyleClass(styleClass)}>\n\t\t\t\t\t\t{styleClass.name}\n\t\t\t\t\t</Tag>\n\t\t\t\t))\n\t\t\t}\n\t\t</div>\n\t);\n};\n","import React from 'react';\nimport {\n\tButton,\n\tDropdown,\n\tTextInput\n} from 'carbon-components-react';\nimport { AComponent } from './a-component';\nimport { css } from 'emotion';\nimport { CssClassSelector } from '../components/css-class-selector';\n\nexport const AButtonStyleUI = ({selectedComponent, setComponent, styleClasses}: any) => {\n\tconst kindItems = [\n\t\t{id: 'primary', text: 'Primary'},\n\t\t{id: 'secondary', text: 'Secondary'},\n\t\t{id: 'tertiary', text: 'Tertiary'},\n\t\t{id: 'danger', text: 'Danger'},\n\t\t{id: 'danger--tertiary', text: 'Danger tertiary'},\n\t\t{id: 'danger--ghost', text: 'Danger ghost'},\n\t\t{id: 'ghost', text: 'Ghost'}\n\t];\n\n\tconst setSelectedClasses = (cssClasses: any[]) => {\n\t\tsetComponent({\n\t\t\t...selectedComponent,\n\t\t\tcssClasses\n\t\t});\n\t};\n\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.text}\n\t\t\tlabelText='Text'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\ttext: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<Dropdown\n\t\t\tlabel='Kind'\n\t\t\ttitleText='Kind'\n\t\t\titems={kindItems}\n\t\t\tinitialSelectedItem={kindItems.find(item => item.id === selectedComponent.kind)}\n\t\t\titemToString={(item: any) => (item ? item.text : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tkind: event.selectedItem.id\n\t\t})}/>\n\t\t<CssClassSelector\n\t\t\tstyleClasses={styleClasses}\n\t\t\tselectedClasses={selectedComponent.cssClasses}\n\t\t\tsetSelectedClasses={setSelectedClasses}\n\t\t/>\n\t</>\n};\n\nexport const AButton = ({\n\tchildren,\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\tclassName={css`position: relative; display: inline-flex`}\n\t\t{...rest}>\n\t\t\t<Button\n\t\t\tkind={componentObj.kind}\n\t\t\tdisabled={componentObj.disabled}\n\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}>\n\t\t\t\t{children}\n\t\t\t</Button>\n\t\t</AComponent>\n\t);\n};\n","import React from 'react';\nimport { Checkbox, TextInput } from 'carbon-components-react';\nimport { AComponent } from './a-component';\nimport { css } from 'emotion';\nimport { CssClassSelector } from '../components/css-class-selector';\n\nexport const ACheckboxStyleUI = ({selectedComponent, setComponent, styleClasses}: any) => {\n\tconst setSelectedClasses = (cssClasses: any[]) => {\n\t\tsetComponent({\n\t\t\t...selectedComponent,\n\t\t\tcssClasses\n\t\t});\n\t};\n\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.label}\n\t\t\tlabelText='Label'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlabel: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<CssClassSelector\n\t\t\tstyleClasses={styleClasses}\n\t\t\tselectedClasses={selectedComponent.cssClasses}\n\t\t\tsetSelectedClasses={setSelectedClasses}\n\t\t/>\n\t</>\n};\n\nexport const ACheckboxCodeUI = ({selectedComponent, setComponent}: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t</>\n};\n\nexport const ACheckbox = ({\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\theadingCss={css`display: block;`}\n\t\t{...rest}>\n\t\t\t<Checkbox\n\t\t\t\tkind={componentObj.kind}\n\t\t\t\tdisabled={componentObj.disabled}\n\t\t\t\tlabelText={componentObj.label}\n\t\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')} />\n\t\t</AComponent>\n\t);\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n\tAccordion,\n\tAccordionItem,\n\tColumn,\n\tNumberInput\n} from 'carbon-components-react';\nimport { Add32, Help32 } from '@carbon/icons-react';\nimport { css, cx } from 'emotion';\nimport { AComponent } from './a-component';\nimport { useFragment } from '../context';\nimport { getParentComponent, updatedState } from '../components';\nimport { CssClassSelector } from '../components/css-class-selector';\n\nconst helpIconStyle = css`\n\tcolor: #525252;\n\tposition: absolute;\n\tright: 1rem;\n\tz-index: 1;\n\tbackground: white;\n\n\tsvg {\n\t\twidth: 1rem;\n\t\theight: 1rem;\n\t}\n`;\n\nexport const AColumnStyleUI = ({selectedComponent, setComponent, styleClasses}: any) => {\n\tconst setSelectedClasses = (cssClasses: any[]) => {\n\t\tsetComponent({\n\t\t\t...selectedComponent,\n\t\t\tcssClasses\n\t\t});\n\t};\n\n\tconst onNumInputchange = (event: any) => {\n\t\tsetComponent({\n\t\t\t...selectedComponent,\n\t\t\t[event.imaginaryTarget.name]: Number(event.imaginaryTarget.value)\n\t\t});\n\t};\n\n\tconst [isAccordionOpen, setIsAccordionOpen] = useState({} as any);\n\n\tuseEffect(() => {\n\t\tsetIsAccordionOpen({\n\t\t\tsmall: selectedComponent.smallSpan || selectedComponent.smallOffset,\n\t\t\tmedium: selectedComponent.mediumSpan || selectedComponent.mediumOffset,\n\t\t\tlarge: selectedComponent.largeSpan || selectedComponent.largeOffset,\n\t\t\txLarge: selectedComponent.xLargeSpan || selectedComponent.xLargeOffset,\n\t\t\tmax: selectedComponent.maxSpan || selectedComponent.maxOffset,\n\t\t});\n\t}, [selectedComponent]);\n\n\treturn <>\n\t\t<a\n\t\thref='https://www.carbondesignsystem.com/guidelines/2x-grid/implementation/'\n\t\ttarget='_blank'\n\t\trel='noopener noreferrer'\n\t\tclassName={helpIconStyle}>\n\t\t\t<Help32 />\n\t\t</a>\n\t\t<Accordion align='start'>\n\t\t\t<AccordionItem title='Small' open={isAccordionOpen.small}>\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={4}\n\t\t\t\t\tlabel='Span'\n\t\t\t\t\tname='smallSpan'\n\t\t\t\t\tvalue={selectedComponent.smallSpan}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={3}\n\t\t\t\t\tlabel='Offset'\n\t\t\t\t\tname='smallOffset'\n\t\t\t\t\tvalue={selectedComponent.smallOffset}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t</AccordionItem>\n\n\t\t\t<AccordionItem title='Medium' open={isAccordionOpen.medium}>\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={8}\n\t\t\t\t\tlabel='Span'\n\t\t\t\t\tname='mediumSpan'\n\t\t\t\t\tvalue={selectedComponent.mediumSpan}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={7}\n\t\t\t\t\tlabel='Offset'\n\t\t\t\t\tname='mediumOffset'\n\t\t\t\t\tvalue={selectedComponent.mediumOffset}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t</AccordionItem>\n\n\t\t\t<AccordionItem title='Large' open={isAccordionOpen.large}>\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={16}\n\t\t\t\t\tlabel='Span'\n\t\t\t\t\tname='largeSpan'\n\t\t\t\t\tvalue={selectedComponent.largeSpan}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={15}\n\t\t\t\t\tlabel='Offset'\n\t\t\t\t\tname='largeOffset'\n\t\t\t\t\tvalue={selectedComponent.largeOffset}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t</AccordionItem>\n\n\t\t\t<AccordionItem title='Extra large' open={isAccordionOpen.xLarge}>\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={16}\n\t\t\t\t\tlabel='Span'\n\t\t\t\t\tname='xLargeSpan'\n\t\t\t\t\tvalue={selectedComponent.xLargeSpan}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={15}\n\t\t\t\t\tlabel='Offset'\n\t\t\t\t\tname='xLargeOffset'\n\t\t\t\t\tvalue={selectedComponent.xLargeOffset}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t</AccordionItem>\n\n\t\t\t<AccordionItem title='Max' open={isAccordionOpen.max}>\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={16}\n\t\t\t\t\tlabel='Span'\n\t\t\t\t\tname='maxSpan'\n\t\t\t\t\tvalue={selectedComponent.maxSpan}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={15}\n\t\t\t\t\tlabel='Offset'\n\t\t\t\t\tname='maxOffset'\n\t\t\t\t\tvalue={selectedComponent.maxOffset}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t</AccordionItem>\n\t\t</Accordion>\n\t\t<CssClassSelector\n\t\t\tstyleClasses={styleClasses}\n\t\t\tselectedClasses={selectedComponent.cssClasses}\n\t\t\tsetSelectedClasses={setSelectedClasses}\n\t\t/>\n\t</>\n};\n\nconst addStyle = css`\n\tposition: absolute;\n\tmargin-top: -2px;\n\tbackground: white;\n\tborder: 2px solid #d8d8d8;\n\tline-height: 21px;\n\tz-index: 1;\n`;\n\nconst addStyleLeft = cx(addStyle, css`\n\tmargin-left: -30px;\n`);\n\nconst addStyleRight = cx(addStyle, css`\n\tmargin-left: calc(100% - 30px);\n`);\n\nconst iconStyle = css`\n\theight: 1rem;\n\twidth: 1rem;\n\tfloat: right;\n\tcursor: pointer`;\n\nexport const AColumn = ({\n\tchildren,\n\tcomponentObj,\n\tonDrop,\n\tselected,\n\t...rest\n}: any) => {\n\tconst [fragment, setFragment] = useFragment();\n\n\tconst parentComponent = getParentComponent(fragment.data, componentObj);\n\n\t/**\n\t * @param offset 0 - add left, 1 - add right\n\t */\n\tconst addCell = (offset = 0) => setFragment({\n\t\t...fragment,\n\t\tdata: updatedState(\n\t\t\tfragment.data,\n\t\t\t{\n\t\t\t\ttype: 'insert',\n\t\t\t\tcomponent: {\n\t\t\t\t\ttype: 'column',\n\t\t\t\t\titems: [{ type: 'text', text: 'New cell' }]\n\t\t\t\t}\n\t\t\t},\n\t\t\tparentComponent.id,\n\t\t\tparentComponent.items.indexOf(componentObj) + offset\n\t\t)\n\t});\n\n\treturn (\n\t\t// position: relative doesn't seem to affect the grid layout and it's needed atm\n\t\t// to position right add icon\n\t\t<Column\n\t\tonDrop={onDrop}\n\t\tclassName={cx(componentObj.cssClasses?.map((cc: any) => cc.id).join(' '), css`position: relative`)}\n\t\tsm={{\n\t\t\tspan: componentObj.smallSpan || undefined,\n\t\t\toffset: componentObj.smallOffset || undefined\n\t\t}}\n\t\tmd={{\n\t\t\tspan: componentObj.mediumSpan || undefined,\n\t\t\toffset: componentObj.mediumOffset || undefined\n\t\t}}\n\t\tlg={{\n\t\t\tspan: componentObj.largeSpan || undefined,\n\t\t\toffset: componentObj.largeOffset || undefined\n\t\t}}\n\t\txlg={{\n\t\t\tspan: componentObj.xLargeSpan || undefined,\n\t\t\toffset: componentObj.xLargeOffset || undefined\n\t\t}}\n\t\tmax={{\n\t\t\tspan: componentObj.maxSpan || undefined,\n\t\t\toffset: componentObj.maxOffset || undefined\n\t\t}}>\n\t\t\t<span className={cx(addStyleLeft, selected ? css`` : css`display: none`)}>\n\t\t\t\t<Add32 onClick={(event: any) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\taddCell();\n\t\t\t\t}} className={iconStyle}/>\n\t\t\t</span>\n\t\t\t<span className={cx(addStyleRight, selected ? css`` : css`display: none`)}>\n\t\t\t\t<Add32 onClick={(event: any) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\taddCell(1);\n\t\t\t\t}} className={iconStyle}/>\n\t\t\t</span>\n\t\t\t<AComponent\n\t\t\tcomponentObj={componentObj}\n\t\t\tclassName={css`display: block;`}\n\t\t\tselected={selected}\n\t\t\t{...rest}>\n\t\t\t\t{children}\n\t\t\t</AComponent>\n\t\t</Column>\n\t);\n};\n","import React from 'react';\nimport { Checkbox, Grid } from 'carbon-components-react';\nimport { AComponent } from './a-component';\nimport { css, cx } from 'emotion';\nimport { CssClassSelector } from '../components/css-class-selector';\n\nexport const AGridStyleUI = ({selectedComponent, setComponent, styleClasses}: any) => {\n\tconst setSelectedClasses = (cssClasses: any[]) => {\n\t\tsetComponent({\n\t\t\t...selectedComponent,\n\t\t\tcssClasses\n\t\t});\n\t};\n\n\treturn <>\n\t\t<Checkbox\n\t\t\tlabelText='Show outline'\n\t\t\tid='grid-showOutline'\n\t\t\tchecked={selectedComponent.showOutline}\n\t\t\tonChange={(checked: boolean) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tshowOutline: checked\n\t\t\t})} />\n\t\t<Checkbox\n\t\t\tlabelText='Condensed'\n\t\t\tid='grid-condensed'\n\t\t\tchecked={selectedComponent.condensed}\n\t\t\tonChange={(checked: boolean) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tcondensed: checked\n\t\t\t})} />\n\t\t<Checkbox\n\t\t\tlabelText='Full width'\n\t\t\tid='grid-fullWidth'\n\t\t\tchecked={selectedComponent.fullWidth}\n\t\t\tonChange={(checked: boolean) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tfullWidth: checked\n\t\t\t})} />\n\t\t<Checkbox\n\t\t\tlabelText='Narrow'\n\t\t\tid='grid-narrow'\n\t\t\tchecked={selectedComponent.narrow}\n\t\t\tonChange={(checked: boolean) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tnarrow: checked\n\t\t\t})} />\n\t\t<CssClassSelector\n\t\t\tstyleClasses={styleClasses}\n\t\t\tselectedClasses={selectedComponent.cssClasses}\n\t\t\tsetSelectedClasses={setSelectedClasses}\n\t\t/>\n\t</>\n};\n\nconst showOutlineStyle = css`\n\t.bx--col {\n\t\toutline: 1px dashed #78a9ff;\n\t}\n`;\n\nexport const AGrid = ({\n\tchildren,\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent componentObj={componentObj} {...rest}>\n\t\t\t<Grid\n\t\t\tclassName={cx(\n\t\t\t\tcomponentObj.cssClasses?.map((cc: any) => cc.id).join(' '),\n\t\t\t\tcomponentObj.showOutline ? showOutlineStyle : ''\n\t\t\t)}\n\t\t\tcondensed={componentObj.condensed}\n\t\t\tfullWidth={componentObj.fullWidth}\n\t\t\tnarrow={componentObj.narrow}>\n\t\t\t\t{children}\n\t\t\t</Grid>\n\t\t</AComponent>\n\t);\n};\n","import React from 'react';\nimport {\n\tRow,\n\tCheckbox\n} from 'carbon-components-react';\nimport { Add32 } from '@carbon/icons-react';\nimport { AComponent } from './a-component';\nimport { getParentComponent, updatedState } from '../components';\nimport { css, cx } from 'emotion';\nimport { useFragment } from '../context';\nimport { CssClassSelector } from '../components/css-class-selector';\n\nexport const ARowStyleUI = ({selectedComponent, setComponent, styleClasses}: any) => {\n\tconst setSelectedClasses = (cssClasses: any[]) => {\n\t\tsetComponent({\n\t\t\t...selectedComponent,\n\t\t\tcssClasses\n\t\t});\n\t};\n\n\treturn <>\n\t\t<Checkbox\n\t\t\tlabelText='Condensed'\n\t\t\tid='grid-condensed'\n\t\t\tchecked={selectedComponent.condensed}\n\t\t\tonChange={(checked: boolean) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tcondensed: checked\n\t\t\t})} />\n\t\t<Checkbox\n\t\t\tlabelText='Narrow'\n\t\t\tid='grid-narrow'\n\t\t\tchecked={selectedComponent.narrow}\n\t\t\tonChange={(checked: boolean) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tnarrow: checked\n\t\t\t})} />\n\t\t<CssClassSelector\n\t\t\tstyleClasses={styleClasses}\n\t\t\tselectedClasses={selectedComponent.cssClasses}\n\t\t\tsetSelectedClasses={setSelectedClasses}\n\t\t/>\n\t</>\n};\n\nconst addStyle = css`\n\tposition: absolute;\n\tmargin-left: calc(50% - 10px);\n\tbackground: white;\n\tborder: 2px solid #d8d8d8;\n\tline-height: 21px;\n`;\n\nconst addStyleTop = cx(addStyle, css`\n\ttop: -20px;\n`);\n\nconst addStyleBottom = cx(addStyle, css`\n\tbottom: -20px;\n\tz-index: 1;\n`);\n\nconst iconStyle = css`\n\theight: 1rem;\n\twidth: 1rem;\n\tfloat: right;\n\tcursor: pointer`;\n\nexport const ARow = ({\n\tchildren,\n\tcomponentObj,\n\tselected,\n\t...rest\n}: any) => {\n\tconst [fragment, setFragment] = useFragment();\n\n\tconst parentComponent = getParentComponent(fragment.data, componentObj);\n\n\t/**\n\t * @param offset 0 - add left, 1 - add right\n\t */\n\tconst addRow = (offset = 0) => setFragment({\n\t\t...fragment,\n\t\tdata: updatedState(\n\t\t\tfragment.data,\n\t\t\t{\n\t\t\t\ttype: 'insert',\n\t\t\t\tcomponent: {\n\t\t\t\t\ttype: 'row', items: [\n\t\t\t\t\t\t{ type: 'column', items: [{ type: 'text', text: 'Cell 1' }]},\n\t\t\t\t\t\t{ type: 'column', items: [{ type: 'text', text: 'Cell 2' }]}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t},\n\t\t\tparentComponent.id,\n\t\t\tparentComponent.items.indexOf(componentObj) + offset\n\t\t)\n\t});\n\n\treturn (\n\t\t// position: relative doesn't seem to affect the grid layout and it's needed atm\n\t\t// to position right add icon\n\t\t<AComponent componentObj={componentObj} selected={selected} {...rest}>\n\t\t\t<Row\n\t\t\tclassName={cx(\n\t\t\t\tcomponentObj.cssClasses?.map((cc: any) => cc.id).join(' '),\n\t\t\t\tcss`position: relative`\n\t\t\t)}\n\t\t\tcondensed={componentObj.condensed}\n\t\t\tnarrow={componentObj.narrow}>\n\t\t\t\t<span className={cx(addStyleTop, selected ? css`` : css`display: none`)}>\n\t\t\t\t\t<Add32 onClick={(event: any) => {\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\taddRow();\n\t\t\t\t\t}} className={iconStyle}/>\n\t\t\t\t</span>\n\t\t\t\t<span className={cx(addStyleBottom, selected ? css`` : css`display: none`)}>\n\t\t\t\t\t<Add32 onClick={(event: any) => {\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\taddRow(1);\n\t\t\t\t\t}} className={iconStyle}/>\n\t\t\t\t</span>\n\t\t\t\t{children}\n\t\t\t</Row>\n\t\t</AComponent>\n\t);\n};\n","import React from 'react';\nimport { TextInput } from 'carbon-components-react';\nimport { AComponent } from './a-component';\nimport { CssClassSelector } from '../components/css-class-selector';\n\nexport const ATextStyleUI = ({selectedComponent, setComponent, styleClasses}: any) => {\n\tconst setSelectedClasses = (cssClasses: any[]) => {\n\t\tsetComponent({\n\t\t\t...selectedComponent,\n\t\t\tcssClasses\n\t\t});\n\t};\n\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.text}\n\t\t\tlabelText='Text'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\ttext: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<CssClassSelector\n\t\t\tstyleClasses={styleClasses}\n\t\t\tselectedClasses={selectedComponent.cssClasses}\n\t\t\tsetSelectedClasses={setSelectedClasses}\n\t\t/>\n\t</>\n};\n\nexport const AText = ({\n\tchildren,\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}\n\t\t{...rest}>\n\t\t\t{children}\n\t\t</AComponent>\n\t);\n};\n","import React from 'react';\nimport { TextArea, TextInput } from 'carbon-components-react';\nimport { AComponent } from './a-component';\nimport { CssClassSelector } from '../components/css-class-selector';\n\nexport const ATextAreaStyleUI = ({selectedComponent, setComponent, styleClasses}: any) => {\n\tconst setSelectedClasses = (cssClasses: any[]) => {\n\t\tsetComponent({\n\t\t\t...selectedComponent,\n\t\t\tcssClasses\n\t\t});\n\t};\n\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.label}\n\t\t\tlabelText='Label'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlabel: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.helperText}\n\t\t\tlabelText='Helper text'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\thelperText: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.placeholder}\n\t\t\tlabelText='Placeholder'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tplaceholder: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<CssClassSelector\n\t\t\tstyleClasses={styleClasses}\n\t\t\tselectedClasses={selectedComponent.cssClasses}\n\t\t\tsetSelectedClasses={setSelectedClasses}\n\t\t/>\n\t</>\n};\n\n\nexport const ATextAreaCodeUI = ({selectedComponent, setComponent}: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t</>\n};\n\nexport const ATextArea = ({\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent componentObj={componentObj} {...rest}>\n\t\t\t<TextArea\n\t\t\t\tkind={componentObj.kind}\n\t\t\t\tdisabled={componentObj.disabled}\n\t\t\t\tlabelText={componentObj.label}\n\t\t\t\tplaceholder={componentObj.placeholder}\n\t\t\t\thelperText={componentObj.helperText}\n\t\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')} />\n\t\t</AComponent>\n\t);\n};\n","import React from 'react';\nimport { TextInput, Dropdown } from 'carbon-components-react';\nimport { AComponent } from './a-component';\nimport { css } from 'emotion';\nimport { CssClassSelector } from '../components/css-class-selector';\n\nexport const ATextInputStyleUI = ({selectedComponent, setComponent, styleClasses}: any) => {\n\tconst typeItems = [\n\t\t{id: 'text', text: 'Text'},\n\t\t{id: 'email', text: 'Email'},\n\t\t{id: 'password', text: 'Password'}\n\t];\n\n\tconst setSelectedClasses = (cssClasses: any[]) => {\n\t\tsetComponent({\n\t\t\t...selectedComponent,\n\t\t\tcssClasses\n\t\t});\n\t};\n\n\treturn <>\n\t\t<Dropdown\n\t\t\tlabel='Type'\n\t\t\ttitleText='Type'\n\t\t\titems={typeItems}\n\t\t\tinitialSelectedItem={typeItems.find(item => item.id === selectedComponent.inputType)}\n\t\t\titemToString={(item: any) => (item ? item.text : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tinputType: event.selectedItem.id\n\t\t})}/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.label}\n\t\t\tlabelText='Label'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlabel: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.helperText}\n\t\t\tlabelText='Helper text'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\thelperText: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.placeholder}\n\t\t\tlabelText='Placeholder'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tplaceholder: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.defaultValue}\n\t\t\tlabelText='Default value'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tdefaultValue: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<CssClassSelector\n\t\t\tstyleClasses={styleClasses}\n\t\t\tselectedClasses={selectedComponent.cssClasses}\n\t\t\tsetSelectedClasses={setSelectedClasses}\n\t\t/>\n\t</>\n};\n\nexport const ATextInputCodeUI = ({selectedComponent, setComponent}: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tconsole.log(\"event\", event.currentTarget, \"selectedComponent\", selectedComponent)\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t</>\n};\n\nexport const ATextInput = ({\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\theadingCss={css`display: block;`}\n\t\tclassName={css`position: relative; display: flex`}\n\t\t{...rest}>\n\t\t\t<TextInput\n\t\t\t\ttype={componentObj.inputType}\n\t\t\t\tlabelText={componentObj.label}\n\t\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}\n\t\t\t\t{...componentObj}\n\t\t\t\t{...rest} />\n\t\t</AComponent>\n\t);\n};\n","import React from 'react';\nimport domtoimage from 'dom-to-image';\nimport ReactDOM from 'react-dom';\nimport { Fragment } from '../components';\n\nconst sleep = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\nexport interface RenderProps {\n\tid: string,\n\tname: string,\n\twidth?: number,\n\theight?: number,\n\tformat?: string,\n\tpreview?: { // only sent for preview\n\t\tformat?: string, // optional\n\t\twidth: number,\n\t\theight: number\n\t}\n}\n\nexport const getFragmentPreview = async(fragment: any, props: RenderProps) => {\n\tconst element = document.createElement('div');\n\telement.className = 'render-preview';\n\n\t(element as HTMLElement).style.position = 'absolute';\n\t(element as HTMLElement).style.top = '0';\n\t(element as HTMLElement).style.left = '0';\n\t(element as HTMLElement).style.zIndex = '-1';\n\t(element as HTMLElement).style.width = `${props.width || 800}px`;\n\t(element as HTMLElement).style.height = `${props.height || 400}px`;\n\t(element as HTMLElement).style.minHeight = `${props.height || 400}px`;\n\tReactDOM.render(React.createElement(Fragment, {fragment}), element);\n\tdocument.body.appendChild(element);\n\n\tawait sleep(100); // wait for render to finish\n\n\tconst imageBlob = await domtoimage.toBlob(element as Node);\n\t(element as HTMLElement).remove();\n\treturn imageBlob;\n};\n\nexport const getAllComponentStyleClasses = (componentObj: any) => {\n\tlet styleClasses: any = {};\n\n\t// convert into an object so all classes are unique\n\tcomponentObj.cssClasses?.forEach((cssClass: any) => {\n\t\t// NOTE do we need to merge them deeply?\n\t\tstyleClasses[cssClass.id] = cssClass;\n\t});\n\n\tcomponentObj.items?.map((co: any) => {\n\t\tconst coClasses = getAllComponentStyleClasses(co);\n\t\tstyleClasses = {\n\t\t\t...styleClasses,\n\t\t\t...coClasses\n\t\t};\n\t});\n\n\treturn styleClasses;\n};\n\nexport const getAllFragmentStyleClasses = (fragment: any) => {\n\tif (!fragment || !fragment.data) { return []; }\n\n\treturn Object.values(getAllComponentStyleClasses(fragment.data));\n};\n\nexport const hasComponentStyleClasses = (componentObj: any) => {\n\tif (componentObj.cssClasses) {\n\t\treturn true;\n\t}\n\n\tif (componentObj.items) {\n\t\treturn componentObj.items.some((item: any) => hasComponentStyleClasses(item));\n\t}\n\n\treturn false;\n};\n\nexport const hasFragmentStyleClasses = (fragment: any) => {\n\tif (!fragment || !fragment.data) { return false; }\n\n\treturn hasComponentStyleClasses(fragment.data);\n};\n","import React from 'react';\nimport { SkeletonPlaceholder } from 'carbon-components-react';\nimport './fragment-preview.scss';\nimport { css, cx } from 'emotion';\nimport {\n\tAButton,\n\tAGrid,\n\tACheckbox,\n\tATextArea,\n\tATextInput,\n\tAText,\n\tARow,\n\tAColumn\n} from '../fragment-components';\nimport { getAllFragmentStyleClasses } from '../utils/fragment-tools';\n\nconst canvas = css`\n\tborder: 2px solid #d8d8d8;\n\tbackground-color: white;\n\tposition: relative;\n`;\n\nconst allowDrop = (event: any) => {\n\tevent.preventDefault();\n}\n\nlet componentCounter = 2; // actually initialized (again) in Fragment\n\nexport const getComponentById = (componentObj: any, id: number) => {\n\tif (!componentObj || !id) {\n\t\treturn undefined;\n\t}\n\n\tif (componentObj.id === id) {\n\t\treturn componentObj;\n\t}\n\n\tif (componentObj.items) {\n\t\tfor (let i = 0; i < componentObj.items.length; i++) {\n\t\t\tconst component: any = getComponentById(componentObj.items[i], id);\n\t\t\tif (component) {\n\t\t\t\treturn component;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn undefined;\n};\n\nexport const getSelectedComponent = (fragment: any) => {\n\tif (!fragment) {\n\t\treturn undefined;\n\t}\n\n\treturn getComponentById(fragment.data, fragment.selectedComponentId)\n};\n\nexport const getHighestId = (componentObj: any) => {\n\tif (!componentObj) {\n\t\treturn 0;\n\t}\n\n\tif (!componentObj.items || !componentObj.items.length) {\n\t\treturn componentObj.id || 0;\n\t}\n\n\treturn Math.max(...componentObj.items.map((item: any) => getHighestId(item)), (componentObj.id || 0));\n};\n\nexport const stateWithoutComponent = (state: any, componentId: number) => {\n\tif (state.items) {\n\t\tconst componentIndex = state.items.findIndex((component: any) => component.id === componentId);\n\t\tif (componentIndex >= 0) {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titems: [...state.items.slice(0, componentIndex), ...state.items.slice(componentIndex + 1)]\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\t...state,\n\t\t\titems: state.items.map((item: any) => stateWithoutComponent(item, componentId))\n\t\t}\n\t}\n\n\treturn { ...state };\n};\n\nconst componentsThatNeedNames = [\n\t'checkbox',\n\t'combobox',\n\t'datepicker',\n\t'dropdown',\n\t'fileinput',\n\t'radio',\n\t'search',\n\t'select',\n\t'textarea',\n\t'textinput',\n\t'timepicker'\n];\n\nexport const initializeIds = (componentObj: any) => {\n\tconst id = componentObj.id || componentCounter++;\n\tlet name = componentsThatNeedNames.includes(componentObj.type) ? `${componentObj.type}-${id}` : undefined;\n\tname = componentObj.codeContext?.name ? componentObj.codeContext?.name : name;\n\n\treturn {\n\t\t...componentObj,\n\t\tid,\n\t\titems: componentObj.items ? componentObj.items.map((co: any) => initializeIds(co)) : undefined,\n\t\tcodeContext: {\n\t\t\tname\n\t\t}\n\t};\n}\n\nconst updatedList = (list: any[], item: any, dropInIndex?: number) => {\n\tif (dropInIndex === undefined) {\n\t\treturn [...list, item];\n\t}\n\n\treturn [...list.slice(0, dropInIndex), item, ...list.slice(dropInIndex)];\n};\n\nexport const updatedState = (state: any, dragObj: any, dropInId?: number, dropInIndex?: number) => {\n\tif (!state) { // NOTE is this needed?\n\t\treturn;\n\t}\n\n\t// give unique ids to newly dropped components\n\tdragObj.component = initializeIds(dragObj.component);\n\n\t// only update\n\tif (dragObj.type === 'update') {\n\t\tif (state.id && state.id === dragObj.component.id) {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...dragObj.component\n\t\t\t}\n\t\t}\n\t\tif (state.items) {\n\t\t\tstate.items = state.items.map((item: any) => updatedState(item, dragObj, dropInId, dropInIndex));\n\t\t}\n\n\t\treturn { ...state };\n\t}\n\n\tif (dragObj.type === 'move') {\n\t\tstate = stateWithoutComponent(state, dragObj.component.id);\n\t\tdragObj.type = 'insert'\n\t}\n\n\n\tif (state.items) {\n\t\tstate.items = state.items.map((item: any) => updatedState(item, dragObj, dropInId, dropInIndex));\n\t}\n\n\tif (!dropInId) {\n\t\treturn state.items && !state.type ? {\n\t\t\t...state,\n\t\t\titems: updatedList(state.items, dragObj.component, dropInIndex)\n\t\t} : { ...state };\n\t}\n///////////// TODO NOTE clean the container items with 1 item //////////////\n\tif (state.id && state.id === dropInId) {\n\t\t// add data into state\n\t\tif (state.items) {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titems: updatedList(state.items, dragObj.component, dropInIndex),\n\t\t\t\tid: state.id\n\t\t\t}\n\t\t}\n\n\t\t// convert into a list of components, move current component into list\n\t\treturn {\n\t\t\t// TODO should this be a `type: container`?\n\t\t\tid: componentCounter++,\n\t\t\titems: updatedList([{...state}], dragObj.component, dropInIndex)\n\t\t}\n\t}\n\n\tif (dropInId) { // probably don't wanna add it here since it didn't match anything and it should somewhere\n\t\treturn { ...state };\n\t}\n\n\treturn state.items ? {\n\t\t...state,\n\t\titems: updatedList(state.items, dragObj.component, dropInIndex)\n\t} : { ...state };\n}\n\nexport const getParentComponent = (state: any, child: any) => {\n\tif (state && state.items) {\n\t\tif (state.items.includes(child)) {\n\t\t\treturn state;\n\t\t}\n\t\tfor (let i = 0; i < state.items.length; i++) {\n\t\t\tconst component = state.items[i];\n\t\t\tconst parent: any = getParentComponent(component, child);\n\t\t\tif (parent) {\n\t\t\t\treturn parent;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n};\n\nexport const Fragment = ({fragment, setFragment}: any) => {\n\tif (!fragment || !fragment.data) { return <SkeletonPlaceholder />; }\n\n\t// initialize component counter\n\tcomponentCounter = getHighestId(fragment.data) + 1;\n\n\tconst drop = (event: any, dropInId?: number) => {\n\t\tevent.preventDefault();\n\n\t\tconst dragObj = JSON.parse(event.dataTransfer.getData(\"drag-object\"));\n\n\t\tsetFragment({\n\t\t\t...fragment,\n\t\t\tdata: updatedState(fragment.data, dragObj, dropInId)\n\t\t});\n\t}\n\n\tconst select = (componentObj: any) => {\n\t\tsetFragment({\n\t\t\t...fragment,\n\t\t\tselectedComponentId: componentObj.id\n\t\t}, true);\n\t};\n\n\tconst remove = (componentObj: any) => {\n\t\tsetFragment({\n\t\t\t...fragment,\n\t\t\tdata: stateWithoutComponent(fragment.data, componentObj.id)\n\t\t});\n\t};\n\n\tconst renderComponents = (componentObj: any) => {\n\t\tif (typeof componentObj === \"string\" || !componentObj) {\n\t\t\treturn componentObj;\n\t\t}\n\n\t\tswitch (componentObj.type) {\n\t\t\tcase 'text':\n\t\t\t\treturn (\n\t\t\t\t\t<AText\n\t\t\t\t\tcomponentObj={componentObj}\n\t\t\t\t\tselect={() => select(componentObj)}\n\t\t\t\t\tremove={() => remove(componentObj)}\n\t\t\t\t\tselected={fragment.selectedComponentId === componentObj.id}>\n\t\t\t\t\t\t{componentObj.text}\n\t\t\t\t\t</AText>\n\t\t\t\t);\n\n\t\t\tcase 'button':\n\t\t\t\treturn (\n\t\t\t\t\t<AButton\n\t\t\t\t\tcomponentObj={componentObj}\n\t\t\t\t\tselect={() => select(componentObj)}\n\t\t\t\t\tremove={() => remove(componentObj)}\n\t\t\t\t\tselected={fragment.selectedComponentId === componentObj.id}>\n\t\t\t\t\t\t{componentObj.text}\n\t\t\t\t\t</AButton>\n\t\t\t\t);\n\n\t\t\tcase 'checkbox':\n\t\t\t\treturn (\n\t\t\t\t\t<ACheckbox\n\t\t\t\t\t\tcomponentObj={componentObj}\n\t\t\t\t\t\tselect={() => select(componentObj)}\n\t\t\t\t\t\tremove={() => remove(componentObj)}\n\t\t\t\t\t\tselected={fragment.selectedComponentId === componentObj.id} />\n\t\t\t\t);\n\n\t\t\tcase 'textarea':\n\t\t\t\treturn (\n\t\t\t\t\t<ATextArea\n\t\t\t\t\t\tcomponentObj={componentObj}\n\t\t\t\t\t\tselect={() => select(componentObj)}\n\t\t\t\t\t\tremove={() => remove(componentObj)}\n\t\t\t\t\t\tselected={fragment.selectedComponentId === componentObj.id} />\n\t\t\t\t);\n\n\t\t\tcase 'textinput':\n\t\t\t\treturn (\n\t\t\t\t\t<ATextInput\n\t\t\t\t\t\tcomponentObj={componentObj}\n\t\t\t\t\t\tselect={() => select(componentObj)}\n\t\t\t\t\t\tremove={() => remove(componentObj)}\n\t\t\t\t\t\tselected={fragment.selectedComponentId === componentObj.id} />\n\t\t\t\t);\n\n\t\t\tcase 'grid':\n\t\t\t\treturn (\n\t\t\t\t\t<AGrid\n\t\t\t\t\tcomponentObj={componentObj}\n\t\t\t\t\tselect={() => select(componentObj)}\n\t\t\t\t\tremove={() => remove(componentObj)}\n\t\t\t\t\tselected={fragment.selectedComponentId === componentObj.id}>\n\t\t\t\t\t\t{componentObj.items && componentObj.items.map((row: any) => renderComponents(row))}\n\t\t\t\t\t</AGrid>\n\t\t\t\t);\n\n\t\t\tcase 'row':\n\t\t\t\treturn (\n\t\t\t\t\t<ARow\n\t\t\t\t\tcomponentObj={componentObj}\n\t\t\t\t\tselect={() => select(componentObj)}\n\t\t\t\t\tremove={() => remove(componentObj)}\n\t\t\t\t\tselected={fragment.selectedComponentId === componentObj.id}>\n\t\t\t\t\t\t{ componentObj.items.map((column: any) => renderComponents(column))}\n\t\t\t\t\t</ARow>\n\t\t\t\t);\n\n\t\t\tcase 'column':\n\t\t\t\treturn (\n\t\t\t\t\t<AColumn\n\t\t\t\t\tcomponentObj={componentObj}\n\t\t\t\t\tselect={() => select(componentObj)}\n\t\t\t\t\tremove={() => remove(componentObj)}\n\t\t\t\t\tselected={fragment.selectedComponentId === componentObj.id}\n\t\t\t\t\tonDragOver={allowDrop}\n\t\t\t\t\tonDrop={(event: any) => { event.stopPropagation(); drop(event, componentObj.id); }}>\n\t\t\t\t\t\t{ componentObj.items.map((column: any) => (\n\t\t\t\t\t\t\trenderComponents(column)\n\t\t\t\t\t\t))}\n\t\t\t\t\t</AColumn>\n\t\t\t\t);\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (componentObj.items) {\n\t\t\treturn componentObj.items.map((item: any) => renderComponents(item));\n\t\t}\n\n\t\treturn null;\n\t};\n\n\t// TODO add fragment.width and fragment.height to database\n\treturn (\n\t\t<div\n\t\tclassName={cx(canvas, css`width: ${fragment.width || '800px'}; height: ${fragment.height || '600px'}`)}\n\t\tonDragOver={allowDrop}\n\t\tonDrop={(event: any) => { drop(event, fragment.data.id) }}>\n\t\t\t<style>\n\t\t\t{\n\t\t\t\tgetAllFragmentStyleClasses(fragment).map((styleClass: any) => `.${styleClass.id} {\n\t\t\t\t\t${styleClass.content}\n\t\t\t\t}`)\n\t\t\t}\n\t\t\t</style>\n\t\t\t{renderComponents(fragment.data)}\n\t\t</div>\n\t);\n};\n","// TODO: Delete this when the carbon grid components are actually available\nimport React, { PropsWithChildren } from 'react';\nimport { cx } from 'emotion';\n\nexport type RowProps = PropsWithChildren<{\n\tstyles?: any\n}>;\n\nexport const Row = ({ styles, children }: RowProps) => (\n\t<div className={cx('bx--row', styles)}>{children}</div>\n);\n\nexport interface ColDefinition {\n\tsm?: number;\n\tmd?: number;\n\tlg?: number;\n}\n\nexport type ColProps = PropsWithChildren<{\n\tcols?: ColDefinition,\n\trender?: (props: PropsWithChildren<any>) => JSX.Element\n}>;\n\nexport const Col = ({ cols, render, children }: ColProps) => {\n\tconst baseRender = render ?? ((props) => <div {...props} />);\n\tconst classes = cx({\n\t\t[`bx--col-sm-${cols?.sm}`]: !!cols?.sm ?? false,\n\t\t[`bx--col-md-${cols?.md}`]: !!cols?.md ?? false,\n\t\t[`bx--col-lg-${cols?.lg}`]: !!cols?.lg ?? false,\n\t\t'bx--col': !!cols\n\t});\n\treturn baseRender({\n\t\tclassName: classes,\n\t\tchildren\n\t});\n};\n","import React, { useContext } from 'react';\nimport { InlineNotification, NotificationActionButton } from 'carbon-components-react';\nimport {\n\tNotificationContext,\n\tNotificationActionType,\n\tNotificationData\n} from '../context/notification-context';\nimport { css } from 'emotion';\n\nconst notificationStyle = { minWidth: '30rem' };\n\nconst notificationAreaStyle = css`\n\tleft: 50%;\n\ttransform: translateX(-50%);\n\tposition: absolute;\n\tz-index: 2;\n\tmin-width: 30rem;\n\ttop: 2rem;\n`;\n\nexport const Notification = () => {\n\tconst [state, dispatch] = useContext(NotificationContext);\n\treturn (\n\t\t<div className={notificationAreaStyle} role=\"alert\">\n\t\t\t{state.notifications.map((notification: NotificationData, index: number) => (\n\t\t\t\t<InlineNotification\n\t\t\t\t\tlowContrast\n\t\t\t\t\taria-live=\"assertive\"\n\t\t\t\t\tkind={notification.kind}\n\t\t\t\t\ttitle={notification.title}\n\t\t\t\t\tsubtitle={notification.message}\n\t\t\t\t\tcaption={null}\n\t\t\t\t\tkey={notification.id}\n\t\t\t\t\tonCloseButtonClick={() => {\n\t\t\t\t\t\tif (notification.action) {\n\t\t\t\t\t\t\tnotification.action.onNotificationClose();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\ttype: NotificationActionType.REMOVE_NOTIFICATION,\n\t\t\t\t\t\t\tdata: notification\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t\tstyle={notificationStyle}\n\t\t\t\t\tactions={notification.action\n\t\t\t\t\t\t? <NotificationActionButton\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tnotification.action.actionFunction();\n\t\t\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\t\t\ttype: NotificationActionType.REMOVE_NOTIFICATION,\n\t\t\t\t\t\t\t\t\tdata: notification\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{notification.action.actionText}\n\t\t\t\t\t\t</NotificationActionButton>\n\t\t\t\t\t\t: undefined}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n","import React, { useContext } from 'react';\nimport { css } from 'emotion';\nimport {\n\tHeaderSideNavItems,\n\tSideNav,\n\tSideNavItem,\n\tSideNavItems,\n\tSideNavMenu\n} from 'carbon-components-react';\nimport { FragmentsContext } from '../context/fragments-context';\nimport { useHistory } from 'react-router';\nimport { HeaderMenuItemLink } from './header-menu-item-link';\n\nconst sideNav = css`\n\tborder-right: 1px solid #D6D6D6;\n`;\n\n// Side nav is fixed when not in the edit screen\n// it won't automatically open at 66 rem.\nconst fixedSideNav = css`\n\t@media screen and (min-width: 66rem) {\n\t\ttransform: translateX(-16rem);\n\t}\n`;\n\nexport const LeftPane = ({ isSideNavExpanded }: any) => {\n\tconst [fragmentState] = useContext(FragmentsContext);\n\tconst history = useHistory();\n\tconst location = history.location.pathname;\n\n\tconst id = `${fragmentState.currentId}`;\n\tconst fragment = fragmentState.fragments.find((fragment: any) => fragment.id === id);\n\n\tconst inEdit = !!location.match(/\\/edit\\//) && fragment;\n\n\treturn (\n\t\t<SideNav\n\t\t\taria-label={inEdit && fragment && fragment.title\n\t\t\t\t? `Modify options for '${fragment.title}'`\n\t\t\t\t: 'Side navigation'\n\t\t\t}\n\t\t\ttabindex={0}\n\t\t\tisFixedNav={!inEdit}\n\t\t\texpanded={isSideNavExpanded}\n\t\t\tclassName={`${sideNav} ${!inEdit ? fixedSideNav : ''}`}>\n\t\t\t<SideNavItems>\n\t\t\t\t<HeaderSideNavItems hasDivider>\n\t\t\t\t\t<HeaderMenuItemLink to=\"\" key=\"\">\n\t\t\t\t\t\tMore menus\n\t\t\t\t\t</HeaderMenuItemLink>\n\t\t\t\t</HeaderSideNavItems>\n\t\t\t\t{\n\t\t\t\t\tinEdit && <>\n\t\t\t\t\t\t<SideNavMenu title='General'>\n\t\t\t\t\t\t\t<SideNavItem>Chicken</SideNavItem>\n\t\t\t\t\t\t</SideNavMenu>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t</SideNavItems>\n\t\t</SideNav>\n\t);\n};\n","import React, { useState, useContext } from 'react';\n\nimport { Modal } from 'carbon-components-react';\nimport { Image32, Code32 } from '@carbon/icons-react';\n\nimport { css } from 'emotion';\nimport {\n\tModalActionType,\n\tModalContext\n} from '../../../context/modal-context';\nimport { ExportCode } from './exports/export-code-modal';\nimport { SelectionTile } from '../../../components/selection-tile';\nimport { ExportImageModal } from './exports/export-image-modal';\n\n\nconst exportOptionTileWrapper = css`\n\twidth: 50%;\n\theight: 200px;\n\t.bx--tile {\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\tp {\n\t\t\tposition: absolute;\n\t\t\tbottom: 15px;\n\t\t}\n\t}\n`;\n\nconst exportOptionsWrapper = css`\n\tdisplay: flex;\n\tdiv:first-child {\n\t\tmargin-right: 20px;\n\t}\n`;\n\nexport enum ShareOptionsModals {\n\tSHARE_OPTIONS,\n\tCODE_EXPORTS,\n\tIMAGE_EXPORTS\n}\n\nenum Exports {\n\tCODE,\n\tIMAGE\n}\n\ninterface ShareOptionsModalState {\n\tselectedExportOption: Exports | null\n}\n\nexport const ShareOptionsModal = ({ fragment }: any) => {\n\tconst [modalState, dispatchModal] = useContext(ModalContext);\n\tconst [displayedModal, setDisplayedModal]\n\t\t= useState<ShareOptionsModals | null>(ShareOptionsModals.SHARE_OPTIONS);\n\n\t// This contains all the states that control the share options modal.\n\tconst [shareOptionsState, setShareOptionsState] = useState<ShareOptionsModalState>({\n\t\tselectedExportOption: null\n\t});\n\n\tconst handleExportSelection = () => {\n\t\tif (shareOptionsState.selectedExportOption === Exports.CODE) {\n\t\t\tsetDisplayedModal(ShareOptionsModals.CODE_EXPORTS);\n\t\t} else if (shareOptionsState.selectedExportOption === Exports.IMAGE) {\n\t\t\tsetDisplayedModal(ShareOptionsModals.IMAGE_EXPORTS);\n\t\t}\n\t};\n\n\tconst shareModalSwitcher = () => {\n\t\tswitch (displayedModal) {\n\t\t\tcase ShareOptionsModals.SHARE_OPTIONS:\n\t\t\t\treturn (\n\t\t\t\t\t<Modal\n\t\t\t\t\t\thasForm\n\t\t\t\t\t\tonRequestSubmit={handleExportSelection}\n\t\t\t\t\t\topen={modalState.ShowModal && displayedModal === ShareOptionsModals.SHARE_OPTIONS}\n\t\t\t\t\t\tonRequestClose={() => dispatchModal({ type: ModalActionType.closeModal })}\n\t\t\t\t\t\tprimaryButtonText='Done'\n\t\t\t\t\t\tprimaryButtonDisabled={ shareOptionsState.selectedExportOption === null }\n\t\t\t\t\t\tsecondaryButtonText='Cancel'\n\t\t\t\t\t\tmodalHeading={`Share '${fragment.title}'`}>\n\t\t\t\t\t\t<div className={exportOptionsWrapper}>\n\t\t\t\t\t\t\t<SelectionTile\n\t\t\t\t\t\t\t\tstyles={exportOptionTileWrapper}\n\t\t\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\t\t\tsetShareOptionsState({\n\t\t\t\t\t\t\t\t\t\t...shareOptionsState,\n\t\t\t\t\t\t\t\t\t\tselectedExportOption: Exports.CODE\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\ticon={<Code32 />}\n\t\t\t\t\t\t\t\tselected={shareOptionsState.selectedExportOption === Exports.CODE}\n\t\t\t\t\t\t\t\tlabel='Code' />\n\t\t\t\t\t\t\t<SelectionTile\n\t\t\t\t\t\t\t\tstyles={exportOptionTileWrapper}\n\t\t\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\t\t\tsetShareOptionsState({\n\t\t\t\t\t\t\t\t\t\t...shareOptionsState,\n\t\t\t\t\t\t\t\t\t\tselectedExportOption: Exports.IMAGE\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\ticon={<Image32 />}\n\t\t\t\t\t\t\t\tselected={shareOptionsState.selectedExportOption === Exports.IMAGE}\n\t\t\t\t\t\t\t\tlabel='Image' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Modal>\n\t\t\t\t);\n\t\t\tcase ShareOptionsModals.CODE_EXPORTS:\n\t\t\t\treturn (\n\t\t\t\t\t<ExportCode\n\t\t\t\t\t\tfragment={fragment}\n\t\t\t\t\t\tdisplayedModal={displayedModal}\n\t\t\t\t\t\tsetDisplayedModal={setDisplayedModal} />\n\t\t\t\t);\n\t\t\tcase ShareOptionsModals.IMAGE_EXPORTS:\n\t\t\tdefault:\n\t\t\t\treturn <ExportImageModal\n\t\t\t\t\tfragment={fragment}\n\t\t\t\t\tdisplayedModal={displayedModal}\n\t\t\t\t\tsetDisplayedModal={setDisplayedModal}/>;\n\t\t}\n\t};\n\n\treturn shareModalSwitcher();\n};\n","import LZString from 'lz-string';\n\nexport const createFragmentSandbox = (fragmentTemplate: any) => {\n\tconst files: Record<string, any> = {};\n\n\tObject.keys(fragmentTemplate)\n\t\t.forEach((filePath: string) => files[filePath] = { content: fragmentTemplate[filePath] });\n\n\treturn LZString.compressToBase64(JSON.stringify({ files }))\n\t\t.replace(/\\+/g, `-`) // '+' -> '-'\n\t\t.replace(/\\//g, `_`) // '/' -> '_'\n\t\t.replace(/=+$/, ``); // Remove ending '='\n};\n","import { format as formatPrettier, Options } from 'prettier';\nimport parserBabel from 'prettier/parser-babel';\nimport parserCss from 'prettier/parser-postcss';\nimport { getAllFragmentStyleClasses, hasFragmentStyleClasses } from '../../../../../utils/fragment-tools';\n\nconst format = (source: string, options?: Options | undefined) => {\n\t// we're catching and ignorring errors so live editing doesn't throw errors\n\ttry {\n\t\treturn formatPrettier(source, options);\n\t} catch (_) {\n\t\treturn source;\n\t}\n};\n\nconst addIfNotExist = (arr: any[], items: any[]) => {\n    items.forEach(item => {\n        if (!arr.includes(item)) {\n            arr.push(item);\n        }\n    });\n    return arr;\n}\n\nconst jsonToImports = (json: any) => {\n    const imports: any[] = [];\n\n    switch (json.type) {\n        case \"button\":\n            addIfNotExist(imports, ['Button']);\n            break;\n\n        case \"checkbox\":\n            addIfNotExist(imports, ['Checkbox']);\n            break;\n\n        case \"textarea\":\n            addIfNotExist(imports, ['TextArea']);\n            break;\n\n        case \"textinput\":\n            addIfNotExist(imports, ['TextInput']);\n            break;\n\n        case \"grid\":\n            addIfNotExist(imports, ['Grid', 'Row', 'Column']);\n\t}\n\n\tif (json.items) {\n        json.items.forEach((item: any) => {\n            addIfNotExist(imports, jsonToImports(item));\n        });\n\t}\n\n    return imports;\n};\n\nconst getCellAttributeString = (cell: any, sizeShort: string, sizeLong: string) => {\n\tconst span = cell[`${sizeLong}Span`];\n\tconst offset = cell[`${sizeLong}Offset`];\n\n\tif (!span && ! offset) {\n\t\treturn '';\n\t}\n\n\tconst spanString = `span: ${span}`;\n\tconst offsetString = `offset: ${offset}`;\n\n\tconst spanAndOffset = `{\n\t\t${span ? spanString : ''}${span && offset ? ',' : ''}\n\t\t${offset ? offsetString : ''}\n\t}`;\n\n\treturn `${sizeShort}={${!offset ? span : spanAndOffset}}`;\n};\n\nconst getCellParamsString = (cell: any) => {\n\treturn `\n\t\t${getCellAttributeString(cell, 'sm', 'small')}\n\t\t${getCellAttributeString(cell, 'md', 'medium')}\n\t\t${getCellAttributeString(cell, 'lg', 'large')}\n\t\t${getCellAttributeString(cell, 'xlg', 'xLarge')}\n\t\t${getCellAttributeString(cell, 'max', 'max')}\n\t`;\n};\n\nexport const jsonToTemplate = (json: any) => {\n    if (typeof json === \"string\" || !json) {\n        return json;\n    }\n\n\tconst classNames = (j: any = json) => j.cssClasses && Array.isArray(j.cssClasses) && j.cssClasses.length > 0\n\t\t? `className='${j.cssClasses.map((cc: any) => cc.id).join(' ')}'`\n\t\t: '';\n\n    switch (json.type) {\n        case \"text\":\n\t\t\tif (json.cssClasses) {\n\t\t\t\treturn `<span ${classNames()}>${json.text}</span>`;\n\t\t\t}\n            return json.text;\n\n        case \"button\":\n            return `<Button${json.kind && ` kind=\"${json.kind}\"`} ${classNames()}>${json.text}</Button>`;\n\n        case \"checkbox\":\n\t\t\treturn `<Checkbox\n\t\t\t\tlabelText=\"${json.label}\"\n\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\tid=\"${json.codeContext?.name}\"\n\t\t\t\tchecked={state[\"${json.codeContext?.name}\"]?.checked}\n\t\t\t\t${classNames()}\n\t\t\t\tonChange={(checked) => handleInputChange({\n\t\t\t\t\ttarget: {\n\t\t\t\t\t\tname: \"${json.codeContext?.name}\",\n\t\t\t\t\t\tvalue: checked\n\t\t\t\t\t}\n\t\t\t\t})} />`;\n\n\t\tcase \"textinput\":\n\t\t\treturn `<TextInput\n\t\t\t\tlabelText=\"${json.label}\"\n\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\thelperText=\"${json.helperText}\"\n\t\t\t\tplaceholder=\"${json.placeholder}\"\n\t\t\t\tvalue={state[\"${json.codeContext?.name}\"]}\n\t\t\t\t${classNames()}\n\t\t\t\tonChange={handleInputChange} />`;\n\n        case \"textarea\":\n\t\t\treturn `<TextArea\n\t\t\t\tlabelText=\"${json.label}\"\n\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\thelperText=\"${json.helperText}\"\n\t\t\t\tplaceholder=\"${json.placeholder}\"\n\t\t\t\tvalue={state[\"${json.codeContext?.name}\"]}\n\t\t\t\t${classNames()}\n\t\t\t\tonChange={handleInputChange} />`;\n\n        case \"grid\":\n            return `<Grid ${classNames()}>\n    ${json.items.map((row: any) => `<Row ${classNames(row)}>\n        ${row.items.map((cell: any) => `<Column ${getCellParamsString(cell)} ${classNames(cell)}>\n                ${jsonToTemplate(cell)}\n        </Column>`).join('\\n')}\n    </Row>`).join('\\n')}\n</Grid>`;\n\n        default:\n            break;\n\t}\n\n    if (json.items) {\n        return json.items.map((item: any) => jsonToTemplate(item)).join('\\n');\n    }\n};\n\n\nconst generateTemplate = (json: any) => {\n\tconst carbonImports = jsonToImports(json);\n\tconst carbonImportsString = carbonImports.reduce((string: string, curr: string) => (\n\t\tstring += `${curr}, `\n\t), '');\n\treturn {\n\t\timports: `import { ${carbonImportsString} } from 'carbon-components-react'`,\n\t\ttemplate: jsonToTemplate(json)\n\t};\n};\n\nexport const createReactApp = (fragment: any) => {\n\tconst fragmentTemplate = generateTemplate(fragment.data);\n\tconst formatOptions: Options = {\n\t\tplugins: [parserBabel],\n\t\ttrailingComma: 'none',\n\t\tuseTabs: true\n\t};\n\tconst formatOptionsCss: Options = {\n\t\tparser: 'css',\n\t\tplugins: [parserCss]\n\t};\n\n\tconst indexHtml = `<div id='root'></div>\n`;\n\tconst componentJs\n\t\t= `import React from 'react';\n${fragmentTemplate.imports};\n${hasFragmentStyleClasses(fragment) ? \"\\nimport './component.scss';\\n\" : ''}\nexport const FragmentComponent = ({state, setState}) => {\n\tconst handleInputChange = (event) => {\n\t\tsetState({...state, [event.target.name]: event.target.value});\n\t};\n\n\treturn <>${fragmentTemplate.template}</>;\n};\n`;\n\n\tconst componentScss = getAllFragmentStyleClasses(fragment).map((styleClass: any) => `.${styleClass.id} {\n\t${styleClass.content}\n}`).join('\\n');\n\n\tconst indexJs\n\t\t= `import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'carbon-components/css/carbon-components.css';\n\nimport { FragmentComponent } from './component.js';\n\nconst App = () => {\n\tconst [state, setState] = useState({});\n\n\treturn (\n\t\t<div>\n\t\t\t<FragmentComponent state={state} setState={setState} />\n\t\t</div>\n\t);\n}\nReactDOM.render(<App />, document.getElementById('root'));\n`;\n\tconst packageJson = {\n\t\tdependencies: {\n\t\t\t'carbon-components': '10.15.0',\n\t\t\t'carbon-icons': '7.0.7',\n\t\t\t'@carbon/icons-react': '10.15.0',\n\t\t\t'carbon-components-react': '7.15.0',\n\t\t\treact: '16.12.0',\n\t\t\t'react-dom': '16.12.0',\n\t\t\t'react-scripts': '3.0.1',\n\t\t\t'sass': '1.45.0',\n\t\t\temotion: '10.0.27'\n\t\t}\n\t};\n\treturn {\n\t\t'src/index.html': indexHtml,\n\t\t'src/index.js': format(indexJs, formatOptions),\n\t\t'src/component.js': format(componentJs, formatOptions),\n\t\t'src/component.scss': format(componentScss, formatOptionsCss),\n\t\t'package.json': packageJson\n\t};\n};\n","import { camelCase } from 'lodash';\nimport { format as formatPrettier, Options } from 'prettier';\nimport parserBabel from 'prettier/parser-babel';\nimport parserHtml from 'prettier/parser-html';\nimport parserCss from 'prettier/parser-postcss';\nimport { getAllFragmentStyleClasses, hasFragmentStyleClasses } from '../../../../../utils/fragment-tools';\n\nconst format = (source: string, options?: Options | undefined) => {\n\t// we're catching and ignorring errors so live editing doesn't throw errors\n\ttry {\n\t\treturn formatPrettier(source, options);\n\t} catch (_) {\n\t\treturn source;\n\t}\n};\n\nconst addIfNotExist = (arr: any[], items: any[]) => {\n    items.forEach(item => {\n        if (!arr.includes(item)) {\n            arr.push(item);\n        }\n    });\n    return arr;\n}\n\nconst jsonToAngularImports = (json: any) => {\n    const imports: any[] = [];\n\n    switch (json.type) {\n        case \"button\":\n            addIfNotExist(imports, ['ButtonModule']);\n            break;\n\n        case \"checkbox\":\n            addIfNotExist(imports, ['CheckboxModule']);\n            break;\n\n        case \"textarea\":\n\t\tcase \"textinput\":\n            addIfNotExist(imports, ['InputModule']);\n            break;\n\n        case \"grid\":\n            addIfNotExist(imports, ['GridModule']);\n\t}\n\n\tif (json.items) {\n        json.items.forEach((item: any) => {\n            addIfNotExist(imports, jsonToAngularImports(item));\n        });\n\t}\n\n    return imports;\n};\n\nexport const nameStringToVariableString = (name: string) => camelCase(name);\n\nconst getAngularInputsFromJson = (json: any): string => {\n\tconst getOne = (json: any) => {\n\t\tswitch(json.type) {\n\t\t\tcase 'checkbox':\n\t\t\t\treturn `@Input() ${nameStringToVariableString(json.codeContext?.name)}Checked: boolean;\n\t\t\t\t`\n\n\t\t\tdefault:\n\t\t\t\treturn '';\n\t\t}\n\t};\n\n\treturn `${getOne(json)} ${json.items ? json.items.map((item: any) => getAngularInputsFromJson(item)).join('\\n') : ''}\n\t`;\n};\n\nconst getAngularOutputsFromJson = (json: any): string => {\n\tconst getOne = (json: any) => {\n\t\tswitch(json.type) {\n\t\t\tcase 'checkbox':\n\t\t\t\treturn `@Output() ${nameStringToVariableString(json.codeContext?.name)}CheckedChange = new EventEmitter<boolean>();\n\t\t\t\t`\n\n\t\t\tdefault:\n\t\t\t\treturn '';\n\t\t}\n\t};\n\n\treturn `${getOne(json)} ${json.items ? json.items.map((item: any) => getAngularOutputsFromJson(item)).join('\\n') : ''}\n\t`;\n};\n\nexport const jsonToTemplate = (json: any) => {\n    if (typeof json === \"string\" || !json) {\n        return json;\n    }\n\n\tconst classNames = (j: any = json) => j.cssClasses && Array.isArray(j.cssClasses) && j.cssClasses.length > 0\n\t\t? `class='${j.cssClasses.map((cc: any) => cc.id).join(' ')}'`\n\t\t: '';\n\n    switch (json.type) {\n        case \"text\":\n\t\t\tif (json.cssClasses) {\n\t\t\t\treturn `<span ${classNames()}>${json.text}</span>`;\n\t\t\t}\n            return json.text;\n\n        case \"button\":\n            return `<button ${json.kind ? `ibmButton='${json.kind}'` : 'ibmButton'} ${classNames()}>${json.text}</button>`;\n\n        case \"checkbox\":\n\t\t\treturn `<ibm-checkbox\n\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\tid=\"${json.codeContext?.name}\"\n\t\t\t\t[(checked)]=\"${nameStringToVariableString(json.codeContext?.name)}Checked\"\n\t\t\t\t(checkedChange)=\"${nameStringToVariableString(json.codeContext?.name)}CheckedChange.emit($event)\"\n\t\t\t\t${classNames()}>\n\t\t\t\t\t${json.label}\n\t\t\t\t</ibm-checkbox>`;\n\n\t\tcase \"textinput\":\n\t\t\treturn `<ibm-label\n\t\t\t\thelperText=\"${json.helperText}\">\n\t\t\t\t\t${json.label}\n\t\t\t\t\t<input\n\t\t\t\t\t\tibmText\n\t\t\t\t\t\t${classNames()}\n\t\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\t\tplaceholder=\"${json.placeholder}\">\n\t\t\t\t</ibm-label>`;\n\n        case \"textarea\":\n\t\t\treturn `<ibm-label\n\t\t\t\thelperText=\"${json.helperText}\">\n\t\t\t\t\t${json.label}\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tibmTextArea\n\t\t\t\t\t\t${classNames()}\n\t\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\t\tplaceholder=\"${json.placeholder}\"></textarea>\n\t\t\t\t</ibm-label>`;\n\n        case \"grid\":\n\t\t\treturn `<div ibmGrid ${classNames()}>\n\t\t\t\t${json.items.map((row: any) => `<div ibmRow ${classNames(row)}>\n\t\t\t\t\t${row.items.map((cell: any) => `<div ibmCol ${classNames(cell)}>\n\t\t\t\t\t\t\t${jsonToTemplate(cell)}\n\t\t\t\t\t</div>`).join('\\n')}\n\t\t\t\t</div>`).join('\\n')}\n\t\t\t</div>`;\n\n        default:\n            break;\n\t}\n\n    if (json.items) {\n        return json.items.map((item: any) => jsonToTemplate(item)).join('\\n');\n    }\n};\n\n\nexport const createAngularApp = (fragment: any) => {\n\tconst formatOptionsTypescript: Options = {\n\t\tplugins: [parserBabel],\n\t\ttrailingComma: 'none',\n\t\tuseTabs: true,\n\t\tparser: 'babel-ts'\n\t};\n\tconst formatOptionsHtml: Options = {\n\t\tplugins: [parserHtml],\n\t\ttrailingComma: 'none',\n\t\tuseTabs: true,\n\t\tparser: 'html'\n\t};\n\tconst formatOptionsCss: Options = {\n\t\tparser: 'css',\n\t\tplugins: [parserCss]\n\t};\n\n\tconst appComponentHtml =\n\t\t`<app-fragment></app-fragment>\n\t\t`;\n\n\tconst appComponentTs =\n\t\t`import { Component } from '@angular/core';\n\t\t@Component({\n\t\t\tselector: 'app-root',\n\t\t\ttemplateUrl: './app.component.html'\n\t\t})\n\t\texport class AppComponent {\n\t\t}\n\t\t`;\n\n\tconst appModule =\n\t\t`import { NgModule } from '@angular/core';\n\t\timport { BrowserModule } from '@angular/platform-browser';\n\t\timport { AppComponent } from './app.component';\n\t\timport { FragmentModule } from './components/fragment/fragment.module';\n\n\t\t@NgModule({\n\t\t\timports: [BrowserModule, FragmentModule],\n\t\t\tdeclarations: [AppComponent],\n\t\t\tbootstrap: [AppComponent]\n\t\t})\n\t\texport class AppModule {}\n\t\t`;\n\n\tconst fragmentModuleTs =\n\t\t`import { NgModule } from '@angular/core';\n\t\timport { ${jsonToAngularImports(fragment.data).join(', ')} } from 'carbon-components-angular';\n\t\timport { FragmentComponent } from './fragment.component';\n\n\t\t@NgModule({\n\t\t\timports: [${jsonToAngularImports(fragment.data).join(', ')}],\n\t\t\tdeclarations: [FragmentComponent],\n\t\t\texports: [FragmentComponent]\n\t\t})\n\t\texport class FragmentModule {}\n\t\t`;\n\n\tconst fragmentComponentTs =\n\t\t`import { Component, Input, Output, EventEmitter } from '@angular/core';\n\t\t@Component({\n\t\t\tselector: 'app-fragment',\n\t\t\ttemplateUrl: './fragment.component.html'${hasFragmentStyleClasses(fragment) ? `,\n\t\t\tstyleUrls: ['./fragment.component.scss']` : ''}\n\t\t})\n\t\texport class FragmentComponent {\n\t\t\t${getAngularInputsFromJson(fragment.data)}\n\t\t\t${getAngularOutputsFromJson(fragment.data)}\n\t\t}`;\n\n\tconst fragmentComponentHtml = jsonToTemplate(fragment.data);\n\n\tconst fragmentComponentScss = getAllFragmentStyleClasses(fragment).map((styleClass: any) => `.${styleClass.id} {\n\t\t${styleClass.content}\n\t}`).join('\\n');\n\n\tconst indexHtml =\n\t\t`<!DOCTYPE html>\n\t\t<html lang='en'>\n\t\t\t<head>\n\t\t\t\t<meta charset='utf-8' />\n\t\t\t\t<title>Angular</title>\n\t\t\t</head>\n\t\t\t<body>\n\t\t\t\t<app-root></app-root>\n\t\t\t</body>\n\t\t</html>\n\t\t`;\n\n\tconst mainTs =\n\t\t`import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\t\timport { AppModule } from './app/app.module';\n\n\t\timport \"carbon-components/css/carbon-components.min.css\";\n\n\t\tplatformBrowserDynamic()\n\t\t\t.bootstrapModule(AppModule)\n\t\t\t.catch(err => console.log(err));\n\t\t`;\n\n\tconst angularCliJson =\n`{\n\t\"apps\": [\n\t\t{\n\t\t\t\"root\": \"src\",\n\t\t\t\"outDir\": \"dist\",\n\t\t\t\"assets\": [\"assets\", \"favicon.ico\"],\n\t\t\t\"index\": \"index.html\",\n\t\t\t\"main\": \"main.ts\",\n\t\t\t\"polyfills\": \"polyfills.ts\",\n\t\t\t\"prefix\": \"app\",\n\t\t\t\"styles\": [\"styles.scss\"],\n\t\t\t\"scripts\": [],\n\t\t\t\"environmentSource\": \"environments/environment.ts\",\n\t\t\t\"environments\": {\n\t\t\t\t\"dev\": \"environments/environment.ts\",\n\t\t\t\t\"prod\": \"environments/environment.prod.ts\"\n\t\t\t}\n\t\t}\n\t]\n}\n`;\n\n\tconst packageJson = {\n\t\tdependencies: {\n\t\t\t'@angular/animations': '12.2.0',\n\t\t\t'@angular/common': '12.2.0',\n\t\t\t'@angular/compiler': '12.2.0',\n\t\t\t'@angular/core': '12.2.0',\n\t\t\t'@angular/forms': '12.2.0',\n\t\t\t'@angular/platform-browser': '12.2.0',\n\t\t\t'@angular/platform-browser-dynamic': '12.2.0',\n\t\t\t'@angular/router': '12.2.0',\n\t\t\t'rxjs': '6.6.0',\n\t\t\t'tslib': '2.3.0',\n\t\t\t'sass': '1.45.0',\n\t\t\t'zone.js': '0.11.4',\n\t\t\t'carbon-components-angular': '4.56.2',\n\t\t\t'carbon-components': '10.15.0'\n\t\t}\n\t};\n\n\treturn {\n\t\t'src/index.html': format(indexHtml, formatOptionsHtml),\n\t\t'src/main.ts': format(mainTs, formatOptionsTypescript),\n\t\t'src/polyfills.ts': format(\"import 'zone.js/dist/zone';\", formatOptionsTypescript),\n\t\t'src/styles.scss': format('', formatOptionsCss),\n\t\t'src/app/app.component.html': format(appComponentHtml, formatOptionsHtml),\n\t\t'src/app/app.component.ts': format(appComponentTs, formatOptionsTypescript),\n\t\t'src/app/app.module.ts': format(appModule, formatOptionsTypescript),\n\t\t'src/app/components/fragment/fragment.module.ts': format(fragmentModuleTs, formatOptionsTypescript),\n\t\t'src/app/components/fragment/fragment.component.ts': format(fragmentComponentTs, formatOptionsTypescript),\n\t\t'src/app/components/fragment/fragment.component.html': format(fragmentComponentHtml, formatOptionsHtml),\n\t\t'src/app/components/fragment/fragment.component.scss': hasFragmentStyleClasses(fragment)\n\t\t\t? format(fragmentComponentScss, formatOptionsCss)\n\t\t\t: undefined,\n\t\t'.angular-cli.json': angularCliJson,\n\t\t'package.json': packageJson\n\t};\n};\n","// Used to map fragment types to corresponding vanilla fragment tag.\nconst fragmentTagMap: Record<string, string> = {\n};\n\nexport const createVanillaApp = (fragment: any) => {\n\tconst fragmentData = JSON.stringify(fragment.data, null, '\\t');\n\tconst fragmentType = `${fragment.type}`;\n\n\tconst indexHtml\n= `<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>Vanilla</title>\n\t\t<meta charset='UTF-8' />\n\t</head>\n\t<body>\n\t\t<div style='height: 500px; min-width: 100%;'>\n\t\t\t<div id='my-fragment'></div>\n\t\t</div>\n\t\t<script src='src/index.js'>\n\t\t</script>\n\t</body>\n</html>\n`;\n\n\tconst indexJs\n= `import '@carbon/fragments/styles.css';\nimport { ${fragmentTagMap[fragmentType]} } from '@carbon/fragments';\n// grab fragment holder DOM element\nconst fragmentHolder = document.getElementById('my-fragment');\n// initialize the fragment\nnew ${fragmentTagMap[fragmentType]}(fragmentHolder, {\n\tdata: ${fragmentData},\n});\n`;\n\n\tconst packageJson = {\n\t\tdependencies: {\n\t\t\t'@carbon/fragments': '0.38.8',\n\t\t\t'carbon-components': '10.20.0',\n\t\t\t'@carbon/colors': '10.11.0',\n\t\t\td3: '5.15.0'\n\t\t}\n\t};\n\n\treturn {\n\t\t'index.html': indexHtml,\n\t\t'src/index.js': indexJs,\n\t\t'package.json': packageJson\n\t};\n};\n","// Used to map fragment types to corresponding vue fragment tag.\nconst fragmentTagMap: Record<string, string> = {\n\t'simple-bar-fragment': 'ccv-simple-bar-fragment',\n\t'grouped-bar-fragment': 'ccv-grouped-bar-fragment',\n\t'stacked-bar-fragment': 'ccv-stacked-bar-Fragment',\n\t'line-fragment': 'ccv-line-fragment',\n\t'scatter-fragment': 'ccv-scatter-fragment',\n\t'pie-fragment': 'ccv-pie-fragment',\n\t'donut-fragment': 'ccv-donut-fragment',\n\tdataAndOptions: ':data=\\'data\\' :options=\\'options\\''\n};\n\nexport const createVueApp = (fragment: any) => {\n\tconst fragmentData = JSON.stringify(fragment.data, null, '\\t');\n\tconst fragmentType = `${fragment.type}`;\n\n\tconst fragmentVue\n= `<script>\n\timport Vue from 'vue';\n\timport '@carbon/fragments/styles.css';\n\timport fragmentsVue from '@carbon/fragments-vue';\n\tVue.use(fragmentsVue);\n\texport default {\n\t\tname: 'Fragment',\n\t\tcomponents: {},\n\t\tdata() {\n\t\t\treturn {\n\t\t\tdata:\n\t\t\t${fragmentData}\n\t\t};\n\t},\n\ttemplate:\n\t\t\"<${fragmentTagMap[fragmentType]} :data='data' :options='options'></${fragmentTagMap[fragmentType]}>\"\n\t};\n</script>\n`;\n\n\tconst appVue\n= `<template>\n<div id='app' style='height: 500px; min-width: 100%;'>\n<Fragment/>\n</div>\n</template>\n<script>\n\timport Fragment from './components/fragment';\n\texport default {\n\t\tname: 'App',\n\t\tcomponents: {\n\t\t\tFragment\n\t\t}\n\t};\n</script>\n`;\n\tconst mainJs\n= `import Vue from 'vue';\nimport App from './App.vue';\nVue.config.productionTip = false;\nnew Vue({\n\trender: h => h(App)\n}).$mount('#app');\n`;\n\n\tconst packageJson = {\n\t\tdependencies: {\n\t\t\t'@carbon/fragments': '0.38.8',\n\t\t\t'@carbon/fragments-vue': '0.38.8',\n\t\t\t'@vue/cli-plugin-babel': '4.1.1',\n\t\t\td3: '5.15.0',\n\t\t\tvue: '2.6.11'\n\t\t}\n\t};\n\n\treturn {\n\t\t'src/components/fragment.vue': fragmentVue,\n\t\t'src/App.vue': appVue,\n\t\t'src/main.js': mainJs,\n\t\t'package.json': packageJson\n\t};\n};\n","import { extension } from 'mime-types';\n\nexport const getFullFileName = (name: string, mimeType: string) => (\n\t`${name}.${extension(mimeType)}`\n);\n\nexport const saveFile = (url: string, fileName: string) => {\n\tconst anchor = document.createElement('a');\n\tanchor.href = url;\n\tanchor.download = fileName;\n\tanchor.click();\n};\n\nexport const saveBlob = (blob: any, fileName: string) => {\n\tconst url = URL.createObjectURL(blob);\n\tsaveFile(url, fileName);\n\n\t// Give it a second to download :)\n\tsetTimeout(() => {\n\t\tURL.revokeObjectURL(url);\n\t}, 1000);\n};\n\nexport const warningNotificationProps = {\n\tlowContrast: true,\n\trole: 'alert',\n\tnotificationType: 'inline',\n\tkind: 'warning',\n\ttitle: 'Uploaded data has been modified',\n\tsubtitle: 'data did not match expected format so we modified it so you can still use it'\n};\n\nexport const errorNotificationProps = {\n\tlowContrast: true,\n\trole: 'alert',\n\tnotificationType: 'inline',\n\tkind: 'error',\n\ttitle: 'Error',\n\tsubtitle: ''\n};\n","import React, { useContext } from 'react';\n\nimport { ShareOptionsModals } from '../share-options-modal';\n\nimport { createFragmentSandbox } from './create-fragment-sandbox';\nimport { createReactApp } from './frameworks/react-fragment';\nimport { createAngularApp } from './frameworks/angular-fragment';\nimport { createVanillaApp } from './frameworks/vanilla-fragment';\nimport { createVueApp } from './frameworks/vue-fragment';\n\nimport {\n\tButton,\n\tCodeSnippet,\n\tModal,\n\tTab,\n\tTabs\n} from 'carbon-components-react';\nimport { css } from 'emotion';\nimport { ModalContext, ModalActionType } from '../../../../context/modal-context';\nimport { saveBlob } from '../../../../utils/file-tools';\n\nconst exportCodeModalStyle = css`\n\t.bx--tabs__nav-item {\n\t\twidth: calc(20% - 1px);\n\t}\n`;\n\nconst codeSnippetWrapper = css`\n    margin-top: 20px;\n    p {\n        margin-bottom: 7px;\n    }\n`;\n\nconst titleWrapper = css`\n    display: flex;\n    margin-top: 30px;\n    a, button {\n        margin-left: auto;\n    }\n`;\n\nconst codeSnippet = css`\n    .bx--copy-btn {\n        background: white;\n    }\n`;\n\ninterface ExportCodeProps {\n    fragment: any,\n    displayedModal: ShareOptionsModals | null,\n    setDisplayedModal: (displayedModal: ShareOptionsModals | null) => void\n}\n\nexport const ExportCode = ({\n\tfragment,\n\tdisplayedModal,\n\tsetDisplayedModal\n}: ExportCodeProps) => {\n\tconst [modalState, dispatchModal] = useContext(ModalContext);\n\tconst jsonCode: any = JSON.stringify(fragment.data, null, 2);\n\tconst vanillaCode: any = createVanillaApp(fragment);\n\tconst reactCode: any = createReactApp(fragment);\n\tconst angularCode: any = createAngularApp(fragment);\n\tconst vueCode: any = createVueApp(fragment);\n\n\tconst generateSandboxUrl = (parameters: any) => (`https://codesandbox.io/api/v1/sandboxes/define?parameters=${parameters}`);\n\n\treturn (\n\t\t<Modal\n\t\t\thasForm\n\t\t\topen={modalState.ShowModal && displayedModal === ShareOptionsModals.CODE_EXPORTS}\n\t\t\tonRequestClose={() => dispatchModal({ type: ModalActionType.closeModal })}\n\t\t\tprimaryButtonText='Done'\n\t\t\tsecondaryButtonText='Back to export options'\n\t\t\tonRequestSubmit={() => dispatchModal({ type: ModalActionType.closeModal })}\n\t\t\tonSecondarySubmit={() => { setDisplayedModal(ShareOptionsModals.SHARE_OPTIONS); }}\n\t\t\tmodalHeading={`Export \"${fragment.title}\" code`}\n\t\t\tclassName={exportCodeModalStyle}>\n\t\t\t<Tabs selected={3}>\n\t\t\t\t<Tab\n\t\t\t\t\tid='json'\n\t\t\t\t\tlabel='JSON'\n\t\t\t\t\trole='presentation'\n\t\t\t\t\ttabIndex={0}>\n\t\t\t\t\t<div className={titleWrapper}>\n\t\t\t\t\t\t<h3>JSON</h3>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\tkind='ghost'\n\t\t\t\t\t\tonClick={() => saveBlob(new Blob([jsonCode]), `${fragment.title}.json`)}>\n\t\t\t\t\t\t\tDownload JSON\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<CodeSnippet\n\t\t\t\t\t\ttype='multi'\n\t\t\t\t\t\tlight\n\t\t\t\t\t\tclassName={codeSnippet}\n\t\t\t\t\t\tcopyButtonDescription={`Copy JSON to clipboard`}>\n\t\t\t\t\t\t{ jsonCode }\n\t\t\t\t\t</CodeSnippet>\n\t\t\t\t</Tab>\n\t\t\t\t<Tab\n\t\t\t\t\tid='vanilla'\n\t\t\t\t\tlabel='Vanilla JS'\n\t\t\t\t\trole='presentation'\n\t\t\t\t\tdisabled\n\t\t\t\t\ttabIndex={0}>\n\t\t\t\t\t<div className={titleWrapper}>\n\t\t\t\t\t\t<h3>Vanilla JS Code</h3>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={generateSandboxUrl(createFragmentSandbox(vanillaCode))}\n\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t\trel='noopener noreferrer'>\n\t\t\t\t\t\t\tEdit on CodeSandbox\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p className={css`color: red`}>/Only React works atm/</p>\n\t\t\t\t\t{\n\t\t\t\t\t\tObject.keys(vanillaCode).map((fileName: string) => (\n\t\t\t\t\t\t\t<div className={codeSnippetWrapper} key={fileName}>\n\t\t\t\t\t\t\t\t<p>{fileName}</p>\n\t\t\t\t\t\t\t\t<CodeSnippet\n\t\t\t\t\t\t\t\t\ttype='multi'\n\t\t\t\t\t\t\t\t\tlight\n\t\t\t\t\t\t\t\t\tclassName={codeSnippet}\n\t\t\t\t\t\t\t\t\tcopyButtonDescription={`Copy ${fileName} to clipboard`}>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tfileName !== 'package.json'\n\t\t\t\t\t\t\t\t\t\t\t? vanillaCode[fileName]\n\t\t\t\t\t\t\t\t\t\t\t: JSON.stringify(vanillaCode[fileName], null, '\\t')\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</CodeSnippet>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</Tab>\n\t\t\t\t<Tab\n\t\t\t\t\tid='Angular'\n\t\t\t\t\tlabel='Angular'\n\t\t\t\t\trole='presentation'\n\t\t\t\t\ttabIndex={0}>\n\t\t\t\t\t<div className={titleWrapper}>\n\t\t\t\t\t\t<h3>Angular Code</h3>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={generateSandboxUrl(createFragmentSandbox(angularCode))}\n\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t\trel='noopener noreferrer'>\n\t\t\t\t\t\t\tEdit on CodeSandbox\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t{\n\t\t\t\t\t\tObject.keys(angularCode).map((fileName: string) => (\n\t\t\t\t\t\t\t<div className={codeSnippetWrapper} key={fileName}>\n\t\t\t\t\t\t\t\t<p>{fileName}</p>\n\t\t\t\t\t\t\t\t<CodeSnippet\n\t\t\t\t\t\t\t\t\ttype='multi'\n\t\t\t\t\t\t\t\t\tlight\n\t\t\t\t\t\t\t\t\tclassName={codeSnippet}\n\t\t\t\t\t\t\t\t\tcopyButtonDescription={`Copy ${fileName} to clipboard`}>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tfileName !== 'package.json'\n\t\t\t\t\t\t\t\t\t\t\t? angularCode[fileName]\n\t\t\t\t\t\t\t\t\t\t\t: JSON.stringify(angularCode[fileName], null, '\\t')\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</CodeSnippet>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</Tab>\n\t\t\t\t<Tab\n\t\t\t\t\tid='react'\n\t\t\t\t\tlabel='React'\n\t\t\t\t\trole='presentation'\n\t\t\t\t\ttabIndex={0}>\n\t\t\t\t\t<div className={titleWrapper}>\n\t\t\t\t\t\t<h3>React Code</h3>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={generateSandboxUrl(createFragmentSandbox(reactCode))}\n\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t\trel='noopener noreferrer'>\n\t\t\t\t\t\t\tEdit on CodeSandbox\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t{\n\t\t\t\t\t\tObject.keys(reactCode).map((fileName: string) => (\n\t\t\t\t\t\t\t<div className={codeSnippetWrapper} key={fileName}>\n\t\t\t\t\t\t\t\t<p>{fileName}</p>\n\t\t\t\t\t\t\t\t<CodeSnippet\n\t\t\t\t\t\t\t\t\ttype='multi'\n\t\t\t\t\t\t\t\t\tlight\n\t\t\t\t\t\t\t\t\tclassName={codeSnippet}\n\t\t\t\t\t\t\t\t\tcopyButtonDescription={`Copy ${fileName} to clipboard`}>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tfileName !== 'package.json'\n\t\t\t\t\t\t\t\t\t\t\t? reactCode[fileName]\n\t\t\t\t\t\t\t\t\t\t\t: JSON.stringify(reactCode[fileName], null, '\\t')\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</CodeSnippet>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</Tab>\n\t\t\t\t<Tab\n\t\t\t\t\tid='vue'\n\t\t\t\t\tlabel='Vue'\n\t\t\t\t\trole='presentation'\n\t\t\t\t\tdisabled\n\t\t\t\t\ttabIndex={0}>\n\t\t\t\t\t<div className={titleWrapper}>\n\t\t\t\t\t\t<h3>Vue Code</h3>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={generateSandboxUrl(createFragmentSandbox(vueCode))}\n\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t\trel='noopener noreferrer'>\n\t\t\t\t\t\t\tEdit on CodeSandbox\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p className={css`color: red`}>/Only React works atm/</p>\n\t\t\t\t\t{\n\t\t\t\t\t\tObject.keys(vueCode).map((fileName: string) => (\n\t\t\t\t\t\t\t<div className={codeSnippetWrapper} key={fileName}>\n\t\t\t\t\t\t\t\t<p>{fileName}</p>\n\t\t\t\t\t\t\t\t<CodeSnippet\n\t\t\t\t\t\t\t\t\ttype='multi'\n\t\t\t\t\t\t\t\t\tlight\n\t\t\t\t\t\t\t\t\tclassName={codeSnippet}\n\t\t\t\t\t\t\t\t\tcopyButtonDescription={`Copy ${fileName} to clipboard`}>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tfileName !== 'package.json'\n\t\t\t\t\t\t\t\t\t\t\t? vueCode[fileName]\n\t\t\t\t\t\t\t\t\t\t\t: JSON.stringify(vueCode[fileName], null, '\\t')\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</CodeSnippet>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</Tab>\n\t\t\t</Tabs>\n\t\t</Modal>\n\t);\n};\n","import React from 'react';\nimport { css } from 'emotion';\n\nimport { SelectableTile } from 'carbon-components-react';\n\nconst tileFooter = css`\n\tposition: absolute;\n\tdisplay: flex;\n\twidth: 100%;\n\tjustify-content: space-between;\n\tbottom: 15px;\n\tp {\n\t\tfont-weight: bold;\n\t}\n\tspan {\n\t\tmargin-right: 30px;\n\t}\n`;\n\nexport interface SelectionTile {\n\tstyles?: any,\n\tonChange?: any,\n\ticon?: JSX.Element | null,\n\tlabel?: string,\n\tselected?: boolean,\n\ttag?: JSX.Element | null\n}\n\nexport const SelectionTile = (props: SelectionTile) => (\n\t<div className={props.styles}>\n\t\t<SelectableTile\n\t\t\tlight={true}\n\t\t\tonChange={() => {props.onChange();}}\n\t\t\tselected={props.selected}>\n\t\t\t{ props.icon }\n\t\t\t<div className={tileFooter}>\n\t\t\t\t<p>{ props.label }</p>\n\t\t\t\t{ props.tag }\n\t\t\t</div>\n\t\t</SelectableTile>\n\t</div>\n);\n","import React, {\n\tuseState,\n\tuseEffect,\n\tuseRef,\n\tuseContext\n} from 'react';\nimport {\n\tModal,\n\tTextInput,\n\tForm,\n\tSelect,\n\tSelectItem,\n\tCheckbox,\n\tNumberInput,\n\tLoading\n} from 'carbon-components-react';\nimport { css } from 'emotion';\nimport debounce from 'lodash/debounce';\nimport { saveBlob, getFullFileName } from '../../../../utils/file-tools';\nimport { ShareOptionsModals } from '../share-options-modal';\nimport { ModalContext, ModalActionType } from '../../../../context/modal-context';\nimport { getFragmentPreview, RenderProps } from '../../../../utils/fragment-tools';\nimport { FragmentsContext } from '../../../../context';\nimport { useHistory } from 'react-router';\n\nconst exportSettingForm = css`\n\twidth: 23rem;\n`;\nconst exportSettingFormGroup = css`\n\twidth: 320px;\n\tdisplay: flex;\n`;\nconst previewContainer = css`\n\tfloat: left;\n\tbackground-color: #e0e0e0;\n\twidth: 100%;\n\theight: 100%;\n\tmargin-top: 3rem;\n\tmargin-left: 1rem;\n\tdisplay: flex;\n\talign-items: center;\n`;\nconst selectInputWH = css`\n\tmargin-bottom: 1.5rem;\n\tfloat: left;\n\twidth: 150px;\n`;\nconst selectInput = css`\n\tmargin-bottom: 1.5rem;\n\twidth: 320px;\n`;\n\nconst fragmentImage = css`\n\tmax-height: 100%;\n\tmax-width: 100%;\n\tdisplay: block;\n\tmargin: 0;\n`;\n\nexport interface ExportImageProps {\n\tfragment: any,\n\tdisplayedModal: ShareOptionsModals | null,\n\tsetDisplayedModal: (displayedModal: ShareOptionsModals | null) => void\n}\n\nlet updatePreviewUrl = async() => console.log('updatePreviewUrl not initialized yet');\nlet handleResize = () => console.log('handleResize not initialized yet');\nconst doInputChange = debounce(() => updatePreviewUrl(), 400);\nconst doUpdatePreviewSize = debounce(() => handleResize(), 200);\n\nexport const ExportImageModal = (props: ExportImageProps) => {\n\tconst [modalState, dispatchModal] = useContext(ModalContext);\n\tconst [fragmentState] = useContext(FragmentsContext);\n\tconst history = useHistory();\n\tconst location = history.location.pathname;\n\tconst pathSegments = location.split('/');\n\n\tconst id = `${fragmentState.currentId || pathSegments[pathSegments.length - 1]}`;\n\tconst fragment = fragmentState.fragments.find((fragment: any) => fragment.id === id);\n\n\tconst exportSettings = {\n\t\twidth: 800,\n\t\theight: 400,\n\t\tunit: 'pixels',\n\t\tratioLock: false,\n\t\tfragmentName: props.fragment.title,\n\t\tformat: 'image/png',\n\t\tcurRatio: 0\n\t};\n\tconst [inputs, setInputs] = useState(exportSettings);\n\tconst [previewUrl, setPreviewUrl] = useState(props.fragment.preview);\n\tconst [isPerformingAction, setIsPerformingAction] = useState(false);\n\tconst previewContainerRef = useRef<HTMLDivElement>(null);\n\tconst [imageContainerSize, setImageContainerSize] = useState<any>();\n\n\thandleResize = () => {\n\t\tif (!previewContainerRef || !previewContainerRef.current) {\n\t\t\treturn;\n\t\t}\n\t\tsetImageContainerSize({\n\t\t\twidth: previewContainerRef.current.offsetWidth,\n\t\t\theight: previewContainerRef.current.offsetHeight\n\t\t});\n\t};\n\tuseEffect(() => {\n\t\twindow.addEventListener('resize', doUpdatePreviewSize);\n\t\tif(previewContainerRef) {\n\t\t\tdoUpdatePreviewSize();\n\t\t}\n\t\treturn () => {\n\t\t\twindow.removeEventListener('resize', doUpdatePreviewSize);\n\t\t};\n\t}, [previewContainerRef]);\n\n\tconst getPreviewSize = (width: number, height: number) => {\n\t\tlet fitRatio: number;\n\t\tif (width <= height) {\n\t\t\t// preview is square or tall rectangle (mobile)\n\t\t\tfitRatio = imageContainerSize.height / height;\n\t\t} else {\n\t\t\t// preview is long rectangle\n\t\t\tfitRatio = imageContainerSize.width / width;\n\t\t}\n\t\treturn {\n\t\t\twidth: width * fitRatio,\n\t\t\theight: height * fitRatio\n\t\t};\n\t};\n\n\tupdatePreviewUrl = async() => {\n\t\tconst previewSize = getPreviewSize(inputs.width, inputs.height);\n\t\tconst renderProps: RenderProps = {\n\t\t\tid: props.fragment.id,\n\t\t\tname: inputs.fragmentName,\n\t\t\twidth: inputs.width,\n\t\t\theight: inputs.height,\n\t\t\tpreview: {\n\t\t\t\tformat: inputs.format,\n\t\t\t\twidth: previewSize.width,\n\t\t\t\theight: previewSize.height\n\t\t\t}\n\t\t};\n\t\tconst imageBlob = await getFragmentPreview(fragment, renderProps);\n\t\tconst reader = new FileReader();\n\t\treader.readAsDataURL(imageBlob ? imageBlob : new Blob());\n\t\treader.onloadend = () => {\n\t\t\tconst imageUrl: string = reader.result ? reader.result.toString() : '';\n\t\t\tsetPreviewUrl(imageUrl);\n\t\t};\n\t};\n\n\tconst onSubmit = async() => {\n\t\tif (isPerformingAction) {\n\t\t\treturn;\n\t\t}\n\t\tsetIsPerformingAction(true);\n\t\tconst renderProps: RenderProps = {\n\t\t\tid: props.fragment.id,\n\t\t\tname: inputs.fragmentName,\n\t\t\twidth: inputs.width,\n\t\t\theight: inputs.height,\n\t\t\tformat: inputs.format\n\t\t};\n\t\tconst imageBlob = await getFragmentPreview(fragment, renderProps);\n\t\tconst fileName = getFullFileName(inputs.fragmentName, inputs.format);\n\t\tsaveBlob(imageBlob, fileName);\n\t\tsetIsPerformingAction(false);\n\t};\n\n\tconst handleChange = (id: any, value: any) => {\n\t\tsetInputs({\n\t\t\t...inputs,\n\t\t\t[id]: value\n\t\t});\n\t\tdoInputChange();\n\t};\n\n\tuseEffect(() => {\n\t\tdoInputChange();\n\t}, []);\n\n\treturn (\n\t\t<Modal\n\t\t\thasForm\n\t\t\tonRequestSubmit={() => {\n\t\t\t\t// TODO look into whether it's a better user experience to have the\n\t\t\t\t// processing in the background, perhaps with the saving indication\n\t\t\t\tonSubmit().then(dispatchModal({ type: ModalActionType.closeModal }));\n\t\t\t}}\n\t\t\tonSecondarySubmit={() => { props.setDisplayedModal(ShareOptionsModals.SHARE_OPTIONS); }}\n\t\t\topen={modalState.ShowModal && props.displayedModal === ShareOptionsModals.IMAGE_EXPORTS}\n\t\t\tonRequestClose={() => dispatchModal({ type: ModalActionType.closeModal })}\n\t\t\tprimaryButtonText='Export'\n\t\t\tsecondaryButtonText='Back to export options'\n\t\t\tmodalHeading={`Export '${props.fragment.title}' as image`}>\n\t\t\t<p>\n\t\t\t\tExport a static image of this fragment for use in presentation decks or designs.\n\t\t\t</p>\n\t\t\t<div style={{\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tmarginTop: '3rem'\n\t\t\t}}>\n\t\t\t\t<ExportModalSettings inputs={inputs} handleChange={handleChange} />\n\t\t\t\t<div className={previewContainer} ref={previewContainerRef}>\n\t\t\t\t\t<img\n\t\t\t\t\t\tid=\"previewimg\"\n\t\t\t\t\t\tclassName={fragmentImage}\n\t\t\t\t\t\tsrc={previewUrl}\n\t\t\t\t\t\talt={`fragment preview: ${props.fragment.title}`} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Loading active={isPerformingAction} />\n\t\t</Modal>\n\t);\n};\n\nconst ExportModalSettings = ({ inputs, handleChange }: any) => {\n\t// We assume that a working ratio is never 0 (no 1D fragments)\n\tconst getRatio = () => (inputs.width / inputs.height).toFixed(2);\n\n\tconst onDimensionChange = (id: any, value: any) => {\n\t\tif (isNaN(value) || value === 0) {\n\t\t\t// eslint-disable-next-line no-param-reassign\n\t\t\tvalue = 1;\n\t\t}\n\t\tif (!inputs.ratioLock) {\n\t\t\thandleChange(id, value);\n\t\t\treturn;\n\t\t}\n\t\tif (inputs.curRatio === 0) {\n\t\t\thandleChange('curRatio', getRatio());\n\t\t}\n\t\thandleChange(id, value);\n\t\tif (id === 'width') {\n\t\t\thandleChange('height', (value / inputs.curRatio).toFixed(0));\n\t\t} else {\n\t\t\thandleChange('width', (value * inputs.curRatio).toFixed(0));\n\t\t}\n\t};\n\tconst numInputOnchange = (event: any) => {\n\t\tonDimensionChange(event.target.id, parseFloat(event.target.value));\n\t};\n\tconst numInputOnClick = (event: any) => {\n\t\tif (event.imaginaryTarget && event.imaginaryTarget.value) {\n\t\t\tonDimensionChange(event.imaginaryTarget.id, parseFloat(event.imaginaryTarget.value));\n\t\t}\n\t};\n\tconst inputChange = (event: any) => {\n\t\thandleChange(event.target.id, event.target.value);\n\t};\n\n\treturn (\n\t\t<Form className={exportSettingForm}>\n\t\t\t<TextInput\n\t\t\t\tclassName={selectInput}\n\t\t\t\tid={'fragmentName'}\n\t\t\t\tlabelText={'Name'}\n\t\t\t\tplaceholder={'Fragment name'}\n\t\t\t\tonChange={inputChange}\n\t\t\t\ttype='text'\n\t\t\t\tdefaultValue={inputs.fragmentName} />\n\t\t\t<div className={exportSettingFormGroup}>\n\t\t\t\t<NumberInput\n\t\t\t\t\tclassName={selectInputWH}\n\t\t\t\t\tid='width'\n\t\t\t\t\tlabel='Width'\n\t\t\t\t\tvalue={inputs.width}\n\t\t\t\t\tonClick={numInputOnClick}\n\t\t\t\t\tonChange={numInputOnchange} />\n\t\t\t\t<NumberInput\n\t\t\t\t\tclassName={selectInputWH}\n\t\t\t\t\tid='height'\n\t\t\t\t\tlabel='Height'\n\t\t\t\t\tvalue={inputs.height}\n\t\t\t\t\tonClick={numInputOnClick}\n\t\t\t\t\tonChange={numInputOnchange} />\n\t\t\t</div>\n\t\t\t<Checkbox\n\t\t\t\tclassName={selectInput}\n\t\t\t\tid='ratioLock'\n\t\t\t\tlabelText='Preserve aspect ratio'\n\t\t\t\tdefaultChecked={inputs.ratioLock}\n\t\t\t\tonChange={(event: any) => handleChange('ratioLock', event)} />\n\t\t\t<Select\n\t\t\t\tclassName={selectInput}\n\t\t\t\tvalue={inputs.unit}\n\t\t\t\tid={'unit'}\n\t\t\t\tonChange={inputChange}\n\t\t\t\tlabelText='Units'>\n\t\t\t\t<SelectItem text='pixels' value='pixels' />\n\t\t\t</Select>\n\t\t\t<Select\n\t\t\t\tclassName={selectInput}\n\t\t\t\tvalue={inputs.format}\n\t\t\t\tid={'format'}\n\t\t\t\tonChange={inputChange}\n\t\t\t\tlabelText='Format'>\n\t\t\t\t<SelectItem text='png' value='image/png' />\n\t\t\t\t<SelectItem text='jpeg' value='image/jpeg' />\n\t\t\t\t<SelectItem text='bmp' value='image/bmp' />\n\t\t\t\t<SelectItem text='gif' value='image/gif' />\n\t\t\t</Select>\n\t\t</Form>\n\t);\n};\n","import React, { createContext, useReducer } from 'react';\n\nconst LocalFragmentsContext: React.Context<any> = createContext(null);\n\nLocalFragmentsContext.displayName = 'LocalFragmentsContext';\n\nexport enum LocalFragmentActionType {\n\tADD,\n\tREMOVE\n}\n\nexport interface LocalFragmentAction {\n\ttype: LocalFragmentActionType,\n\tdata: any\n}\n\nconst fragmentsReducer = (state: any[], action: any) => {\n\tswitch (action.type) {\n\t\tcase LocalFragmentActionType.REMOVE: {\n\t\t\tconst ci = state.findIndex((c: any) => c.id === action.data.id);\n\t\t\treturn [\n\t\t\t\t...state.slice(0, ci),\n\t\t\t\t...state.slice(ci + 1)\n\t\t\t];\n\t\t}\n\t\tdefault:\n\t\tcase LocalFragmentActionType.ADD:\n\t\t\treturn [...state, action.data];\n\t}\n};\n\nconst validInitialState = (localFragments: any[] | undefined) => {\n\tif (!localFragments || !Array.isArray(localFragments)) {\n\t\treturn [];\n\t}\n\n\t// sanitize localFragments in case they've been modified by third party\n\treturn localFragments\n\t\t.filter((fragment: any) => !!fragment.id && typeof fragment.id === 'string')\n\t\t.map((fragment: any) => ({ id: fragment.id }));\n};\n\nconst LocalFragmentsContextProvider = ({ children }: any) => {\n\tconst initialState: any[] = validInitialState(JSON.parse(localStorage.getItem('localFragments') as string));\n\tconst store = useReducer(fragmentsReducer, initialState);\n\tconst [fragments] = store;\n\n\tReact.useEffect(() => {\n\t\t// store only ids to local storage so we don't get into temptation of using other\n\t\t// props that should really be coming from db\n\t\tlocalStorage.setItem('localFragments', JSON.stringify(fragments.map((lc: any) => ({ id: lc.id }))));\n\t}, [fragments]);\n\n\treturn (\n\t\t<LocalFragmentsContext.Provider value={store}>\n\t\t\t{children}\n\t\t</LocalFragmentsContext.Provider>\n\t);\n};\n\nexport {\n\tLocalFragmentsContext,\n\tLocalFragmentsContextProvider\n};\n","import React, {\n\tuseContext,\n\tuseEffect,\n\tuseState\n} from 'react';\nimport { css, cx } from 'emotion';\nimport { Fragment } from '../../components';\nimport { EditHeader } from './edit-header';\nimport {\n\tFragmentsContext,\n\tuseFetchOne,\n\tFragmentActionType\n} from '../../context/fragments-context';\nimport {\n\tButton,\n\tSideNav,\n\tSideNavLink,\n\tSideNavItems,\n\tTabs,\n\tTab\n} from 'carbon-components-react';\nimport {\n\tCode16,\n\tColorPalette16,\n\tCopy32,\n\tDevelopment16,\n\tExport16,\n\tInformation16,\n\tTrashCan32\n} from '@carbon/icons-react';\n\nimport { ElementsPane } from './elements-pane';\nimport { StylePane } from './style-pane';\nimport { CodePane } from './code-pane';\nimport { ExportPane } from './export-pane';\n\nimport { StyleContextPane } from './style-context-pane';\nimport { CodeContextPane } from './code-context-pane';\n\nconst leftPaneWidth = '300px';\nconst rightPaneWidth = '302px';\n\nconst editPageContent = css`\n\tposition: absolute;\n\twidth: 100vw;\n\theight: calc(100% - 3rem);\n\ttop: 3rem;\n\tmax-width: 100%;\n\tbackground: #f4f4f4;\n\n\t.edit-content {\n\t\tpadding: 1rem 2rem 1rem 5rem;\n\t\twidth: calc(100% - ${rightPaneWidth});\n\t}\n`;\n\nconst sideRail = css`\n\ttransition: left 0.11s cubic-bezier(0.2, 0, 1, 0.9);\n\n\t&.bx--side-nav, &.bx--side-nav:hover {\n\t\t.bx--side-nav__item .bx--side-nav__link {\n\t\t\theight: 3rem;\n\t\t}\n\t}\n\n\t&.bx--side-nav--ux {\n\t\ttop: 7rem;\n\t\tbox-shadow: inset -1px 0px #d8d8d8;\n\t}\n\n\t&.is-active {\n\t\tleft: ${leftPaneWidth};\n\t}\n\n\t.bx--side-nav__items {\n\t\tpadding: 0;\n\t}\n`;\n\nexport const leftPane = css`\n\tposition: absolute;\n\tbackground: white;\n\ttransition: left 0.11s cubic-bezier(0.2, 0, 1, 0.9);\n\twidth: ${leftPaneWidth};\n\tleft: -${leftPaneWidth};\n\theight: calc(100% - 4rem);\n\tpadding: 15px;\n\tbox-shadow: inset -1px 0px #d8d8d8;\n\tz-index: 999;\n\n\t&.is-active {\n\t\tleft: 0;\n\t}\n`;\n\nconst rightPanel = css`\n\twidth: ${rightPaneWidth};\n\tposition: absolute;\n\tright: 0;\n\ttop: 4rem;\n\tbackground: white;\n\tmin-height: calc(100vh - 7rem);\n\tbox-shadow: inset 1px 0px #d8d8d8;\n\tz-index: 1;\n\n\t.bx--tabs__nav-item .bx--tabs__nav-link {\n\t\twidth: 100px;\n\t\ttext-align: center;\n\t}\n\n\t.context-pane-content {\n\t\toverflow: auto;\n\t\theight: calc(100vh - 17rem);\n\t}\n`;\n\nconst actionsStyle = css`\n\tposition: absolute;\n\tbottom: 0;\n\tmargin: 15px;\n`;\n\nenum SelectedLeftPane {\n\tNONE = 'none',\n\tELEMENTS = 'elements',\n\tSTYLE = 'style',\n\tCODE = 'code',\n\tEXPORT = 'export'\n};\n\nexport const Edit = ({ match }: any) => {\n\tconst [state, dispatch] = useContext(FragmentsContext);\n\tconst [styleClasses, _setStyleClasses] = useState(JSON.parse(localStorage.getItem('globalStyleClasses') as string || '[]') as any[]);\n\n\tconst setStyleClasses = (sc: any) => {\n\t\tlocalStorage.setItem('globalStyleClasses', JSON.stringify(styleClasses))\n\t\t_setStyleClasses(sc);\n\t};\n\n\tuseFetchOne(match.params.id, dispatch);\n\tconst fragment = state.fragments.find((fragment: any) => fragment.id === match.params.id);\n\tconst setFragment = (fragment: any) => {\n\t\tdispatch({\n\t\t\ttype: FragmentActionType.UPDATE_ONE,\n\t\t\tdata: fragment,\n\t\t\tloaded: true\n\t\t});\n\t};\n\n\tconst [selectedLeftPane, setSelectedLeftPane] = useState(SelectedLeftPane.NONE);\n\n\tuseEffect(() => {\n\t\tif (fragment && fragment.title) {\n\t\t\tdocument.title = `Edit \"${fragment.title}\"`;\n\t\t} else {\n\t\t\tdocument.title = 'Edit fragment';\n\t\t}\n\t}, [fragment]);\n\n\tconst onRailClick = (clickedLeftPane: SelectedLeftPane) => {\n\t\tif (clickedLeftPane === selectedLeftPane) {\n\t\t\tsetSelectedLeftPane(SelectedLeftPane.NONE);\n\t\t} else {\n\t\t\tsetSelectedLeftPane(clickedLeftPane);\n\t\t}\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tid='edit-wrapper'\n\t\t\tclassName={editPageContent}>\n\t\t\t{ fragment && <EditHeader fragment={fragment}/> }\n\t\t\t<ElementsPane isActive={selectedLeftPane === SelectedLeftPane.ELEMENTS} />\n\t\t\t<StylePane\n\t\t\t\tisActive={selectedLeftPane === SelectedLeftPane.STYLE}\n\t\t\t\tstyleClasses={styleClasses}\n\t\t\t\tsetStyleClasses={setStyleClasses} />\n\t\t\t<CodePane isActive={selectedLeftPane === SelectedLeftPane.CODE} />\n\t\t\t<ExportPane isActive={selectedLeftPane === SelectedLeftPane.EXPORT} />\n\t\t\t<SideNav\n\t\t\taria-label='Side navigation'\n\t\t\tclassName={cx(sideRail, selectedLeftPane !== SelectedLeftPane.NONE ? 'is-active' : '')}\n            isRail>\n\t\t\t\t<SideNavItems>\n\t\t\t\t\t<SideNavLink\n\t\t\t\t\trenderIcon={Development16}\n\t\t\t\t\tonClick={() => onRailClick(SelectedLeftPane.ELEMENTS)}\n\t\t\t\t\tisActive={selectedLeftPane === SelectedLeftPane.ELEMENTS}>\n\t\t\t\t\t\tElements\n\t\t\t\t\t</SideNavLink>\n\t\t\t\t\t<SideNavLink\n\t\t\t\t\trenderIcon={ColorPalette16}\n\t\t\t\t\tonClick={() => onRailClick(SelectedLeftPane.STYLE)}\n\t\t\t\t\tisActive={selectedLeftPane === SelectedLeftPane.STYLE}>\n\t\t\t\t\t\tStyle\n\t\t\t\t\t</SideNavLink>\n\t\t\t\t\t<SideNavLink\n\t\t\t\t\trenderIcon={Code16}\n\t\t\t\t\tonClick={() => onRailClick(SelectedLeftPane.CODE)}\n\t\t\t\t\tisActive={selectedLeftPane === SelectedLeftPane.CODE}>\n\t\t\t\t\t\tCode\n\t\t\t\t\t</SideNavLink>\n\t\t\t\t\t<SideNavLink\n\t\t\t\t\trenderIcon={Export16}\n\t\t\t\t\tonClick={() => onRailClick(SelectedLeftPane.EXPORT)}\n\t\t\t\t\tisActive={selectedLeftPane === SelectedLeftPane.EXPORT}>\n\t\t\t\t\t\tExport\n\t\t\t\t\t</SideNavLink>\n\t\t\t\t</SideNavItems>\n\t\t\t</SideNav>\n\t\t\t<div className='edit-content'>\n\t\t\t\t{\n\t\t\t\t\tfragment\n\t\t\t\t\t&& <>\n\t\t\t\t\t\t<Fragment fragment={fragment} setFragment={setFragment} />\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<div className={rightPanel}>\n\t\t\t\t<Tabs>\n\t\t\t\t\t<Tab\n\t\t\t\t\tid='properties-style'\n\t\t\t\t\tlabel={<ColorPalette16 />}>\n\t\t\t\t\t\t<StyleContextPane fragment={fragment} setFragment={setFragment} styleClasses={styleClasses} />\n\t\t\t\t\t</Tab>\n\t\t\t\t\t<Tab\n\t\t\t\t\tid='properties-code'\n\t\t\t\t\tlabel={<Code16 />}>\n\t\t\t\t\t\t<CodeContextPane fragment={fragment} setFragment={setFragment} />\n\t\t\t\t\t</Tab>\n\t\t\t\t\t<Tab\n\t\t\t\t\tid='properties-info'\n\t\t\t\t\tlabel={<Information16 />}>\n\t\t\t\t\t\tinfo\n\t\t\t\t\t</Tab>\n\t\t\t\t</Tabs>\n\t\t\t\t<div className={actionsStyle}>\n\t\t\t\t\t<Button\n\t\t\t\t\tdisabled\n\t\t\t\t\tkind='secondary'\n\t\t\t\t\trenderIcon={Copy32}\n\t\t\t\t\tclassName={css`margin-right: 18px`}>\n\t\t\t\t\t\tDuplicate\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\tdisabled\n\t\t\t\t\tkind='danger'\n\t\t\t\t\trenderIcon={TrashCan32}>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import React, { useContext } from 'react';\nimport { NotificationActionType, NotificationContext } from '../../context/notification-context';\nimport { Modal } from 'carbon-components-react';\nimport { ModalActionType, ModalContext } from '../../context/modal-context';\nimport {\n\tFragmentActionType,\n\tFragmentsContext,\n\tuseFetchOne\n} from '../../context/fragments-context';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { LocalFragmentsContext, LocalFragmentActionType } from '../../context/local-fragments-context';\n\nconst getUniqueName = (fragments: Array<any>, name: string) => {\n\tconst nameRegEx = new RegExp(String.raw`(.*)\\s+(copy)*(\\s+(\\d+))?$`);\n\tconst nameMatch = name.match(nameRegEx);\n\tlet count = 0;\n\n\tlet nameBase = name;\n\t// If match, increment the count and update name base and new name\n\tif (nameMatch) {\n\t\tnameBase = name.replace(nameRegEx, '$1');\n\t\tcount = Number.parseInt(name.replace(nameRegEx, '$4'), 10);\n\t\tif (!count) {\n\t\t\tcount = 0;\n\t\t}\n\t}\n\n\t// Get a list containing names of all duplicates of original fragment\n\t// e.g. [ \"Fragment copy\", \"Fragment copy 1\", \"Fragment copy 7\", ...]\n\tconst names: string[] = [];\n\tfragments.forEach((fragment) => {\n\t\tif (fragment.title.includes(nameBase)) {\n\t\t\tnames.push(fragment.title);\n\t\t}\n\t});\n\n\tif (names.length <= 1) {\n\t\t// because the fragment we're copying is already in there\n\t\treturn `${nameBase} copy`;\n\t}\n\n\tconst highestNumber = names\n\t\t.map((n) => Number.parseInt(n.replace(nameRegEx, '$4'), 10))\n\t\t.filter((n) => !isNaN(n)).sort((a, b) => b - a)\n\t\t.shift();\n\n\treturn `${nameBase} copy ${highestNumber && count < highestNumber ? highestNumber + 1 : count + 1}`;\n};\n\n// In the case that fragment modal is used in the dashboard the full fragment containing options and data\n// can't be passed in, so fragment id is passed in and `useFragment` is used within this component.\nexport const DuplicateFragmentModal = ({ id }: any) => {\n\tconst [modalState, dispatchModal] = useContext(ModalContext);\n\tconst [, dispatchNotification] = useContext(NotificationContext);\n\tconst [, updateLocalFragments] = useContext(LocalFragmentsContext);\n\tconst [fragmentsState, dispatch] = useContext(FragmentsContext);\n\tuseFetchOne(id, dispatch);\n\tconst history = useHistory();\n\tconst location = useLocation();\n\n\tconst fragment = fragmentsState.fragments.find((fragment: any) => fragment.id === id);\n\n\tconst duplicateFragment = () => {\n\t\tif (fragmentsState.currentlyProcessing) {\n\t\t\treturn;\n\t\t}\n\t\t// copy current fragment and change fragment title\n\t\tconst fragmentCopy = JSON.parse(JSON.stringify(fragment));\n\t\tfragmentCopy.title = getUniqueName(fragmentsState.fragments, fragmentCopy.title);\n\t\tfragmentCopy.id = `${Math.random().toString().slice(2)}${Math.random().toString().slice(2)}`;\n\n\t\tdispatch({\n\t\t\ttype: FragmentActionType.ADD_ONE,\n\t\t\tdata: fragmentCopy,\n\t\t\tloaded: true\n\t\t});\n\t\tupdateLocalFragments({\n\t\t\ttype: LocalFragmentActionType.ADD,\n\t\t\tdata: { id: fragmentCopy.id }\n\t\t});\n\t\tif (location.pathname !== '/') {\n\t\t\thistory.push(`/edit/${fragmentCopy.id}`);\n\t\t}\n\t\tdispatchNotification({\n\t\t\ttype: NotificationActionType.ADD_NOTIFICATION,\n\t\t\tdata: {\n\t\t\t\tkind: 'success',\n\t\t\t\ttitle: 'Duplication success',\n\t\t\t\tmessage: `'${fragmentCopy.title}  has been duplicated from '${fragment.title}'.`\n\t\t\t}\n\t\t});\n\t\tdispatchModal({ type: ModalActionType.closeModal });\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\tsize='sm'\n\t\t\topen={modalState.ShowModal}\n\t\t\tonRequestClose={() => dispatchModal({ type: ModalActionType.closeModal })}\n\t\t\tsecondaryButtonText='Cancel'\n\t\t\tmodalHeading='Duplicate fragment?'\n\t\t\tprimaryButtonText='Duplicate'\n\t\t\tprimaryButtonDisabled={!!fragmentsState.currentlyProcessing}\n\t\t\tonRequestSubmit={() => duplicateFragment()}>\n\t\t\t<p>\n\t\t\t\tClick <strong>Duplicate</strong> to begin to edit a copy of the current fragment\n\t\t\t\tor <strong>Cancel</strong> to continue on this fragment.\n\t\t\t</p>\n\t\t</Modal>\n\t);\n};\n","import React, { useContext } from 'react';\n\nimport { Modal } from 'carbon-components-react';\nimport { ModalActionType, ModalContext } from '../../context/modal-context';\nimport {\n\tFragmentActionType,\n\tFragmentsContext,\n\tuseFetchOne\n} from '../../context/fragments-context';\nimport { useHistory } from 'react-router-dom';\nimport { NotificationActionType, NotificationContext } from '../../context/notification-context';\n\nexport const DeleteFragmentModal = ({ id }: any) => {\n\tconst [fragmentsState, dispatch] = useContext(FragmentsContext);\n\tconst [modalState, dispatchModal] = useContext(ModalContext);\n\tconst history = useHistory();\n\tconst [, dispatchNotification] = useContext(NotificationContext);\n\tconst fragment = fragmentsState.fragments.find((fragment: any) => fragment.id === id);\n\tuseFetchOne(id, dispatch);\n\n\n\tconst deleteFragment = () => {\n\t\tdispatch({\n\t\t\ttype: FragmentActionType.TOGGLE_VISIBILITY,\n\t\t\tid,\n\t\t\thidden: true,\n\t\t\tloaded: true\n\t\t});\n\t\thistory.push('/');\n\t\tdispatchNotification({\n\t\t\ttype: NotificationActionType.ADD_NOTIFICATION,\n\t\t\tdata: {\n\t\t\t\tkind: 'error',\n\t\t\t\ttitle: 'Fragment deleted!',\n\t\t\t\tmessage: `Fragment '${fragment.title}' has been permanently deleted.`,\n\t\t\t\taction: {\n\t\t\t\t\tactionText: 'Undo',\n\t\t\t\t\tactionFunction: undoHideFragment,\n\t\t\t\t\tonNotificationClose: doDeleteFragment\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tdispatchModal({ type: ModalActionType.closeModal });\n\t};\n\n\tconst undoHideFragment = () => {\n\t\tdispatch({\n\t\t\ttype: FragmentActionType.TOGGLE_VISIBILITY,\n\t\t\tid,\n\t\t\thidden: false,\n\t\t\tloaded: true\n\t\t});\n\t};\n\n\tconst doDeleteFragment = () => {\n\t\tdispatch({\n\t\t\ttype: FragmentActionType.REMOVE_FRAGMENT,\n\t\t\tid\n\t\t});\n\t};\n\n\n\treturn (\n\t\t<Modal\n\t\t\tsize='sm'\n\t\t\topen={modalState.ShowModal}\n\t\t\tonRequestClose={() => { dispatchModal({ type: ModalActionType.closeModal }); }}\n\t\t\tsecondaryButtonText='Cancel'\n\t\t\tmodalHeading='Delete this fragment?'\n\t\t\tdanger\n\t\t\tprimaryButtonText='Delete'\n\t\t\tonRequestSubmit={() => deleteFragment()}>\n\t\t\t<p>\n\t\t\t\tClick <strong>Cancel</strong> to go back to editing your fragment\n\t\t\t\tor <strong>Delete</strong> to remove it permanently.\n\t\t\t</p>\n\t\t</Modal>\n\t);\n};\n","import React, { useState, useContext } from 'react';\nimport {\n\tModal,\n\tTextInput,\n\tCheckbox,\n\tTooltipDefinition\n} from 'carbon-components-react';\nimport { ModalActionType, ModalContext } from '../../context/modal-context';\nimport { FragmentActionType, FragmentsContext } from '../../context/fragments-context';\nimport './fragment-modal.scss';\n\nexport const SettingsFragmentModal = ({ fragment }: any) => {\n\tconst [modalState, dispatchModal] = useContext(ModalContext);\n\tconst [, dispatch] = useContext(FragmentsContext);\n\n\tconst props = {\n\t\tsize: 'sm',\n\t\topen: modalState.ShowModal,\n\t\tonRequestClose: () => dispatchModal({ type: ModalActionType.closeModal }),\n\t\tsecondaryButtonText: 'Cancel'\n\t};\n\n\tconst [title, setTitle] = useState(fragment.title);\n\tconst [isTemplate, setIsTemplate] = useState(fragment.labels && fragment.labels.includes('template'));\n\n\tconst updateFragmentSettings = () => {\n\t\tlet labels = fragment.labels || [];\n\n\t\t// Add or remove 'template' label for the fragment if set template is checked\n\t\tif (isTemplate) {\n\t\t\tif(!labels.includes('template')) {\n\t\t\t\tlabels = [...labels, 'template'];\n\t\t\t}\n\t\t} else {\n\t\t\t// if the set template is unchecked, remove the 'template' label\n\t\t\tlabels = labels.filter((label: string) => label !== 'template');\n\t\t}\n\n\t\tdispatch({\n\t\t\ttype: FragmentActionType.UPDATE_ONE,\n\t\t\tdata: {\n\t\t\t\t...fragment,\n\t\t\t\ttitle,\n\t\t\t\tlabels\n\t\t\t},\n\t\t\tloaded: true\n\t\t});\n\n\t\tdispatchModal({ type: ModalActionType.closeModal });\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\t{...props}\n\t\t\thasForm\n\t\t\tmodalHeading='Edit fragment settings'\n\t\t\tprimaryButtonText='Save'\n\t\t\tonRequestSubmit={() => updateFragmentSettings()} >\n\t\t\t<TextInput\n\t\t\t\tid='fragmentName'\n\t\t\t\tlabelText='Fragment name'\n\t\t\t\tdefaultValue={title}\n\t\t\t\tonChange={(event: any) => setTitle(event.target.value)}/>\n\t\t\t<Checkbox\n\t\t\t\tid='setFragmentAsTemplate'\n\t\t\t\tchecked={isTemplate}\n\t\t\t\tlabelText='Make this fragment a &nbsp;'\n\t\t\t\tonChange={(event: any) => setIsTemplate(event)}/>\n\t\t\t<TooltipDefinition\n\t\t\t\ttooltipText='Setting a fragment as a template makes it an easy starting point\n\t\t\t\tfor future fragments.'\n\t\t\t\tdirection='bottom'>\n\t\t\t\ttemplate\n\t\t\t</TooltipDefinition>\n\t\t</Modal>\n\t);\n};\n","import { ModalType, ModalContext } from '../../context/modal-context';\nimport { ShareOptionsModal } from './share-options/share-options-modal';\nimport { DuplicateFragmentModal } from './duplicate-fragment-modal';\nimport { DeleteFragmentModal } from './delete-fragment-modal';\nimport { SettingsFragmentModal } from './settings-fragment-modal';\nimport React, { useContext } from 'react';\nimport { FragmentsContext, useFetchOne } from '../../context/fragments-context';\n\n// eslint-disable-next-line react/prop-types\nexport const FragmentModal = ({ fragment }: any) => {\n\tconst [, dispatch] = useContext(FragmentsContext);\n\t// eslint-disable-next-line react/prop-types\n\tuseFetchOne(fragment.id, dispatch);\n\tconst [modalState] = useContext(ModalContext);\n\n\tswitch (modalState.ModalType) {\n\t\tcase ModalType.DUPLICATION:\n\t\t\treturn (\n\t\t\t// In the case that fragment modal is used in the dashboard the full fragment containing options and\n\t\t\t// data can't be passed in, so we use fragment id and fetch it\n\t\t\t// eslint-disable-next-line react/prop-types\n\t\t\t\t<DuplicateFragmentModal id={fragment.id}/>\n\t\t\t);\n\t\tcase ModalType.SHARING:\n\t\t\treturn (\n\t\t\t// eslint-disable-next-line react/prop-types\n\t\t\t\t<ShareOptionsModal fragment={fragment} />\n\t\t\t);\n\t\tcase ModalType.DELETION:\n\t\t\treturn (\n\t\t\t// eslint-disable-next-line react/prop-types\n\t\t\t\t<DeleteFragmentModal id={fragment.id} />\n\t\t\t);\n\t\tcase ModalType.SETTINGS:\n\t\t\treturn (\n\t\t\t// eslint-disable-next-line react/prop-types\n\t\t\t\t<SettingsFragmentModal fragment={fragment} />\n\t\t\t);\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n","import React, { useContext } from 'react';\nimport { css } from 'emotion';\nimport { Button } from 'carbon-components-react';\nimport {\n\tCopy16,\n\tDelete16,\n\tSettings16,\n\tShare16\n} from '@carbon/icons-react';\nimport { ModalContext, ModalActionType } from '../../context/modal-context';\nimport { FragmentModal } from './fragment-modal';\n\nconst editHeader = css`\n\tleft: 16rem;\n\tbackground: #fff;\n\tbox-shadow: inset 0px -1px #d8d8d8;\n\n\t.edit-wrapper {\n\t\tposition: relative;\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\t.title-wrap {\n\t\t\theight: 3rem;\n\t\t\tmargin-left: 3rem;\n\t\t\tdisplay: flex;\n\t\t\talign-self: center;\n\t\t\tflex-flow: column;\n\t\t}\n\t\t.title-subheading {\n\t\t\tdisplay: inline-flex;\n\t\t\t.bx--inline-loading {\n\t\t\t\twidth: auto;\n\t\t\t\tposition: relative;\n\t\t\t\tmargin-left: 10px;\n\t\t\t\ttop: -10px;\n\t\t\t}\n\t\t\t.date-wrap {\n\t\t\t\tfont-size: 12px;\n\t\t\t\tfont-style: italic;\n\t\t\t\tcolor: black;\n\t\t\t\tpadding-left: 12px;\n\t\t\t}\n\t\t}\n\t\t.fragment-title {\n\t\t\twhitespace: nowrap;\n\t\t\tfont-weight: bold;\n\t\t\tpadding-left: 12px;\n\t\t\tpadding-right: 16px;\n\t\t\tfloat: left;\n\t\t}\n\t\t.fragment-edit {\n\t\t\tmargin-top: 6px;\n\t\t\tcursor: pointer;\n\t\t}\n\t}\n\n\t// This is the viewport width that causes the loading and\n\t// store to local fragments checkbox to overlap.\n\t@media screen and (max-width: 67.0625rem) {\n\t\t.edit-wrapper {\n\t\t\t.title-subheading {\n\t\t\t\tflex-flow: column;\n\t\t\t\t.bx--inline-loading {\n\t\t\t\t\tmargin-top: 10px;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// This is the viewport width that causes the store to local\n\t// fragments checkbox and last modified label to overlap.\n\t@media screen and (max-width: 58.125rem) {\n\t\t.edit-wrapper {\n\t\t\tflex-direction: column;\n\t\t\t.title-wrap {\n\t\t\t\tmargin-top: 10px;\n\t\t\t\talign-self: auto;\n\t\t\t}\n\t\t\t.title-subheading {\n\t\t\t\tflex-direction: row;\n\t\t\t\t.bx--inline-loading {\n\t\t\t\t\tmargin-top: 0px;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// This is the viewport width that causes the loading and store\n\t// to local fragments to be disfigured.\n\t@media screen and (max-width: 42.6875rem) {\n\t\t.edit-wrapper {\n\t\t\t.title-subheading {\n\t\t\t\tflex-direction: column;\n\t\t\t\t.bx--inline-loading {\n\t\t\t\t\tmargin-top: 10px;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst toolBarAction = css`\n\tbackground: #f4f4f4;\n\tmargin-right: 13px;\n`;\n\nconst fragmentEditToolBar = css`\n\tdisplay: flex;\n\tmargin-right: 4rem;\n\tmargin-top: 8px;\n\tmargin-bottom: 8px;\n\tbutton {\n\t\theight: 3rem;\n\t}\n\t.toolBarButtons {\n\t\tmin-width: 13.75rem\n\t}\n\t// This is the viewport width that causes the store to local\n\t// fragments checkbox and last modified label to overlap.\n\t@media screen and (max-width: 58.125rem) {\n\t\tmargin-left: 10px;\n\t\tflex-direction: row-reverse;\n\t\tplace-self: start;\n\t}\n\t// This is the viewport width that causes the loading and store\n\t// to local fragments to be disfigured.\n\t@media screen and (max-width: 42.6875rem) {\n\t\tmargin-left: 10px;\n\t\tmargin-top: 20px;\n\t\tflex-direction: column-reverse;\n\t\tplace-self: start;\n\t}\n`;\n\nexport const EditHeader = ({ fragment }: any) => {\n\tconst [, dispatchModal] = useContext(ModalContext);\n\n\treturn (\n\t\t<header\n\t\t\tclassName={editHeader}\n\t\t\taria-label={`Header for '${fragment.title}'`}\n\t\t\trole='banner'\n\t\t\ttabIndex={0}>\n\t\t\t<div className='edit-wrapper'>\n\t\t\t\t<div className='title-wrap'>\n\t\t\t\t\t<p className='fragment-title'>{fragment.title}</p>\n\n\t\t\t\t\t<div className='title-subheading'>\n\t\t\t\t\t\t<div className='date-wrap'>{`Last modified ${ fragment.lastModified}`}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={fragmentEditToolBar}>\n\t\t\t\t\t<div className='toolBarButtons'>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkind='ghost'\n\t\t\t\t\t\t\taria-label='Duplicate fragment'\n\t\t\t\t\t\t\ttitle='Duplicate fragment'\n\t\t\t\t\t\t\tonClick={() => dispatchModal({\n\t\t\t\t\t\t\t\ttype: ModalActionType.setDuplicationModal,\n\t\t\t\t\t\t\t\tid: fragment.id\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tclassName={toolBarAction}>\n\t\t\t\t\t\t\t<Copy16 fill=\"black\" />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkind='ghost'\n\t\t\t\t\t\t\taria-label='Delete fragment'\n\t\t\t\t\t\t\ttitle='Delete fragment'\n\t\t\t\t\t\t\tonClick={() => dispatchModal({\n\t\t\t\t\t\t\t\ttype: ModalActionType.setDeletionModal,\n\t\t\t\t\t\t\t\tid: fragment.id\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tclassName={toolBarAction}>\n\t\t\t\t\t\t\t<Delete16 fill=\"black\" />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkind='ghost'\n\t\t\t\t\t\t\taria-label='Share fragment'\n\t\t\t\t\t\t\ttitle='Share fragment'\n\t\t\t\t\t\t\tonClick={() => dispatchModal({\n\t\t\t\t\t\t\t\ttype: ModalActionType.setShareModal,\n\t\t\t\t\t\t\t\tid: fragment.id\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tclassName={toolBarAction}>\n\t\t\t\t\t\t\t<Share16 fill=\"black\" />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkind='ghost'\n\t\t\t\t\t\t\taria-label='Fragment settings'\n\t\t\t\t\t\t\ttitle='Fragment settings'\n\t\t\t\t\t\t\tonClick={() => dispatchModal({\n\t\t\t\t\t\t\t\ttype: ModalActionType.setSettingsModal,\n\t\t\t\t\t\t\t\tid: fragment.id\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tclassName={toolBarAction}>\n\t\t\t\t\t\t\t<Settings16 fill=\"black\" />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<FragmentModal fragment={fragment} />\n\t\t</header>\n\t);\n};\n","import React from 'react';\nimport { css } from 'emotion';\n\nimport { drag } from '../routes/edit/tools';\n\nconst elementTileStyle = css`\n\tborder: 1px solid #d8d8d8;\n\tmin-width: 127px;\n\theight: 127px;\n\tdisplay: inline-flex;\n\tmargin-bottom: 1rem;\n\tflex-direction: column;\n\n\timg {\n\t\tmargin: auto;\n\t}\n\n\t.title {\n\t\ttext-align: center;\n\t\twidth: 100%;\n\t\tmargin: 0 1rem auto auto;\n\t}\n`;\n\nexport const ElementTile = ({children, componentObj}: any) => {\n\treturn (<div\n\t\tclassName={elementTileStyle}\n\t\tdraggable='true'\n\t\tonDragStart={(event: any) => drag(event, {\n\t\t\tcomponent: componentObj\n\t\t})}>\n\t\t{children}\n\t</div>);\n};\n","import React, { useState } from 'react';\nimport { css, cx } from 'emotion';\nimport { Search } from 'carbon-components-react';\n\nimport { ElementTile } from '../../components/element-tile';\n\nimport buttonImg from './../../assets/component-icons/button.svg';\nimport checkboxImg from './../../assets/component-icons/checkbox.svg';\nimport gridImg from './../../assets/component-icons/grid.svg';\nimport textAreaImg from './../../assets/component-icons/text-area.svg';\nimport textInputImg from './../../assets/component-icons/text-input.svg';\nimport textImg from './../../assets/component-icons/text.svg';\n\nimport { leftPane } from '.';\n\nconst searchStyle = css`\n\tmargin-top: 15px;\n\tmargin-bottom: 30px;\n`;\n\nconst elementTileListStyle = css`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tflex-wrap: wrap;\n`;\n\nexport const ElementsPane = ({isActive}: any) => {\n\tconst [filterString, setFilterString] = useState('');\n\n\t/**\n\t * Returns true if element should show\n\t *\n\t * @param matches a list of strings that represent the component user might search for\n\t */\n\tconst shouldShow = (matches: string[]) => {\n\t\treturn !filterString || matches.some((match) => match.includes(filterString));\n\t};\n\n\treturn (\n\t\t<div className={cx(leftPane, isActive ? 'is-active' : '')}>\n\t\t\tElements\n\t\t\t<Search\n\t\t\t\tid='elements-search'\n\t\t\t\tclassName={searchStyle}\n\t\t\t\tlight\n\t\t\t\tlabelText='Filter elements'\n\t\t\t\tplaceHolderText='Filter elements'\n\t\t\t\tonChange={(event: any) => setFilterString(event.target.value)} />\n\t\t\t<div className={elementTileListStyle}>\n\t\t\t\t{\n\t\t\t\t\tshouldShow(['button']) && <ElementTile componentObj={{\n\t\t\t\t\t\ttype: 'button',\n\t\t\t\t\t\tkind: 'primary',\n\t\t\t\t\t\ttext: 'Button'\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<img src={buttonImg} alt='button'/>\n\t\t\t\t\t\t<span className='title'>Button</span>\n\t\t\t\t\t</ElementTile>\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tshouldShow(['checkbox', 'check box']) && <ElementTile componentObj={{\n\t\t\t\t\t\ttype: 'checkbox',\n\t\t\t\t\t\tlabel: 'Checkbox'\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<img src={checkboxImg} alt='checkbox'/>\n\t\t\t\t\t\t<span className='title'>Checkbox</span>\n\t\t\t\t\t</ElementTile>\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tshouldShow(['text']) && <ElementTile componentObj={{\n\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\ttext: 'Text'\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<img src={textImg} alt='text'/>\n\t\t\t\t\t\t<span className='title'>Text</span>\n\t\t\t\t\t</ElementTile>\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tshouldShow(['textarea', 'text area']) && <ElementTile componentObj={{\n\t\t\t\t\t\ttype: 'textarea',\n\t\t\t\t\t\tlabel: 'Text area label',\n\t\t\t\t\t\tplaceholder: 'Text area placeholder',\n\t\t\t\t\t\thelperText: 'Helper text'\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<img src={textAreaImg} alt='text area'/>\n\t\t\t\t\t\t<span className='title'>Text area</span>\n\t\t\t\t\t</ElementTile>\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tshouldShow(['textinput', 'text input']) && <ElementTile componentObj={{\n\t\t\t\t\t\ttype: 'textinput',\n\t\t\t\t\t\tlabel: 'Text input label',\n\t\t\t\t\t\tplaceholder: 'Text input placeholder',\n\t\t\t\t\t\thelperText: 'Helper text',\n\t\t\t\t\t\tinputType: 'text'\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<img src={textInputImg} alt='text input'/>\n\t\t\t\t\t\t<span className='title'>Text input</span>\n\t\t\t\t\t</ElementTile>\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tshouldShow(['grid', 'row', 'column']) && <ElementTile componentObj={{\n\t\t\t\t\t\ttype: 'grid',\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'row', items: [\n\t\t\t\t\t\t\t\t\t{ type: 'column', items: [{ type: 'text', text: 'A' }]},\n\t\t\t\t\t\t\t\t\t{ type: 'column', items: [{ type: 'text', text: 'B' }]}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'row', items: [\n\t\t\t\t\t\t\t\t\t{ type: 'column', items: [{ type: 'text', text: 'C' }]},\n\t\t\t\t\t\t\t\t\t{ type: 'column', items: [{ type: 'text', text: 'D' }]}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<img src={gridImg} alt='grid'/>\n\t\t\t\t\t\t<span className=\"title\">Grid</span>\n\t\t\t\t\t</ElementTile>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import React, { useState } from 'react';\nimport { cx } from 'emotion';\nimport {\n\tComboBox,\n\tForm,\n\tTextArea,\n\tTextInput,\n\tTag\n} from 'carbon-components-react';\nimport { leftPane } from '.';\n\nexport const StylePane = ({isActive, styleClasses, setStyleClasses}: any) => {\n\tconst [selectedStyleClassId, setSelectedStyleClassId] = useState('' as string);\n\n\tconst getSelectedClass = () => styleClasses.find((c: any) => c.id === selectedStyleClassId) || {};\n\tconst getSelectedClassIndex = () => styleClasses.findIndex((c: any) => c.id === selectedStyleClassId);\n\n\tconst updateSelectedClass = (newClass: any) => {\n\t\tconst selectedClassIndex = getSelectedClassIndex();\n\t\tif (selectedClassIndex < 0) {\n\t\t\treturn;\n\t\t}\n\t\tsetStyleClasses([\n\t\t\t...styleClasses.slice(0, selectedClassIndex),\n\t\t\tnewClass,\n\t\t\t...styleClasses.slice(selectedClassIndex + 1)\n\t\t]);\n\t};\n\n\tconst updateSelectedClassContent = (content: string | undefined) => {\n\t\tupdateSelectedClass({\n\t\t\t...getSelectedClass(),\n\t\t\tcontent: content || ''\n\t\t});\n\t};\n\n\tconst updateSelectedClassName = (name: string) => {\n\t\tupdateSelectedClass({\n\t\t\t...getSelectedClass(),\n\t\t\tname\n\t\t});\n\t};\n\n\tconst updateSelectedClassId = (id: string) => {\n\t\tupdateSelectedClass({\n\t\t\t...getSelectedClass(),\n\t\t\tid\n\t\t});\n\t\tsetSelectedStyleClassId(id);\n\t};\n\n\tconst classSelectorComboRef = React.createRef<any>();\n\n\tconst handleOnKeypress = (event: any) => {\n\t\tconst currentValue = classSelectorComboRef.current.textInput.current.value.trim();\n\t\tif (event.key === 'Enter' && currentValue) {\n\t\t\tconst newItem = {\n\t\t\t\tid: currentValue.split(' ').join('-').toLowerCase(),\n\t\t\t\tname: currentValue,\n\t\t\t\tcontent: ''\n\t\t\t};\n\t\t\tif (getSelectedClassIndex() < 0) {\n\t\t\t\tsetStyleClasses([...styleClasses, newItem]);\n\t\t\t}\n\t\t\tsetSelectedStyleClassId(newItem.id);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={cx(leftPane, isActive ? 'is-active' : '')}>\n\t\t\tStyle <br /><br />\n\t\t\t<Form>\n\t\t\t\t{\n\t\t\t\t\tstyleClasses.map((styleClass: any) => (\n\t\t\t\t\t\t<Tag\n\t\t\t\t\t\tfilter\n\t\t\t\t\t\tonClick={() => setSelectedStyleClassId(styleClass.id)}\n\t\t\t\t\t\tonClose={() => {}}>\n\t\t\t\t\t\t\t{styleClass.name}\n\t\t\t\t\t\t</Tag>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t\t<div onKeyDown={handleOnKeypress}>\n\t\t\t\t\t<ComboBox\n\t\t\t\t\t\tid='style-pane-class-selector'\n\t\t\t\t\t\ttitleText='(S)CSS class name'\n\t\t\t\t\t\titems={styleClasses}\n\t\t\t\t\t\tref={classSelectorComboRef}\n\t\t\t\t\t\titemToString={(item: any) => item ? item.name : ''}\n\t\t\t\t\t\tplaceholder='Select class or add new'\n\t\t\t\t\t\tselectedItem={getSelectedClass()}\n\t\t\t\t\t\tonChange={(event: any) => {\n\t\t\t\t\t\t\tsetSelectedStyleClassId(event.selectedItem ? event.selectedItem.id : '');\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div> <br />\n\t\t\t\t<TextInput\n\t\t\t\t\tlabelText='Descriptive name'\n\t\t\t\t\thelperText='Name that appears in tags and search'\n\t\t\t\t\tvalue={getSelectedClass().name || ''}\n\t\t\t\t\tdisabled={!getSelectedClass().id}\n\t\t\t\t\tonChange={(event: any) => {\n\t\t\t\t\t\tupdateSelectedClassName(event.currentTarget.value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<TextInput\n\t\t\t\t\tlabelText='CSS selector'\n\t\t\t\t\thelperText='Value used in development'\n\t\t\t\t\tvalue={getSelectedClass().id || ''}\n\t\t\t\t\tdisabled={!getSelectedClass().id}\n\t\t\t\t\tonChange={(event: any) => {\n\t\t\t\t\t\tupdateSelectedClassId(event.currentTarget.value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<TextArea\n\t\t\t\t\tvalue={getSelectedClass().content || ''}\n\t\t\t\t\tlabelText={getSelectedClass().id || 'Select a class first'}\n\t\t\t\t\thelperText='Put CSS properties for your class here'\n\t\t\t\t\tdisabled={!getSelectedClass().id}\n\t\t\t\t\tonChange={(event: any) => {\n\t\t\t\t\t\tupdateSelectedClassContent(event.currentTarget.value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Form>\n\t\t</div>\n\t);\n};\n","import React from 'react';\nimport { cx } from 'emotion';\nimport { leftPane } from '.';\n\nexport const CodePane = ({isActive}: any) => {\n\treturn (\n\t\t<div className={cx(leftPane, isActive ? 'is-active' : '')}>\n\t\t\tCode\n\t\t\t<br /><br /> <strong>Comming soon!</strong>\n\t\t</div>\n\t);\n};\n","import React from 'react';\nimport { cx } from 'emotion';\nimport { leftPane } from '.';\n\nexport const ExportPane = ({isActive}: any) => {\n\treturn (\n\t\t<div className={cx(leftPane, isActive ? 'is-active' : '')}>\n\t\t\tExport\n\t\t\t<br /><br /> <strong>Comming soon!</strong>\n\t\t</div>\n\t);\n};\n","import React from 'react';\n\nimport { Breadcrumb, BreadcrumbItem } from 'carbon-components-react';\n\nimport { getParentComponent, getSelectedComponent } from '../../components/fragment';\nimport { useFragment } from '../../context';\n\nconst getAncestors = (state: any, component: any) => {\n\tconst ancestors: any[] = [];\n\n\t// there's probably a way to optimize this function\n\n\tif (state === component) {\n\t\treturn ancestors;\n\t}\n\n\tlet parent = component;\n\n\tdo {\n\t\tparent = getParentComponent(state, parent);\n\t\tancestors.unshift(parent)\n\t} while (parent !== state);\n\n\treturn ancestors;\n}\n\nexport const SelectedComponentBreadcrumbs = ({selectedComponent}: any) => {\n\tconst [fragment, setFragment] = useFragment();\n\n\tif (!selectedComponent) {\n\t\tselectedComponent = getSelectedComponent(fragment);\n\t}\n\n\tconst selectComponent = (component: any) => {\n\t\tsetFragment({\n\t\t\t...fragment,\n\t\t\tselectedComponentId: component.id\n\t\t}, true);\n\t};\n\n\treturn selectedComponent && <Breadcrumb noTrailingSlash>\n\t\t{getAncestors(fragment.data, selectedComponent).map(component =>\n\t\t\t<BreadcrumbItem\n\t\t\thref=\"#\"\n\t\t\tisCurrentPage={!component.type}\n\t\t\tonClick={(event: any) => {\n\t\t\t\tevent.nativeEvent.preventDefault();\n\t\t\t\tif (!component.type) {\n\t\t\t\t\t// happens when clicking root element\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tselectComponent(component)\n\t\t\t}}>\n\t\t\t\t{component.type || 'root'}\n\t\t\t</BreadcrumbItem>\n\t\t)}\n\t\t<BreadcrumbItem href=\"#\" onClick={(event: any) => event.nativeEvent.preventDefault()} isCurrentPage>\n\t\t\t{selectedComponent.type}\n\t\t</BreadcrumbItem>\n\t</Breadcrumb>;\n};\n","import React from 'react';\n\nimport { getSelectedComponent, updatedState } from '../../components/fragment';\n\nimport {\n\tAButtonStyleUI,\n\tACheckboxStyleUI,\n\tAGridStyleUI,\n\tATextStyleUI,\n\tATextAreaStyleUI,\n\tATextInputStyleUI,\n\tARowStyleUI,\n\tAColumnStyleUI\n} from '../../fragment-components';\n\nimport { SelectedComponentBreadcrumbs } from './selected-component-breadcrumbs';\n\nconst showComponentStyleOptions = (selectedComponent: any, setComponent: any, styleClasses: any) => {\n\tswitch (selectedComponent.type) {\n\t\tcase 'text':\n\t\t\treturn <ATextStyleUI selectedComponent={selectedComponent} setComponent={setComponent} styleClasses={styleClasses} />\n\n\t\tcase 'button':\n\t\t\treturn <AButtonStyleUI selectedComponent={selectedComponent} setComponent={setComponent} styleClasses={styleClasses} />\n\n\t\tcase 'checkbox':\n\t\t\treturn <ACheckboxStyleUI selectedComponent={selectedComponent} setComponent={setComponent} styleClasses={styleClasses} />\n\n\t\tcase 'grid':\n\t\t\treturn <AGridStyleUI selectedComponent={selectedComponent} setComponent={setComponent} styleClasses={styleClasses} />\n\n\t\tcase 'row':\n\t\t\treturn <ARowStyleUI selectedComponent={selectedComponent} setComponent={setComponent} styleClasses={styleClasses} />\n\n\t\tcase 'column':\n\t\t\treturn <AColumnStyleUI selectedComponent={selectedComponent} setComponent={setComponent} styleClasses={styleClasses} />\n\n\t\tcase 'textarea':\n\t\t\treturn <ATextAreaStyleUI selectedComponent={selectedComponent} setComponent={setComponent} styleClasses={styleClasses} />\n\n\t\tcase 'textinput':\n\t\t\treturn <ATextInputStyleUI selectedComponent={selectedComponent} setComponent={setComponent} styleClasses={styleClasses} />\n\n\t\tdefault:\n\t\t\tbreak;\n\t}\n};\n\nexport const StyleContextPane = ({fragment, setFragment, styleClasses}: any) => {\n\tconst selectedComponent = getSelectedComponent(fragment);\n\n\tconst setComponent = (component: any) => {\n\t\tsetFragment({\n\t\t\t...fragment,\n\t\t\tdata: updatedState(fragment.data, {\n\t\t\t\ttype: 'update',\n\t\t\t\tcomponent\n\t\t\t})\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t{\n\t\t\t\tselectedComponent && <>\n\t\t\t\t\t<SelectedComponentBreadcrumbs\n\t\t\t\t\t\tfragment={fragment}\n\t\t\t\t\t\tselectedComponent={selectedComponent}\n\t\t\t\t\t\tsetFragment={setFragment} />\n\t\t\t\t\t<hr />\n\t\t\t\t\t<div className='context-pane-content'>\n\t\t\t\t\t\t{showComponentStyleOptions(selectedComponent, setComponent, styleClasses)}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t}\n\t\t</div>\n\t);\n};\n","import React from 'react';\n\nimport {\n\tAComponentCodeUI,\n\tATextInputCodeUI,\n\tATextAreaCodeUI,\n\tACheckboxCodeUI\n} from '../../fragment-components';\n\nimport { getSelectedComponent, updatedState } from '../../components/fragment';\n\nconst showComponentCodeOptions = (selectedComponent: any, setComponent: any) => {\n\tswitch (selectedComponent.type) {\n\t\tcase 'textinput':\n\t\t\treturn <ATextInputCodeUI selectedComponent={selectedComponent} setComponent={setComponent} />;\n\n\t\tcase 'textarea':\n\t\t\treturn <ATextAreaCodeUI selectedComponent={selectedComponent} setComponent={setComponent} />;\n\n\t\tcase 'checkbox':\n\t\t\treturn <ACheckboxCodeUI selectedComponent={selectedComponent} setComponent={setComponent} />;\n\n\t\tdefault:\n\t\t\treturn <AComponentCodeUI selectedComponent={selectedComponent} setComponent={setComponent} />;\n\t}\n};\n\nexport const CodeContextPane = ({fragment, setFragment}: any) => {\n\tconst selectedComponent = getSelectedComponent(fragment);\n\n\tconst setComponent = (component: any) => {\n\t\tsetFragment({\n\t\t\t...fragment,\n\t\t\tdata: updatedState(fragment.data, {\n\t\t\t\ttype: 'update',\n\t\t\t\tcomponent\n\t\t\t})\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className='context-pane-content'>\n\t\t\t{selectedComponent && showComponentCodeOptions(selectedComponent, setComponent)}\n\t\t</div>\n\t);\n};\n","import React from 'react';\n\nimport {\n\tButton,\n\tOverflowMenu,\n\tOverflowMenuItem,\n\tSearch\n} from 'carbon-components-react';\n\nimport {\n\tAdd16,\n\tArrowsVertical16,\n\tCheckmarkFilled16\n\t// 🏗️🏗️🏗️ Under construction, add in later 🏗️🏗️🏗️\n\t// SettingsAdjust16\n} from '@carbon/icons-react';\n\nimport { css } from 'emotion';\n\nconst dashboardSearchWrapper = css`\n\tdisplay: flex;\n\twidth: 100%;\n\n\t// 520px is the point which the search bar becomes too small to display the full text, moves\n\t// the sort, share, and add button below the search bar at this point.\n\t@media screen and (max-width: 520px) {\n\t\tflex-wrap: wrap;\n\t}\n`;\n\nconst searchInput = css`\n\tinput {\n\t\tborder-bottom: none;\n\n\t\t@media screen and (max-width: 520px) {\n\t\t\tmargin-bottom: 15px;\n\t\t}\n\t}\n`;\n\nconst sortButton = css`\n\theight: 3rem;\n\twidth: 3rem;\n\tbackground-color: #f4f4f4;\n`;\n\nconst sortOverflowItem = css`\n\tsvg {\n\t\ttransform: translate(7px, 1.5px);\n\t}\n`;\n\n// 🏗️🏗️🏗️ Under construction, add in later 🏗️🏗️🏗️\n// const shareButton = css`\n// \theight: 3rem;\n// \twidth: 3rem;\n// \tbackground-color: #f4f4f4;\n// `;\n\nexport enum SortDirection {\n\tAscending,\n\tDescending\n}\n\nexport const DashboardSearch = ({\n\tonSearchHandler,\n\tonSortHandler,\n\tdisplayWizard,\n\tsetDisplayWizard,\n\tsortDirection\n}: any) => (\n\t<div className={dashboardSearchWrapper}>\n\t\t<Search\n\t\t\tlabelText='Fragment'\n\t\t\tplaceHolderText='Search fragments'\n\t\t\tclassName={searchInput}\n\t\t\tonChange={(event: any) => onSearchHandler(event.target.value)} />\n\t\t<OverflowMenu\n\t\t\tclassName={sortButton}\n\t\t\tariaLabel='Sort fragment'\n\t\t\trenderIcon = {() => <ArrowsVertical16 />}\n\t\t\tonClick={(event: { stopPropagation: () => void; }) => { event.stopPropagation(); }}>\n\t\t\t<OverflowMenuItem\n\t\t\t\titemText={(\n\t\t\t\t\t<div className={sortOverflowItem}>\n\t\t\t\t\t\tNewest to oldest\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsortDirection === SortDirection.Ascending\n\t\t\t\t\t\t\t\t? <CheckmarkFilled16 />\n\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\tonClick={() => {onSortHandler(SortDirection.Ascending);}} />\n\t\t\t<OverflowMenuItem\n\t\t\t\titemText={(\n\t\t\t\t\t<div className={sortOverflowItem}>\n\t\t\t\t\t\tOldest to newest\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsortDirection === SortDirection.Descending\n\t\t\t\t\t\t\t\t? <CheckmarkFilled16 />\n\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\tonClick={() => {onSortHandler(SortDirection.Descending);}} />\n\t\t</OverflowMenu>\n\t\t{/* 🏗️🏗️🏗️ Under construction, add in later 🏗️🏗️🏗️ */}\n\t\t{/* <Button kind='ghost' className={shareButton}><SettingsAdjust16 /></Button> */}\n\t\t<Button\n\t\t\tonClick={() => { setDisplayWizard(!displayWizard); }}\n\t\t\ttitle='Add new fragment'\n\t\t\taria-label='Add new fragment'>\n\t\t\tNew fragment\n\t\t\t<Add16 className='bx--btn__icon'/>\n\t\t</Button>\n\t</div>\n);\n","import React from 'react';\nimport { css } from 'emotion';\nimport { ContentSwitcher, Switch } from 'carbon-components-react';\n\n// keep the enum order same as the switch order so context switcher\n// knows to select the correct one. Shout if you have a cleaner alternative.\nexport enum FragmentGroupDisplayed {\n\tAllFragments,\n\tTemplates,\n\tLocalOnly\n}\n\nconst dashboardHeaderWrapper = css`\n\tdisplay: flex;\n\tmargin: 2rem 0;\n\n\t// 676px is when the content switcher becomes too small to show full text, moves the\n\t// content switcher below the title at this point.\n\t@media screen and (max-width: 676px) {\n\t\tflex-wrap: wrap;\n\t}\n`;\n\nconst fragmentTitle = css`\n\twidth: 100%;\n`;\n\nconst contentSwitcher = css`\n\twidth: 450px;\n`;\n\nexport const DashboardHeader = ({ onDisplayedSwitchHandler, fragmentGroupDisplayed }: any) => (\n\t<div className={dashboardHeaderWrapper}>\n\t\t<h2 className={fragmentTitle}>Fragments</h2>\n\t\t<ContentSwitcher\n\t\t\tclassName={contentSwitcher}\n\t\t\tonChange={(event: any) => onDisplayedSwitchHandler(event.name)}\n\t\t\tselectedIndex={fragmentGroupDisplayed}>\n\t\t\t<Switch name={FragmentGroupDisplayed.AllFragments} text='All fragments' />\n\t\t\t<Switch name={FragmentGroupDisplayed.Templates} text='Templates only' />\n\t\t</ContentSwitcher>\n\t</div>\n);\n","import React, { useContext, useState } from 'react';\n\nimport { FragmentWizardModals } from './fragment-wizard';\n\nimport { Modal } from 'carbon-components-react';\nimport { css } from 'emotion';\nimport { SelectionTile } from '../../../components/selection-tile';\nimport { generateNewFragment } from './generate-new-fragment';\nimport { FragmentActionType, FragmentsContext } from '../../../context';\nimport { LocalFragmentActionType, LocalFragmentsContext } from '../../../context/local-fragments-context';\nimport { useHistory } from 'react-router-dom';\n\nconst createFragmentTiles = css`\n\tdisplay: flex;\n\tmargin-top: 30px;\n\tmargin-left: 15px;\n\tmargin-right: 15px;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\tjustify-content: space-between;\n`;\n\nconst createFragmentTile = css`\n\twidth: 48%;\n\theight: 200px;\n\t.bx--tile {\n\t\theight: 100%;\n\t}\n`;\n\nexport enum CreateOptions {\n\tCHOOSE_TEMPLATE,\n\tFROM_SCRATCH,\n\tIMPORT_JSON\n}\n\nexport interface CreateFragmentModalProps {\n\tshouldDisplay: boolean,\n\tsetShouldDisplay: (shouldDisplay: boolean) => void,\n\tsetDisplayedModal: (displayedModal: FragmentWizardModals | null) => void,\n\tsetLastVisitedModal: (lastVisitedModal: FragmentWizardModals) => void\n}\n\nexport const CreateFragmentModal = (props: CreateFragmentModalProps) => {\n\tconst [selectedCreateOption, setSelectedCreateOption] = useState<CreateOptions | null>(null);\n\n\tconst [, updateLocalFragments] = useContext(LocalFragmentsContext);\n\tconst [, dispatch] = useContext(FragmentsContext);\n\n\tconst history = useHistory();\n\n\tconst generateFragment = () => {\n\t\tconst generatedFragment = generateNewFragment(\n\t\t\t{ items: [], id: 1 }\n\t\t);\n\n\t\tdispatch({\n\t\t\ttype: FragmentActionType.ADD_ONE,\n\t\t\tdata: generatedFragment\n\t\t});\n\t\tupdateLocalFragments({\n\t\t\ttype: LocalFragmentActionType.ADD,\n\t\t\tdata: { id: generatedFragment.id }\n\t\t});\n\t\thistory.push(`/edit/${generatedFragment.id}`);\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\topen={props.shouldDisplay}\n\t\t\thasForm\n\t\t\tshouldSubmitOnEnter={false}\n\t\t\tselectorPrimaryFocus='.bx--tile--selectable'\n\t\t\tonSecondarySubmit={() => {\n\t\t\t\tprops.setShouldDisplay(false);\n\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CREATE_FRAGMENT_MODAL);\n\t\t\t}}\n\t\t\tonRequestSubmit={() => {\n\t\t\t\tif (selectedCreateOption === CreateOptions.IMPORT_JSON) {\n\t\t\t\t\t// open modal with file upload\n\t\t\t\t\tprops.setDisplayedModal(FragmentWizardModals.IMPORT_JSON_MODAL);\n\t\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CREATE_FRAGMENT_MODAL);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (selectedCreateOption === CreateOptions.FROM_SCRATCH) {\n\t\t\t\t\tgenerateFragment();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tprops.setDisplayedModal(FragmentWizardModals.CHOOSE_FRAGMENT_MODAL);\n\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CREATE_FRAGMENT_MODAL);\n\t\t\t}}\n\t\t\tonRequestClose={() => {\n\t\t\t\tprops.setShouldDisplay(false);\n\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CREATE_FRAGMENT_MODAL);\n\t\t\t}}\n\t\t\tmodalHeading='Create new fragment'\n\t\t\tprimaryButtonText='Next'\n\t\t\tprimaryButtonDisabled={selectedCreateOption === null}\n\t\t\tsecondaryButtonText='Cancel'>\n\t\t\t<p>Start with a template or create a new fragment from scratch.</p>\n\t\t\t<div className={createFragmentTiles}>\n\t\t\t\t<SelectionTile\n\t\t\t\t\tstyles={createFragmentTile}\n\t\t\t\t\tonChange={() => { setSelectedCreateOption(CreateOptions.IMPORT_JSON); }}\n\t\t\t\t\tselected={selectedCreateOption === CreateOptions.IMPORT_JSON}\n\t\t\t\t\tlabel='Import JSON'/>\n\t\t\t\t<SelectionTile\n\t\t\t\t\tstyles={createFragmentTile}\n\t\t\t\t\tonChange={() => { setSelectedCreateOption(CreateOptions.CHOOSE_TEMPLATE); }}\n\t\t\t\t\tselected={selectedCreateOption === CreateOptions.CHOOSE_TEMPLATE}\n\t\t\t\t\tlabel='Pick a template'/>\n\t\t\t\t<SelectionTile\n\t\t\t\t\tstyles={createFragmentTile}\n\t\t\t\t\tonChange={() => { setSelectedCreateOption(CreateOptions.FROM_SCRATCH); }}\n\t\t\t\t\tselected={selectedCreateOption === CreateOptions.FROM_SCRATCH}\n\t\t\t\t\tlabel='Start from scratch'/>\n\t\t\t</div>\n\t\t</Modal>\n\t);\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { css } from 'emotion';\nimport { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport {\n\tLoading,\n\tOverflowMenu,\n\tOverflowMenuItem,\n\tSkeletonText,\n\tTile\n} from 'carbon-components-react';\nimport { ModalContext, ModalActionType } from '../../context/modal-context';\nimport { getFragmentPreview, RenderProps } from '../../utils/fragment-tools';\n\nconst tileWrapper = css`\n\tmargin: 0.75rem;\n\tpadding: 0;\n\theight: 250px;\n\twidth: 350px;\n\tbox-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.3);\n\tbackground-color: #ffffff;\n\tfloat: left;\n`;\n\nconst tileStyle = css`\n\tpadding: 0;\n\tbackground-color: #ffffff;\n`;\n\nconst tileInnerWrapperBase = css`\n\talign-items: end;\n`;\n\nconst tileInnerWrapper = css`\n\t${tileInnerWrapperBase}\n\tmargin: 8px;\n\th3 {\n\t\tfont-size: 1rem;\n\t\tpadding: 5px;\n\t\tpadding-left: 16px;\n\t}\n\t.dashboard-link {\n\t\tcolor: black;\n\t\ttext-decoration: none;\n\t\ttransition: 0.3s;\n\t}\n\t.dashboard-link:hover {\n\t\topacity: 0.6;\n\t\tcolor: #6f6f6f;\n\t\tcursor: pointer;\n\t}\n\tspan {\n\t\tpadding-left: 16px;\n\t\tfont-style: italic;\n\t\tfont-size: 0.75rem;\n\t}\n`;\n\nconst fragmentImage = css`\n\twidth: auto;\n\theight: auto;\n\tmax-height: 173px;\n\tmax-width: 333px;\n\tdisplay: block;\n\tpadding-top: 8px;\n`;\nconst fragmentOverflow = css`\n\tright: 5px;\n\tposition: absolute;\n\tmargin-top: 1rem;\n\tpadding: 5px;\n`;\nconst fragmentInfo = css`\n\tdisplay: flex;\n`;\nconst spinner = css`\n\tposition: absolute;\n\ttop: 0;\n\twidth: calc(100% - 16px);\n\n\t.bx--loading {\n\t\tmargin: auto;\n\t}\n`;\nconst imagePlaceholderStyle = css`\n\theight: 173px;\n`;\n\nexport const FragmentTile = ({\n\tfragment,\n\ttitle,\n\tto,\n\tlastModified,\n\tsetModalFragment\n}: any) => {\n\tconst history = useHistory();\n\tconst [, dispatchModal] = useContext(ModalContext);\n\tconst [previewUrl, setPreviewUrl] = useState('');\n\tconst handleModalState = (modalAction: ModalActionType) => {\n\t\tsetModalFragment(fragment);\n\t\tdispatchModal({\n\t\t\ttype: modalAction,\n\t\t\tid: fragment.id\n\t\t});\n\t};\n\n\tconst renderProps: RenderProps = {\n\t\tid: fragment.id,\n\t\tname: fragment.title,\n\t\twidth: 800,\n\t\theight: 400,\n\t\tpreview: {\n\t\t\tformat: 'png',\n\t\t\twidth: 330,\n\t\t\theight: 200\n\t\t}\n\t};\n\n\tconst resetPreview = async () => {\n\t\tconst imageBlob = await getFragmentPreview(fragment, renderProps);\n\t\tconst reader = new FileReader();\n\t\treader.readAsDataURL(imageBlob ? imageBlob : new Blob());\n\t\treader.onloadend = () => {\n\t\t\tconst imageUrl: string = reader.result ? reader.result.toString() : '';\n\t\t\tsetPreviewUrl(imageUrl);\n\t\t};\n\t}\n\n\tuseEffect(() => {\n\t\tresetPreview();\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [])\n\n\treturn (\n\t\t<div className={tileWrapper}>\n\t\t\t<Tile className={tileStyle} >\n\t\t\t\t<div className={tileInnerWrapper}>\n\t\t\t\t\t<Link to={to}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpreviewUrl &&\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tloading='lazy'\n\t\t\t\t\t\t\t\tsrc={previewUrl}\n\t\t\t\t\t\t\t\tclassName={fragmentImage}\n\t\t\t\t\t\t\t\talt={`fragment preview: ${title}`} />\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t!previewUrl &&\n\t\t\t\t\t\t\t<div className={imagePlaceholderStyle} />\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<div className={spinner}>\n\t\t\t\t\t\t\t<Loading withOverlay={false} active={!previewUrl} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<div className={fragmentInfo}>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Link to={to} className='dashboard-link'>\n\t\t\t\t\t\t\t\t<h3>{title}</h3>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<span>{lastModified ? lastModified : 'Last modified date unknown'}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<OverflowMenu\n\t\t\t\t\t\t\tclassName={fragmentOverflow}\n\t\t\t\t\t\t\tariaLabel='Fragment options'\n\t\t\t\t\t\t\ticonDescription=''\n\t\t\t\t\t\t\tonClick={\n\t\t\t\t\t\t\t\t(event: { stopPropagation: () => void; }) => { event.stopPropagation(); }\n\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t<OverflowMenuItem\n\t\t\t\t\t\t\t\titemText='Edit'\n\t\t\t\t\t\t\t\tonClick={() => { history.push(`/edit/${fragment.id}`); }}/>\n\t\t\t\t\t\t\t<OverflowMenuItem\n\t\t\t\t\t\t\t\titemText='Export'\n\t\t\t\t\t\t\t\tonClick={() => { handleModalState(ModalActionType.setShareModal); }}/>\n\t\t\t\t\t\t\t<OverflowMenuItem\n\t\t\t\t\t\t\t\titemText='Duplicate'\n\t\t\t\t\t\t\t\tonClick={() => { handleModalState(ModalActionType.setDuplicationModal); }}/>\n\t\t\t\t\t\t\t<OverflowMenuItem\n\t\t\t\t\t\t\t\titemText='Reset preview'\n\t\t\t\t\t\t\t\tonClick={resetPreview}/>\n\t\t\t\t\t\t\t<OverflowMenuItem\n\t\t\t\t\t\t\t\titemText='Remove'\n\t\t\t\t\t\t\t\tonClick={() => { handleModalState(ModalActionType.setDeletionModal); }}\n\t\t\t\t\t\t\t\tisDelete />\n\t\t\t\t\t\t</OverflowMenu>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Tile>\n\t\t</div>\n\t);\n};\n\nexport const SkeletonFragmentTile = () => (\n\t<div className={tileWrapper}>\n\t\t<Tile>\n\t\t\t<div className={tileInnerWrapperBase}>\n\t\t\t\t<SkeletonText heading width='150px' />\n\t\t\t</div>\n\t\t</Tile>\n\t</div>\n);\n","import React from 'react';\nimport { css } from 'emotion';\n\nimport { FragmentTile } from './fragment-tile';\n\n// import the img placeholder svg\nimport placeholder from './../../assets/dashboard-empty-state.svg';\n\n// styles for placeholder\nconst svgStyle = css`\n\twidth: 25vw;\n\theight: auto;\n\tmax-width: 400px;\n`;\n\nconst placeholderContainer = css`\n\tmargin-top: 48px;\n\tdisplay: flex;\n\tflex-direction: column;\n\theight: calc(100vh - 48px);\n\tpadding: 24px;\n\tpadding-top: 150px;\n\talign-items: center;\n`;\n\nconst fragmentRowWrapper = css`\n\tmargin-top: 3rem;\n\tbackground: #f4f4f4;\n\tmin-width: 100%;\n\theight: 100%\n`;\n\nexport const FragmentTileList = ({ fragments, loaded, setModalFragment }: any) => {\n\tconst getTilesOrPlaceholder = () => {\n\t\tif ((!fragments || fragments.length === 0) && loaded) {\n\t\t\treturn (\n\t\t\t\t<div className={placeholderContainer}>\n\t\t\t\t\t<div style={{ textAlign: 'left' }}>\n\t\t\t\t\t\t<img alt=\"No fragments exist\" src={placeholder} className={svgStyle} />\n\t\t\t\t\t\t<h3>You have no fragments here.</h3>\n\t\t\t\t\t\t<p style={{ marginTop: '0.5em' }}>\n\t\t\t\t\t\t\tTo build a new fragment, click <strong>New Fragment</strong>.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn fragments.map((v: any) => (\n\t\t\t<FragmentTile\n\t\t\t\tkey={v.id}\n\t\t\t\t{...v}\n\t\t\t\tfragment={v}\n\t\t\t\tto={`/edit/${v.id}`}\n\t\t\t\t{...v.lastModified}\n\t\t\t\tsetModalFragment={setModalFragment}/>\n\t\t));\n\t};\n\n\treturn (\n\t\t<div className={fragmentRowWrapper}>\n\t\t\t{getTilesOrPlaceholder()}\n\t\t</div>\n\t);\n};\n","export const generateNewFragment = (\n\tfragment: any\n) => {\n\tconst fragmentID = `${Math.random().toString().slice(2)}${Math.random().toString().slice(2)}`;\n\tconst fragmentName = 'New fragment';\n\n\treturn {\n\t\tid: fragmentID,\n\t\tlastModified: new Date().toISOString(),\n\t\ttitle: fragmentName,\n\t\tdata: fragment\n\t};\n};\n","import React, { useState } from 'react';\n\nimport { CreateFragmentModal } from './create-fragment-modal';\nimport { ChooseFragmentModal } from './choose-fragment-modal';\nimport { ImportJsonModal } from './import-json-modal';\n\nexport enum FragmentWizardModals {\n\tCREATE_FRAGMENT_MODAL,\n\tCHOOSE_FRAGMENT_MODAL,\n\tIMPORT_JSON_MODAL\n}\n\nexport const FragmentWizard = ({ shouldDisplay, setShouldDisplay, dispatch }: any) => {\n\t// These are states which are shared amongst the three modals.\n\tconst [displayedModal, setDisplayedModal]\n\t\t= useState<FragmentWizardModals | null>(FragmentWizardModals.CREATE_FRAGMENT_MODAL);\n\t// This is used to indicate which modal was last visited and is used to go go back to the\n\t// correct previous modal.\n\tconst [lastVisitedModal, setLastVisitedModal]\n\t\t= useState<FragmentWizardModals>(FragmentWizardModals.CREATE_FRAGMENT_MODAL);\n\tconst [uploadedData, setUploadedData] = useState<any>({});\n\n\tconst modalSwitcher = () => {\n\t\tif (!shouldDisplay) {\n\t\t\treturn null;\n\t\t}\n\t\tswitch(displayedModal) {\n\t\t\tcase FragmentWizardModals.IMPORT_JSON_MODAL:\n\t\t\t\treturn (\n\t\t\t\t\t<ImportJsonModal\n\t\t\t\t\t\tshouldDisplay={shouldDisplay}\n\t\t\t\t\t\tsetShouldDisplay={setShouldDisplay}\n\t\t\t\t\t\tsetDisplayedModal={setDisplayedModal}\n\t\t\t\t\t\tlastVisitedModal={lastVisitedModal}\n\t\t\t\t\t\tsetLastVisitedModal={setLastVisitedModal}\n\t\t\t\t\t\tuploadedData={uploadedData}\n\t\t\t\t\t\tsetUploadedData={setUploadedData}\n\t\t\t\t\t\tdispatch={dispatch} />\n\t\t\t\t);\n\t\t\tcase FragmentWizardModals.CREATE_FRAGMENT_MODAL:\n\t\t\t\treturn (\n\t\t\t\t\t<CreateFragmentModal\n\t\t\t\t\t\tshouldDisplay={shouldDisplay}\n\t\t\t\t\t\tsetShouldDisplay={setShouldDisplay}\n\t\t\t\t\t\tsetDisplayedModal={setDisplayedModal}\n\t\t\t\t\t\tsetLastVisitedModal={setLastVisitedModal} />\n\t\t\t\t);\n\t\t\tcase FragmentWizardModals.CHOOSE_FRAGMENT_MODAL:\n\t\t\t\treturn (\n\t\t\t\t\t<ChooseFragmentModal\n\t\t\t\t\t\tshouldDisplay={shouldDisplay}\n\t\t\t\t\t\tsetShouldDisplay={setShouldDisplay}\n\t\t\t\t\t\tsetDisplayedModal={setDisplayedModal}\n\t\t\t\t\t\tlastVisitedModal={lastVisitedModal}\n\t\t\t\t\t\tsetLastVisitedModal={setLastVisitedModal}\n\t\t\t\t\t\tuploadedData={uploadedData}\n\t\t\t\t\t\tsetUploadedData={setUploadedData}\n\t\t\t\t\t\tdispatch={dispatch} />\n\t\t\t\t);\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t};\n\n\treturn modalSwitcher();\n};\n","import React, { useContext } from 'react';\n\nimport { css } from 'emotion';\nimport {\n\tModal,\n\tInlineNotification,\n\tNotificationActionButton\n} from 'carbon-components-react';\nimport { FragmentWizardModals } from './fragment-wizard';\nimport { generateNewFragment } from './generate-new-fragment';\n\nimport {\n\tFragmentActionType,\n\tFragmentAction,\n\tFragmentState,\n\tFragmentsContext\n} from '../../../context';\nimport { useHistory } from 'react-router-dom';\nimport { LocalFragmentsContext, LocalFragmentActionType } from '../../../context/local-fragments-context';\nimport { warningNotificationProps } from '../../../utils/file-tools';\n\nconst fragmentOptions = css`\n\tmargin-left: 30px;\n\tmargin-right: 30px;\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\tjustify-content: space-between;\n\n\t// This is the viewport width that causes the selection tiles to overlap.\n\t@media screen and (max-width: 45rem) {\n\t\tflex-direction: column;\n\t}\n`;\n\nexport interface ChooseFragmentModalProps {\n\tshouldDisplay: boolean,\n\tsetShouldDisplay: (shouldDisplay: boolean) => void,\n\tsetDisplayedModal: (displayedModal: FragmentWizardModals | null) => void,\n\tsetLastVisitedModal: (lastVisitedModal: FragmentWizardModals) => void,\n\tlastVisitedModal: FragmentWizardModals,\n\tuploadedData: any,\n\tsetUploadedData: (uploadedData: any) => void,\n\tdispatch: (fragmentAction: FragmentAction) => FragmentState\n}\n\nexport const ChooseFragmentModal = (props: ChooseFragmentModalProps) => {\n\tconst [, updateLocalFragments] = useContext(LocalFragmentsContext);\n\tconst [, dispatch] = useContext(FragmentsContext);\n\n\tconst history = useHistory();\n\n\tconst generateFragment = () => {\n\t\tconst generatedFragment = generateNewFragment(\n\t\t\tprops.uploadedData.data\n\t\t);\n\n\t\tdispatch({\n\t\t\ttype: FragmentActionType.ADD_ONE,\n\t\t\tdata: generatedFragment\n\t\t});\n\t\tupdateLocalFragments({\n\t\t\ttype: LocalFragmentActionType.ADD,\n\t\t\tdata: { id: generatedFragment.id }\n\t\t});\n\t\thistory.push(`/edit/${generatedFragment.id}`);\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\topen={props.shouldDisplay}\n\t\t\tshouldSubmitOnEnter={false}\n\t\t\tselectorPrimaryFocus='.bx--tile--selectable'\n\t\t\tonRequestSubmit={() => {\n\t\t\t\tgenerateFragment();\n\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CHOOSE_FRAGMENT_MODAL);\n\t\t\t}}\n\t\t\tonRequestClose={() => { props.setShouldDisplay(false); }}\n\t\t\tonSecondarySubmit={() => {\n\t\t\t\tprops.setDisplayedModal(props.lastVisitedModal);\n\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CHOOSE_FRAGMENT_MODAL);\n\t\t\t}}\n\t\t\thasForm\n\t\t\tmodalHeading='Create new fragment'\n\t\t\tprimaryButtonText='Done'\n\t\t\tsecondaryButtonText='Back'>\n\t\t\t{\n\t\t\t\tprops.uploadedData.wasDataModified\n\t\t\t\t\t? <InlineNotification\n\t\t\t\t\t\t{ ...warningNotificationProps }\n\t\t\t\t\t\tactions={\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<NotificationActionButton\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tprops.setUploadedData({\n\t\t\t\t\t\t\t\t\t\t\tdata: [],\n\t\t\t\t\t\t\t\t\t\t\twasDataModified: false\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\tUse demo data\n\t\t\t\t\t\t\t\t</NotificationActionButton>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tprops.uploadedData && props.uploadedData.originalData\n\t\t\t\t\t\t\t\t\t&& <NotificationActionButton\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tprops.setUploadedData({\n\t\t\t\t\t\t\t\t\t\t\t\tdata: props.uploadedData.originalData,\n\t\t\t\t\t\t\t\t\t\t\t\twasDataModified: false\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\tUse unmodified data\n\t\t\t\t\t\t\t\t\t</NotificationActionButton>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t} />\n\t\t\t\t\t: null\n\t\t\t}\n\t\t\t<p>Choose a type of fragment and click done to start editing your new fragment</p>\n\t\t\t<div className={fragmentOptions}>\n\t\t\t\tEmpty\n\t\t\t</div>\n\t\t</Modal>\n\t);\n};\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\n\nimport { css } from 'emotion';\nimport {\n\tModal,\n\tFormItem,\n\tFileUploaderDropContainer,\n\tFileUploaderItem,\n\tTextArea\n} from 'carbon-components-react';\nimport { FragmentWizardModals } from './fragment-wizard';\nimport { generateNewFragment } from './generate-new-fragment';\n\nimport {\n\tFragmentActionType,\n\tFragmentAction,\n\tFragmentState,\n\tFragmentsContext\n} from '../../../context';\nimport { useHistory } from 'react-router-dom';\nimport { LocalFragmentsContext, LocalFragmentActionType } from '../../../context/local-fragments-context';\n\nconst fragmentOptions = css`\n\tmargin-left: 30px;\n\tmargin-right: 30px;\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\tjustify-content: space-between;\n\n\t// This is the viewport width that causes the selection tiles to overlap.\n\t@media screen and (max-width: 45rem) {\n\t\tflex-direction: column;\n\t}\n`;\n\nexport interface ImportJsonModalProps {\n\tshouldDisplay: boolean,\n\tsetShouldDisplay: (shouldDisplay: boolean) => void,\n\tsetDisplayedModal: (displayedModal: FragmentWizardModals | null) => void,\n\tsetLastVisitedModal: (lastVisitedModal: FragmentWizardModals) => void,\n\tlastVisitedModal: FragmentWizardModals,\n\tuploadedData: any,\n\tsetUploadedData: (uploadedData: any) => void,\n\tmultiple?: boolean,\n\tdispatch: (fragmentAction: FragmentAction) => FragmentState\n}\n\nlet lastId = 0;\n\nconst uid = (prefix = 'id') => {\n\tlastId++;\n\treturn `${prefix}${lastId}`;\n}\n\nexport const ImportJsonModal = (props: ImportJsonModalProps) => {\n\tconst [, updateLocalFragments] = useContext(LocalFragmentsContext);\n\tconst [, dispatch] = useContext(FragmentsContext);\n\tconst [files, setFiles] = useState([] as any[]);\n\tconst [jsonString, _setJsonString] = useState('');\n\tconst [fragmentJson, setFragmentJson] = useState('');\n\tconst [jsonParseError, setJsonParseError] = useState('');\n\n\tconst setJsonString = (js: string) => {\n\t\t_setJsonString(js);\n\n\t\ttry {\n\t\t\tif (js) {\n\t\t\t\tsetFragmentJson(JSON.parse(js));\n\t\t\t}\n\t\t\tsetJsonParseError('');\n\t\t} catch (e) {\n\t\t\tsetJsonParseError((e as any).toString());\n\t\t}\n\t};\n\n\tconst handleDrop = (e: any) => {\n\t\te.preventDefault();\n\t};\n\n\tconst handleDragover = (e: any) => {\n\t\te.preventDefault();\n\t};\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('drop', handleDrop);\n\t\tdocument.addEventListener('dragover', handleDragover);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('drop', handleDrop);\n\t\t\tdocument.removeEventListener('dragover', handleDragover);\n\t\t};\n\t}, []);\n\n\tconst history = useHistory();\n\tconst uploadFile = async (fileToUpload: any) => {\n\t\t// file size validation\n\t\tif (fileToUpload.filesize > 512000) {\n\t\t\tconst updatedFile = {\n\t\t\t\t...fileToUpload,\n\t\t\t\tstatus: 'edit',\n\t\t\t\ticonDescription: 'Delete file',\n\t\t\t\tinvalid: true,\n\t\t\t\terrorSubject: 'File size exceeds limit',\n\t\t\t\terrorBody: '500kb max file size. Select a new file and try again.',\n\t\t\t};\n\t\t\tsetFiles((files) =>\n\t\t\t\tfiles.map((file) =>\n\t\t\t\t\tfile.uuid === fileToUpload.uuid ? updatedFile : file\n\t\t\t\t)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// file type validation\n\t\tif (fileToUpload.invalidFileType) {\n\t\t\tconst updatedFile = {\n\t\t\t\t...fileToUpload,\n\t\t\t\tstatus: 'edit',\n\t\t\t\ticonDescription: 'Delete file',\n\t\t\t\tinvalid: true,\n\t\t\t\terrorSubject: 'Invalid file type',\n\t\t\t\terrorBody: `\"${fileToUpload.name}\" does not have a valid file type.`,\n\t\t\t};\n\t\t\tsetFiles((files) =>\n\t\t\t\tfiles.map((file) =>\n\t\t\t\t\tfile.uuid === fileToUpload.uuid ? updatedFile : file\n\t\t\t\t)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// reading\n\t\tvar reader = new FileReader();\n\t\treader.readAsText(fileToUpload.file, \"UTF-8\");\n\t\treader.onload = (event) => {\n\t\t\tsetJsonString(event.target?.result as string);\n\t\t}\n\t\treader.onerror = function (evt) {\n\t\t\tconsole.log(\"oops, fo\")\n\t\t}\n\n\t\tconst updatedFile = {\n\t\t\t...fileToUpload,\n\t\t\tstatus: 'complete',\n\t\t\ticonDescription: 'Upload complete',\n\t\t};\n\t\tsetFiles((files) =>\n\t\t\tfiles.map((file) =>\n\t\t\t\tfile.uuid === fileToUpload.uuid ? updatedFile : file\n\t\t\t)\n\t\t);\n\n\t\t// show x icon after 1 second\n\t\tsetTimeout(() => {\n\t\t\tconst updatedFile = {\n\t\t\t\t...fileToUpload,\n\t\t\t\tstatus: 'edit',\n\t\t\t\ticonDescription: 'Delete file',\n\t\t\t};\n\t\t\tsetFiles((files) =>\n\t\t\t\tfiles.map((file) =>\n\t\t\t\t\tfile.uuid === fileToUpload.uuid ? updatedFile : file\n\t\t\t\t)\n\t\t\t);\n\t\t}, 1000);\n\t};\n\n\tconst onAddFiles = useCallback(\n\t\t(evt, { addedFiles }) => {\n\t\t\tevt.stopPropagation();\n\t\t\tconst newFiles = addedFiles.map((file: any) => ({\n\t\t\t\tuuid: uid(),\n\t\t\t\tfile: file,\n\t\t\t\tname: file.name,\n\t\t\t\tfilesize: file.size,\n\t\t\t\tstatus: 'uploading',\n\t\t\t\ticonDescription: 'Uploading',\n\t\t\t\tinvalidFileType: file.invalidFileType,\n\t\t\t}));\n\t\t\t// eslint-disable-next-line react/prop-types\n\t\t\tif (props.multiple) {\n\t\t\t\tsetFiles([...files, ...newFiles]);\n\t\t\t\tnewFiles.forEach(uploadFile);\n\t\t\t} else if (newFiles[0]) {\n\t\t\t\tsetFiles([newFiles[0]]);\n\t\t\t\tuploadFile(newFiles[0]);\n\t\t\t}\n\t\t},\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t[files, props.multiple]\n\t);\n\n\tconst handleFileUploaderItemClick = useCallback(\n\t\t(_, { uuid: clickedUuid }) =>\n\t\t\tsetFiles(files.filter(({ uuid }) => clickedUuid !== uuid)),\n\t\t[files]\n\t);\n\n\n\tconst generateFragment = () => {\n\t\tconst generatedFragment = generateNewFragment(fragmentJson);\n\n\t\tdispatch({\n\t\t\ttype: FragmentActionType.ADD_ONE,\n\t\t\tdata: generatedFragment\n\t\t});\n\t\tupdateLocalFragments({\n\t\t\ttype: LocalFragmentActionType.ADD,\n\t\t\tdata: { id: generatedFragment.id }\n\t\t});\n\t\thistory.push(`/edit/${generatedFragment.id}`);\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\topen={props.shouldDisplay}\n\t\t\tshouldSubmitOnEnter={false}\n\t\t\tselectorPrimaryFocus='.bx--tile--selectable'\n\t\t\tonRequestSubmit={() => {\n\t\t\t\tgenerateFragment();\n\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CHOOSE_FRAGMENT_MODAL);\n\t\t\t}}\n\t\t\tonRequestClose={() => { props.setShouldDisplay(false); }}\n\t\t\tonSecondarySubmit={() => {\n\t\t\t\tprops.setDisplayedModal(props.lastVisitedModal);\n\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CHOOSE_FRAGMENT_MODAL);\n\t\t\t}}\n\t\t\thasForm\n\t\t\tmodalHeading='Import JSON'\n\t\t\tprimaryButtonText='Done'\n\t\t\tprimaryButtonDisabled={ !jsonString || jsonParseError }\n\t\t\tsecondaryButtonText='Back'>\n\t\t\t<div className={fragmentOptions}>\n\t\t\t\t<FormItem>\n\t\t\t\t\t<p className='bx--file--label'>Upload file</p>\n\t\t\t\t\t<p className='bx--label-description'>\n\t\t\t\t\t\tMax file size is 500kb. Supported file type is .json\n\t\t\t\t\t</p>\n\t\t\t\t\t<FileUploaderDropContainer accept={['.json']} onAddFiles={onAddFiles} />\n\t\t\t\t\t<div className={'bx--file-container'} style={{ width: '100%' }}>\n\t\t\t\t\t\t{files.map(\n\t\t\t\t\t\t\t({\n\t\t\t\t\t\t\t\tuuid,\n\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\tfilesize,\n\t\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t\t\ticonDescription,\n\t\t\t\t\t\t\t\tinvalid,\n\t\t\t\t\t\t\t\t...rest\n\t\t\t\t\t\t\t}) => (\n\t\t\t\t\t\t\t\t<FileUploaderItem\n\t\t\t\t\t\t\t\t\tkey={uid()}\n\t\t\t\t\t\t\t\t\tuuid={uuid}\n\t\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\t\tfilesize={filesize}\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line react/prop-types\n\t\t\t\t\t\t\t\t\tsize={500}\n\t\t\t\t\t\t\t\t\tstatus={status}\n\t\t\t\t\t\t\t\t\ticonDescription={iconDescription}\n\t\t\t\t\t\t\t\t\tinvalid={invalid}\n\t\t\t\t\t\t\t\t\tonDelete={handleFileUploaderItemClick}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</FormItem>\n\t\t\t\t<code style={{ color: '#a00', marginBottom: '10pt', width: '100%' }}>\n\t\t\t\t\t<pre>{ jsonParseError }</pre>\n\t\t\t\t</code>\n\t\t\t\t<TextArea\n\t\t\t\t\tlabelText='JSON to load'\n\t\t\t\t\tplaceholder=\"{'your': 'json', 'goes': 'here'}\"\n\t\t\t\t\thelperText=''\n\t\t\t\t\tvalue={jsonString}\n\t\t\t\t\tonChange={(event: any) => setJsonString(event.target.value)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</Modal>\n\t);\n};\n","import React, {\n\tuseState,\n\tuseContext,\n\tuseEffect\n} from 'react';\nimport { css } from 'emotion';\nimport { DashboardSearch, SortDirection } from './dashboard-search';\nimport { FragmentGroupDisplayed, DashboardHeader } from './dashboard-header';\n\nimport {\n\tCol,\n\tMain,\n\tRow\n} from './../../components';\nimport { FragmentTileList } from './fragment-tile-list';\nimport { FragmentWizard } from './fragment-wizard/fragment-wizard';\nimport { LocalFragmentsContext } from '../../context/local-fragments-context';\nimport { FragmentModal } from '../edit/fragment-modal';\nimport { FragmentsContext, FragmentActionType } from '../../context';\n\nconst fragmentSort = (sortDirection: SortDirection) => function(a: any, b: any) {\n\tif (sortDirection === SortDirection.Descending) {\n\t\treturn Date.parse(a.lastModified) - Date.parse(b.lastModified);\n\t}\n\treturn Date.parse(b.lastModified) - Date.parse(a.lastModified);\n};\n\n// styles for the header (title and content switcher)\n// to override carbon styling for <main>\nconst headerRowSyles = css`\n\tbackground: white;\n\tpadding: 0 2rem;\n\tmargin: 0 -2rem;\n\tpadding-top: 2rem;\n\tmargin-top: -2rem;\n\t.bx--col {\n\t\tpadding: 0;\n\t}\n`;\n\n// additional styles for the search row\nconst searchRowStyles = css`\n\tpadding-right: 0;\n\tpadding-left: 1rem;\n\tmargin: 0 -2rem;\n\tborder-bottom: 1px solid #d6d6d6;\n\t.bx--col {\n\t\tpadding-right: 0;\n\t}\n`;\n\nexport const Dashboard = () => {\n\tconst [{ fragments }, dispatch] = useContext(FragmentsContext);\n\tconst [fragmentGroupDisplayed, setFragmentGroupDisplayed] = useState(FragmentGroupDisplayed.LocalOnly);\n\tconst [fragmentTitleFilter, setFragmentTitleFilter] = useState('');\n\tconst [sortDirection, setSortDirection] = useState(SortDirection.Ascending);\n\tconst [displayWizard, setDisplayWizard] = useState(false);\n\tconst [localFragments] = useContext(LocalFragmentsContext);\n\n\tuseEffect(() => {\n\t\tdispatch({\n\t\t\ttype: FragmentActionType.UPDATE_ALL,\n\t\t\tdata: fragments,\n\t\t\tloaded: true\n\t\t});\n\t// we don't want to run this effect when fragments change because it creates a loop\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [dispatch]);\n\n\tuseEffect(() => {\n\t\tdocument.title = 'Carbon Components Builder • UI Fragments Composer';\n\t}, []);\n\n\tconst getLocalFragments = () => {\n\t\tif (!fragments || fragments.length === 0) {\n\t\t\treturn [];\n\t\t}\n\t\t// when pagination works, change this to take that into account TODO\n\t\treturn fragments.filter((fragment: any) => localFragments.find((lc: any) => lc.id === fragment.id));\n\t};\n\n\tconst filterFragments = (fragments: any) => fragments.filter((fragment: any) => fragment?.title.toLowerCase()\n\t\t.includes(fragmentTitleFilter.toLowerCase()) && !fragment.hidden)\n\t\t.sort(fragmentSort(sortDirection));\n\n\tlet displayedFragments;\n\n\tswitch (fragmentGroupDisplayed) {\n\t\tcase FragmentGroupDisplayed.LocalOnly:\n\t\t\tdisplayedFragments = filterFragments(getLocalFragments());\n\t\t\tbreak;\n\t\tcase FragmentGroupDisplayed.Templates: {\n\t\t\tdisplayedFragments = filterFragments(\n\t\t\t\tfragments.filter((fragment: any) => fragment.labels && fragment.labels.includes('template'))\n\t\t\t);\n\t\t\tbreak;\n\t\t}\n\t\tcase FragmentGroupDisplayed.AllFragments:\n\t\tdefault:\n\t\t\tdisplayedFragments = filterFragments(fragments);\n\t\t\tbreak;\n\t}\n\tconst [modalFragment, setModalFragment] = useState<any>(null);\n\n\treturn (\n\t\t<>\n\t\t\t<Main style={{ marginLeft: '0px' }}>\n\t\t\t\t<Row styles={headerRowSyles}>\n\t\t\t\t\t<Col cols={{\n\t\t\t\t\t\tsm: 12,\n\t\t\t\t\t\tmd: 12,\n\t\t\t\t\t\tlg: 12\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<DashboardHeader\n\t\t\t\t\t\t\tonDisplayedSwitchHandler={setFragmentGroupDisplayed}\n\t\t\t\t\t\t\tfragmentGroupDisplayed={fragmentGroupDisplayed} />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row styles={searchRowStyles}>\n\t\t\t\t\t<Col cols={{\n\t\t\t\t\t\tsm: 12,\n\t\t\t\t\t\tmd: 12,\n\t\t\t\t\t\tlg: 12\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<DashboardSearch\n\t\t\t\t\t\t\tonSearchHandler={setFragmentTitleFilter}\n\t\t\t\t\t\t\tonSortHandler={setSortDirection}\n\t\t\t\t\t\t\tsortDirection={sortDirection}\n\t\t\t\t\t\t\tdisplayWizard={displayWizard}\n\t\t\t\t\t\t\tsetDisplayWizard={setDisplayWizard} />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col cols={{\n\t\t\t\t\t\tsm: 12,\n\t\t\t\t\t\tmd: 12,\n\t\t\t\t\t\tlg: 12\n\t\t\t\t\t}}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t<FragmentTileList\n\t\t\t\t\t\t\t\tfragments={displayedFragments}\n\t\t\t\t\t\t\t\tlocalFragments={localFragments}\n\t\t\t\t\t\t\t\tsetModalFragment={setModalFragment} />\n\t\t\t\t\t\t}\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Main>\n\t\t\t<FragmentWizard\n\t\t\t\tshouldDisplay={displayWizard}\n\t\t\t\tsetShouldDisplay={setDisplayWizard} />\n\t\t\t{modalFragment && <FragmentModal fragment={modalFragment} />}\n\t\t</>\n\t);\n};\n","import React from 'react';\nimport { css } from 'emotion';\nimport { Button } from 'carbon-components-react';\nimport { useHistory } from 'react-router-dom';\nimport { Header } from '../components/header';\n// import the img placeholder svg\nimport placeholder from '../assets/chart-404.svg';\n\n// styles for placeholder\nconst svgStyle = css`\n\twidth: 25vw;\n\theight: auto;\n\tmax-width: 400px;\n`;\n\nconst placeholderContainer = css`\n\tmargin-top: 48px;\n\tdisplay: flex;\n\tflex-direction: column;\n\theight: calc(100vh - 48px);\n\tpadding: 24px;\n\tpadding-top: 64px;\n\talign-items: center;\n`;\n\nexport const NotFound = () => {\n\tconst history = useHistory();\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t<div className={placeholderContainer}>\n\t\t\t\t<img alt=\"Fragment not found\" src={placeholder} className={svgStyle} />\n\t\t\t\t<div style={{ textAlign: 'left' }}>\n\t\t\t\t\t<h3>404: Not found</h3>\n\t\t\t\t\t<p style={{ marginTop: '0.5em' }}>\n\t\t\t\t\t\tThis page does not exist, click  <strong>Go back</strong><br /> to return.\n\t\t\t\t\t</p>\n\t\t\t\t\t<Button style={{ marginTop: '1rem' }} onClick={() => history.goBack()}>Go back</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n","import React, { ErrorInfo } from 'react';\nimport { NotFound } from './not-found';\n\n/* Currently, there lacks react hooks with equivalent\neffect of getDerivedStateFromError and componentDidCatch,\ncurrent component based on: https://gist.github.com/andywer/800f3f25ce3698e8f8b5f1e79fed5c9c,\nthis should be written once the above hooks mentioned above are released.\n*/\n\ntype ErrorHandler = (error: Error, info: ErrorInfo) => void\ntype ErrorHandlingComponent<Props> = (props: Props, error?: Error) => React.ReactNode\n\ntype ErrorState = { error?: Error }\n\nfunction Catch<Props extends {}>(\n\tcomponent: ErrorHandlingComponent<Props>,\n\terrorHandler?: ErrorHandler\n): React.ComponentType<Props> {\n\treturn class Boundary extends React.Component<Props, ErrorState> {\n\t\tstate: ErrorState = { error: undefined }\n\n\t\tstatic getDerivedStateFromError(error: Error) {\n\t\t\treturn { error };\n\t\t}\n\n\t\tcomponentDidCatch(error: Error, info: React.ErrorInfo) {\n\t\t\tif (errorHandler) {\n\t\t\t\terrorHandler(error, info);\n\t\t\t}\n\t\t}\n\n\t\trender() {\n\t\t\treturn component(this.props, this.state.error);\n\t\t}\n\t};\n}\n\ntype Props = {\n\tchildren: React.ReactNode\n}\n\nexport const ErrorBoundary = Catch((props: Props, error?: Error) => {\n\tif (error) {\n\t\treturn <NotFound />;\n\t}\n\treturn <>{props.children}</>;\n});\n","import React, { useState } from 'react';\nimport { HeaderContainer } from 'carbon-components-react';\nimport { Header } from '../components/index';\n\nexport const UIShell = () => {\n\tconst [isSideNavExpanded, setIsSideNavExpanded] = useState(false);\n\n\treturn (\n\t\t<HeaderContainer\n\t\t\trender={() => (\n\t\t\t\t<>\n\t\t\t\t\t<Header\n\t\t\t\t\t\tisSideNavExpanded={isSideNavExpanded}\n\t\t\t\t\t\tsetIsSideNavExpanded={setIsSideNavExpanded} />\n\t\t\t\t</>\n\t\t\t)} />\n\t);\n};\n","import React from 'react';\nimport {\n\tRoute, BrowserRouter as Router, Switch\n} from 'react-router-dom';\nimport { Notification } from './components/index';\nimport {\n\tDashboard,\n\tEdit,\n\tErrorBoundary,\n\tNotFound\n} from './routes';\nimport { FragmentsContextProvider } from './context/fragments-context';\nimport { ModalContextProvider } from './context/modal-context';\nimport { NotificationContextProvider } from './context/notification-context';\nimport { LocalFragmentsContextProvider } from './context/local-fragments-context';\nimport { UIShell } from './components/ui-shell';\nimport { css } from 'emotion';\n\nconst app = css`\n\tnav.bx--side-nav--expanded + div#edit-content {\n\t\tpadding-left: calc(2.25rem + 16rem);\n\t}\n\t// This is the viewport width that causes the edit header items to overlap\n\t@media screen and (max-width: 38.75rem) {\n\t\tnav.bx--side-nav--expanded + div#edit-content {\n\t\t\tpadding-left: 36px;\n\t\t}\n\t}\n`;\n\nexport const App = () => (\n\t<Router basename='carbon-components-builder'>\n\t\t<div className={app}>\n\t\t\t<ErrorBoundary>\n\t\t\t\t<FragmentsContextProvider>\n\t\t\t\t\t<NotificationContextProvider>\n\t\t\t\t\t\t<LocalFragmentsContextProvider>\n\t\t\t\t\t\t\t<UIShell />\n\t\t\t\t\t\t\t<Notification />\n\t\t\t\t\t\t\t<ModalContextProvider>\n\t\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t\t<Route path='/' exact component={Dashboard} />\n\t\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\t\tpath={['/edit', '/edit/:id']}\n\t\t\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\t\t\tcomponent={Edit} />\n\t\t\t\t\t\t\t\t\t<Route path=\"*\" component={NotFound} />\n\t\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t\t</ModalContextProvider>\n\t\t\t\t\t\t</LocalFragmentsContextProvider>\n\t\t\t\t\t</NotificationContextProvider>\n\t\t\t\t</FragmentsContextProvider>\n\t\t\t</ErrorBoundary>\n\t\t\t<span id=\"forkongithub\">\n\t\t\t\t<a href=\"https://github.com/IBM/carbon-components-builder\">Fork on GitHub</a>\n\t\t\t</span>\n\t\t</div>\n\t</Router>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\n// disable eslint beacuse reasons\n/* eslint-disable */\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n    \t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(\n\t\t\t(process as { env: { [key: string]: string } }).env.UI_BASE_URL,\n\t\t\twindow.location.href\n\t\t);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if UI_BASE_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.UI_BASE_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit http://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './app';\nimport * as serviceWorker from './serviceWorker';\n\n// eslint-disable-next-line\nconst render = (Component: any) => ReactDOM.render(<Component/>, document.getElementById('root'));\n\nrender(App);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nif (module.hot) {\n\tmodule.hot.accept('./app', () => {\n\t\tconsole.info('App updated');\n\t\tconst Next = require('./app').App;\n\t\trender(Next);\n\t});\n}\n"],"sourceRoot":""}